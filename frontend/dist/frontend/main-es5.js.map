{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/animations.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component.ts","webpack:///src/app/components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component.html","webpack:///src/app/components/expense-list/expense-list.component.ts","webpack:///src/app/components/expense-list/expense-list.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component.ts","webpack:///src/app/components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component.html","webpack:///src/app/components/recurring-expense-list/recurring-expense-list.component.ts","webpack:///src/app/components/recurring-expense-list/recurring-expense-list.component.html","webpack:///src/app/components/stt-recorder/stt-recorder.component.ts","webpack:///src/app/components/stt-recorder/stt-recorder.component.html","webpack:///src/app/pipes/date-duration.pipe.ts","webpack:///src/app/pipes/date-long-short.pipe.ts","webpack:///src/app/pipes/duration-week-day.pipe.ts","webpack:///src/app/pipes/pretty-currency.pipe.ts","webpack:///src/app/screens/add/add.component.ts","webpack:///src/app/screens/add/add.component.html","webpack:///src/app/screens/edit/edit.component.ts","webpack:///src/app/screens/edit/edit.component.html","webpack:///src/app/screens/filter/filter.component.ts","webpack:///src/app/screens/filter/filter.component.html","webpack:///src/app/screens/groups/groups.component.ts","webpack:///src/app/screens/groups/groups.component.html","webpack:///src/app/screens/home/home.component.ts","webpack:///src/app/screens/home/home.component.html","webpack:///src/app/screens/search/search.component.ts","webpack:///src/app/screens/search/search.component.html","webpack:///src/app/screens/settings/settings-bottom-sheet/settings-bottom-sheet.component.ts","webpack:///src/app/screens/settings/settings-bottom-sheet/settings-bottom-sheet.component.html","webpack:///src/app/screens/settings/settings.component.ts","webpack:///src/app/screens/settings/settings.component.html","webpack:///src/app/services/audio/audio.service.ts","webpack:///src/app/services/category/category.service.ts","webpack:///src/app/services/expenses/Expenses.ts","webpack:///src/app/services/expenses/expense.service.ts","webpack:///src/app/services/filter/filter.service.ts","webpack:///src/app/services/groups/Groups.ts","webpack:///src/app/services/groups/groups.service.ts","webpack:///src/app/services/indexed-dbconnection.service.ts","webpack:///src/app/services/slider/slider.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","slideInAnimation","position","top","left","width","right","routes","path","redirectTo","pathMatch","component","data","animation","AppRoutingModule","forRoot","imports","filterService","AppComponent","router","sliderService","datePipe","title","appHeadline","currentFilter$","getFilter","filterTitles","events","pipe","event","subscribe","url","substring","resetTemporary","monthSwitched$","filter","monthSwitch","tempString","date","group","transform","year","month","last30Active","groups","i","length","resetFilter","outlet","activatedRouteData","selector","templateUrl","styleUrls","animations","AppModule","register","enabled","production","declarations","providers","bootstrap","ExpenseBottomSheetComponent","expense","expenseService","bottomSheetRef","backdropClick","document","body","style","backgroundColor","key","stopPropagation","confirm","deleteExpense","dismiss","show","preventDefault","editExpense","close","ExpenseListComponent","categoryService","bottomSheet","refresh","helper","expenseDeletedNotifier","collapseNotifier","sortMethod$","setTimeout","index","open","opacity","overflow","height","FooterComponent","HeaderComponent","RecurringExpenseBottomSheetComponent","RecurringExpenseListComponent","SttRecorderComponent","audioService","zone","recordingState$","results","inputBuffer","value","getUserMediaStream","audioStream","next","Int16Array","resampleStream","stopResampling","getTextFromAudio","result","alert","transcription","sourceStream","emitInterval","Number","MAX_SAFE_INTEGER","gumStream","resampledFrames$","audioContext","window","AudioContext","webkitAudioContext","audioSource","createMediaStreamSource","node","createScriptProcessor","onaudioprocess","processAudioFrame","getChannelData","context","sampleRate","connect","destination","streamEndNotifier$","resampledStream$","mergeInt16Arrays","arrays","reduce","previous","current","inputFrame","inputSampleRate","push","goalSampleRate","frameLength","outputFrame","sum","num","outputIndex","inputIndex","Math","min","slice","getAudioTracks","stop","startRecording","stopRecording","DateDurationPipe","monthsAbbrev","fromDate","Date","firstExpenseDate","toDate","lastExpenseDate","name","DateLongShortPipe","DurationWeekDayPipe","years","parseInt","toString","split","months","weeks","days","toFixed","pluralizeYear","pluralizeMonth","pluralizeWeek","pluralizeDay","join","PrettyCurrencyPipe","AddComponent","groupsService","_ngZone","onStable","autosize","resizeToFitContent","initialData","currentExpenseForEdit","selectedTabIndex","lastUpdate","expenseForm","required","maxLength","amount","currentDate","category","defaultCategory","description","recurringForm","name_recurring","amount_recurring","month_recurring","getCurrentMonthFilter","category_recurring","group_recurring","description_recurring","reset","defaultGroup","groups$","getGroupsWithoutUpdate","focusInput","nativeElement","focus","controlName","errorName","formType","controls","hasError","formGroup","Object","forEach","field","control","get","markAsTouched","onlySelf","getFullYear","parseMonth","getMonth","getDate","setFormGroupTouched","valid","addExpense","recurring","updateExpense","hide","getFormatDate","createExpense","tabChanged","EditComponent","groupsSelected","FilterComponent","groupService","sortMethods","getGroups","filterState$","state","dateSelected","monthMethod","allGroupsSelected","filterShown$","val","isShown","submitFilter","sortMethod","localStorage","getItem","splice","checked","currentFilter","JSON","parse","newFilter","currentSortMethod","setSortMethod","stringify","setFilter","dateChanged","groupChanged","GroupsComponent","expenses$","getExpenses","subscription","expenses","groupsTotals","calculateGroupsTotals","allTotals","map","el","groupTotal","acc","cur","duration","initializeHelper","unsubscribe","groupName","temporaryFilter","navigate","groups_origin","sorterHelper","reverse","expenseGroup","deleted","amountForGroup","expensesSorted","sort","a","b","dateSorter","first","last","durationInDays","mapped","type","groupCollection","outer","margin","HomeComponent","Highcharts","chartOptions","totalAmount","chartOpened","activeCategory","limitedCategory$","limitedCategory","filtered","matchesFilter","amountSorter","temp","food","accommodation","transport","multimedia","leisure","gear","health_insurance","general","totalCategories","objectToArray","item","calculateChartData","options","chartData","element","y","drawChart","number","categoryTotal","monthTotalsObject","matches","groupFilter","toLowerCase","oldAmount","monthTotalsSorted","monthTotalObjectToArray","getTime","filledTotals","firstMonth","lastMonth","monthString","getMonthDateString","monthTotal","indexForFilled","findIndex","x","UTC","currentIndex","chartStartDate","currentMonthIndex","text","color","tooltip","chart","scrollablePlotArea","minWidth","scrollPositionX","getNormalizedStartMonth","plotOptions","line","pointStart","series","states","hover","legend","xAxis","allowDecimals","tickInterval","labels","crosshair","yAxis","opposite","gridLineColor","formatter","colors","softThreshold","obj","expenseYear","expenseMonth","expenseDate","start","end","matchesInternal","majorTerm$","SearchComponent","componentDestroyed$","majorSystemEasterEggActive","searchTerm$","majorResult$","term","translateWordToNumberRecursive","results$","getSearchResult","matchesFound","matchesTotalAmount","word","noDoubles","removedoubleLetters","normalizedWord","replace","res","_translateWordToNumberRecursive","rest","startsWith","arr","Array","from","char","charAt","terms","singleTerms","normalizedTerms","singleTerm","includes","matchesDate","dateSegments","searchInputElement","seachtext","clear","SettingsBottomSheetComponent","deleteGroup","SettingsComponent","shareShown","animating","recurringExists","recurringExpenses$","defaultGroupSelected","defaultCategorySelected","checkRecurringExists","shallUpdate","navigator","serviceWorker","getRegistrations","registrations","registration","unregister","reloadApp","location","reload","recurringExpenses","fileName","downloadObjectAsJson","file","srcElement","files","reader","FileReader","readAsText","onload","loadDataIntoApp","target","onerror","console","log","json","addGroup","clearData","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","createElement","setAttribute","appendChild","click","remove","setDefaultGroup","setDefaultCategory","newGroupInputValue","addGroupsInputElement","_scrollWithAnimation","requestAnimationFrame","QrCode","scrollIntoView","block","rec","defaultGroupChanged","defaultCategoryChanged","downloadBackup","onImport","deleteData","hardReloadApp","toggleShare","AudioService","http","binaryData","post","buffer","responseType","toPromise","constraints","audio","mediaDevices","getUserMedia","providedIn","CategoryService","categoryColors","setItem","ExpenseService","indexedDBService","connection$","createExpenseDatabase","checkRecurringExpenses","getPrettyMonth","fromBackup","tx","db","transaction","store","objectStore","add","oncomplete","addInitialRecurrentEntries","refreshExpenses","errorCode","currentMonthDate","counter","pastRecurrentExpense","asObservable","put","onsuccess","delete","object_store","request","openCursor","cursor","primaryKey","continue","dbReq","getConnection","onupgradeneeded","upgradeDatabase","FilterService","defaultFilter","a_date","b_date","createComparatorNumber","initialFilter","temporaryFilterStateClipboard","method","incrementedDate","incremented","GroupsService","createGroupDatabase","refreshGroups","IndexedDBConnectionService","stores","objectStoreNames","contains","createObjectStore","autoIncrement","indexedDB","SliderService","active$","activeComponent","environment","apiUrl","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, transition, style, query, animateChild, group, animate } from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('Settings => Home, Settings => Groups, Groups => Home', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ]),\r\n      query(':enter', [\r\n        style({ left: '-100%'})\r\n      ]),\r\n      query(':leave', animateChild()),\r\n      group([\r\n        query(':leave', [\r\n          animate('150ms ease-out', style({ left: '100%'}))\r\n        ]),\r\n        query(':enter', [\r\n          animate('150ms ease-out', style({ left: '0%'}))\r\n        ])\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ]),\r\n    transition('Home => Settings, Home => Groups, Groups => Settings', [\r\n        style({ position: 'relative' }),\r\n        query(':enter, :leave', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            width: '100%'\r\n          })\r\n        ]),\r\n        query(':enter', [\r\n          style({ right: '-100%'})\r\n        ]),\r\n        query(':leave', animateChild()),\r\n        group([\r\n          query(':leave', [\r\n            animate('150ms ease-out', style({ right: '100%'}))\r\n          ]),\r\n          query(':enter', [\r\n            animate('150ms ease-out', style({ right: '0%'}))\r\n          ])\r\n        ]),\r\n        query(':enter', animateChild()),\r\n      ])\r\n  ]);","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddComponent } from './screens/add/add.component';\nimport { HomeComponent } from './screens/home/home.component';\nimport { SettingsComponent } from './screens/settings/settings.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GroupsComponent } from './screens/groups/groups.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, data: {animation: 'Home'} },\n  { path: 'settings', component: SettingsComponent, data: {animation: 'Settings'}  },\n  { path: 'groups', component: GroupsComponent ,data: {animation: 'Groups'}},\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { RouterOutlet, Router, NavigationStart } from '@angular/router';\r\nimport { slideInAnimation } from './animations';\r\nimport { SliderService } from './services/slider/slider.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { FilterService } from './services/filter/filter.service';\r\nimport { combineLatest } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less'],\r\n  animations: [\r\n    slideInAnimation\r\n    // animation triggers go here\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Expenses';\r\n  public appHeadline: string = \"ExpenseManager\";\r\n\r\n  public currentFilter$ = this.filterService.getFilter();\r\n  public filterTitles: { date: string; group: string } = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public sliderService: SliderService,\r\n    public filterService: FilterService,\r\n    private datePipe: DatePipe,\r\n  ) {\r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationStart)\r\n    ).subscribe((event: NavigationStart) => {\r\n      let url = event.url.substring(1);\r\n      switch (url) {\r\n        case \"home\":\r\n          this.appHeadline = \"Overview\";\r\n          break;\r\n        case \"groups\":\r\n          this.appHeadline = \"Groups\";\r\n          this.resetTemporary();\r\n          break;\r\n        case \"settings\":\r\n          this.appHeadline = \"Settings\";\r\n          this.resetTemporary();\r\n          break;\r\n        default:\r\n          this.appHeadline = \"Overview\";\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    combineLatest(this.currentFilter$, this.filterService.monthSwitched$).subscribe(([filter, monthSwitch]) => {\r\n      let tempString = {\r\n        date: null,\r\n        group: null\r\n      }\r\n      if (monthSwitch) {\r\n        tempString.date = this.datePipe.transform(`${monthSwitch.year}-${monthSwitch.month}-01`, 'MMM y');\r\n      } else {\r\n        if (filter.date) {\r\n          tempString.date = this.datePipe.transform(`${filter.date.year}-${filter.date.month}-01`, 'MMM y');\r\n        }else if(filter.last30Active){\r\n          tempString.date = \"Last 30 days\" \r\n        }\r\n      }\r\n\r\n      if (filter.groups) {\r\n        // TODO not just first but all\r\n        tempString.group = `${filter.groups[0]}`;\r\n        for(let i=1; i<filter.groups.length;i++){\r\n          tempString.group += `, ${filter.groups[i]}`\r\n        }\r\n      }\r\n      this.filterTitles = tempString;\r\n    })\r\n  }\r\n\r\n  resetTemporary(){\r\n    this.filterService.resetFilter();\r\n    // this.router.navigate(['/groups']);\r\n  }\r\n\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n}\r\n","<app-header *ngIf=\"appHeadline !== 'Overview'\">\r\n  <div class=\"flexbox justify align h-100\">\r\n    <span>{{appHeadline}}</span>\r\n  </div>\r\n</app-header>\r\n\r\n<app-header *ngIf=\"appHeadline === 'Overview'\">\r\n  <div class=\"home-general-header flexbox justify align h-100\">\r\n    <i class=\"material-icons-outlined back-icon\" (click)=\"filterService.hide()\" *ngIf=\"filterService.filterShown$ | async\">arrow_back_ios</i>\r\n    <i class=\"material-icons-outlined back-icon\" (click)=\"resetTemporary()\" *ngIf=\"(filterService.filterState$ | async).temporaryFilter && !(filterService.filterShown$ | async)\">close</i>\r\n    <span *ngIf=\"!(filterService.filterShown$ | async)\">{{appHeadline}}</span>\r\n    <span *ngIf=\"filterService.filterShown$ | async\">Filter</span>\r\n    <i class=\"material-icons-outlined filter-icon\" (click)=\"filterService.show()\" *ngIf=\"!(filterService.filterShown$ | async)\">filter_list</i>\r\n  </div>\r\n \r\n  <div class=\"home-component-header animated faster\" [className]=\"(!(filterService.filterShown$ | async) && appHeadline == 'Overview') ? 'slideInDown' : 'slideOutUp'\" *ngIf=\"filterTitles?.date || filterTitles?.group\">\r\n    <i class=\"material-icons\" [class.disabled]=\"!currentFilter$.value.date\" (click)=\"filterService.switchMonth('decrement')\">chevron_left</i>\r\n    <div class=\"filter-title\" (click)=\"filterService.show()\">\r\n        <span *ngIf=\"filterTitles?.date\">{{filterTitles.date}}</span>\r\n        <span *ngIf=\"filterTitles?.date && filterTitles?.group\"> - </span>\r\n        <span *ngIf=\"filterTitles?.group\">{{filterTitles.group}}</span>\r\n    </div>    \r\n    <i class=\"material-icons\"  [class.disabled]=\"!currentFilter$.value.date\" (click)=\"filterService.switchMonth('increment')\">chevron_right</i>\r\n  </div>\r\n\r\n</app-header>\r\n\r\n<div class=\"router-body\" [@routeAnimations]=\"prepareRoute(outlet)\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n\r\n\r\n<app-footer></app-footer>\r\n\r\n<div class=\"app-slider\" [class.sliderActive]=\"sliderService.getActiveComponent()\">\r\n  <app-add *ngIf=\"sliderService.activeComponent === 'add'\"></app-add>\r\n  <app-search *ngIf=\"sliderService.activeComponent === 'search'\"></app-search>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { AddComponent } from './screens/add/add.component';\r\nimport { HomeComponent } from './screens/home/home.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SettingsComponent } from './screens/settings/settings.component';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { GroupsComponent } from './screens/groups/groups.component';\r\nimport { SearchComponent } from './screens/search/search.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { FilterComponent } from './screens/filter/filter.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { PrettyCurrencyPipe } from './pipes/pretty-currency.pipe';\r\nimport { DatePipe } from '@angular/common';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { DateDurationPipe } from './pipes/date-duration.pipe';\r\nimport { DateLongShortPipe } from './pipes/date-long-short.pipe';\r\nimport { ExpenseListComponent } from './components/expense-list/expense-list.component';\r\nimport { EditComponent } from './screens/edit/edit.component';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport { ExpenseBottomSheetComponent } from './components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component';\r\nimport { SettingsBottomSheetComponent } from './screens/settings/settings-bottom-sheet/settings-bottom-sheet.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { RecurringExpenseListComponent } from './components/recurring-expense-list/recurring-expense-list.component';\r\nimport { RecurringExpenseBottomSheetComponent } from './components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component';\r\nimport { DurationWeekDayPipe } from './pipes/duration-week-day.pipe';\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\nimport { SttRecorderComponent } from './components/stt-recorder/stt-recorder.component';\r\nregisterLocaleData(localeDe, 'de');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SettingsComponent,\r\n    GroupsComponent,\r\n    SearchComponent,\r\n    FilterComponent,\r\n    PrettyCurrencyPipe,\r\n    DateDurationPipe,\r\n    DateLongShortPipe,\r\n    ExpenseListComponent,\r\n    EditComponent,\r\n    ExpenseBottomSheetComponent,\r\n    SettingsBottomSheetComponent,\r\n    RecurringExpenseListComponent,\r\n    RecurringExpenseBottomSheetComponent,\r\n    DurationWeekDayPipe,\r\n    SttRecorderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatTabsModule,\r\n    ReactiveFormsModule,\r\n    MatBottomSheetModule,\r\n    MatNativeDateModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    HighchartsChartModule,\r\n    HttpClientModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    DatePipe\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { ExpenseService } from 'src/app/services/expenses/expense.service';\n\n@Component({\n  selector: 'app-expense-bottom-sheet',\n  templateUrl: './expense-bottom-sheet.component.html',\n  styleUrls: ['./expense-bottom-sheet.component.less']\n})\nexport class ExpenseBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public expense: any,\n    public sliderService: SliderService,\n    public expenseService: ExpenseService,\n    private bottomSheetRef: MatBottomSheetRef<ExpenseBottomSheetComponent>\n    ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  public deleteExpense(e: MouseEvent, key: number) {\n    e.stopPropagation();\n    if (confirm(\"Do you really want to delete this expense?\")) {\n      this.expenseService.deleteExpense(key, \"expenses\");\n      this.dismiss();\n    }\n    // this.detailViewShownForIndex = null;\n  }\n\n  editExpense(e: MouseEvent){\n    this.sliderService.show('add', this.expense)\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"expense-menu\">\n    <div class=\"option-container\">\n        <div class=\"edit menu-item\" (click)=\"editExpense($event)\">Edit</div>\n        <div class=\"delete menu-item\" (click)=\"deleteExpense($event, expense.key)\">Delete</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ExpenseBottomSheetComponent } from './expense-bottom-sheet/expense-bottom-sheet.component';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Observable, merge } from 'rxjs';\nimport { FilterService } from 'src/app/services/filter/filter.service';\n\n@Component({\n  selector: 'app-expense-list',\n  animations: [\n    trigger('slideInOut', [\n      state('out', style({\n        opacity: '0',\n        overflow: 'hidden',\n        height: '0px',\n      })),\n      state('in', style({\n        opacity: '1',\n        overflow: 'hidden',\n        height: '*',\n      })),\n      transition('out => in', animate('150ms ease-in-out')),\n      transition('in => out', animate('150ms ease-in-out'))\n    ])\n  ],\n  templateUrl: './expense-list.component.html',\n  styleUrls: ['./expense-list.component.less']\n})\nexport class ExpenseListComponent implements OnInit {\n\n  constructor(\n    public expenseService: ExpenseService,\n    public categoryService: CategoryService,\n    public filterService: FilterService,\n    public sliderService: SliderService,\n    private bottomSheet: MatBottomSheet\n  ) { }\n\n  @Input() public expenses: Expense[];\n  @Input() public collapseNotifier: Observable<void>;\n    public refresh: boolean = true;\n\n  ngOnInit(): void {\n    merge(this.expenseService.expenseDeletedNotifier,this.collapseNotifier).subscribe(()=>{\n      this.helper= {}\n    });\n    //TODO : Quick fix for testing --> Debug! \n    this.filterService.sortMethod$.subscribe(()=>{\n      this.refresh = false;\n      setTimeout(() => {\n        this.refresh=true;\n      }, 0);\n    })\n  }\n\n  public helper = {}\n  helpMenuOpenForIndex(index: number):string{\n    return this.helper[index] || 'out';\n  }\n\n  toggleHelpMenu(index: number): void {\n    if(this.helper[index]){\n      //already exists --> is open\n      this.helper = {};\n    }else{\n      this.helper = {};\n      this.helper[index] =  'in';\n    }\n  }\n\n  public stopPropagation(e: MouseEvent){\n    e.stopPropagation();\n  }\n\n  openBottomSheet(e:MouseEvent, expense: any): void {\n    e.stopPropagation();\n    document.body.style.backgroundColor=\"#4f5053\";\n    this.bottomSheet.open(ExpenseBottomSheetComponent,{data: expense});\n  }\n\n}\n","<div class=\"expense-list\" (click)=\"stopPropagation($event)\" *ngIf=\"refresh\">\n    <div *ngFor=\"let expense of expenses; let i = index\" class=\"expense-item\" (click)=\"toggleHelpMenu(i)\" >\n        <span class=\"recurring\" *ngIf=\"expense.recurring\">Monthly</span> \n        <div class=\"category-indicator\" [style.background-color]=\"categoryService.categoryColors[expense.category]\"></div>\n        <div class=\"item-content\">\n            <div class=\"minimal-info\" >\n                <div class=\"date info-item\">{{expense.date | dateLongShort}}</div> \n                <div class=\"name info-item\">{{expense.name}}</div>\n                <div class=\"amount info-item\">{{expense.amount | prettyCurrency}}</div>\n            </div>\n            <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i)\" >\n                <div class=\"description flexbox\" *ngIf=\"expense.description\">\n                    <!-- <i class=\"material-icons-outlined mr-8\">description</i>-->\n                    <span>{{expense.description}}</span>                    \n                </div>\n\n                <div class=\"group\">\n                    <div class=\"group-title flexbox align\">\n                        <!-- <div class=\"image-icon groups mr-8\"></div> -->\n                        <span>Group:</span>\n                    </div>\n                    <div class=\"group-name\"> {{expense.group}}</div>   \n                    <div class=\"action-buttons\">\n                        <i  class=\"material-icons\" (click)=\"openBottomSheet($event, expense)\">more_horiz</i>                    \n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <i class=\"material-icons-outlined\" (click)=\"expenseService.deleteExpense(expense.key)\">close</i> -->\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SliderService } from 'src/app/services/slider/slider.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.less']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(\n    public sliderService: SliderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer-component-container\">\n  <span routerLink=\"/home\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon home\"></div>\n    <!-- <img routerLink=\"/home\" routerLinkActive=\"active\" class=\"image-icon\" src=\"../../../assets/images/home_outlined.png\"> -->\n  </span>\n  \n  <span routerLink=\"/groups\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon groups\" ></div>\n  </span>\n\n  <span class=\"flex-1 flexbox justify h-100 align\" (click)=\"sliderService.show('add')\">\n    <div class=\"image-icon add\" ></div>\n  </span>\n\n  <span  class=\"flex-1 flexbox justify h-100 align\" (click)=\"sliderService.show('search')\">\n    <div class=\"image-icon search\"></div>\n  </span>\n  \n\n  <span routerLink=\"/settings\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon settings\"></div>\n  </span>\n  <app-stt-recorder></app-stt-recorder>\n\n  <!-- <i routerLink=\"/settings\" routerLinkActive=\"active\" class=\"material-icons-outlined\">settings</i> -->\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"header-component-container\">\n    <ng-content></ng-content>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { ExpenseService } from 'src/app/services/expenses/expense.service';\n\n@Component({\n  selector: 'app-recurring-expense-bottom-sheet',\n  templateUrl: './recurring-expense-bottom-sheet.component.html',\n  styleUrls: ['./recurring-expense-bottom-sheet.component.less']\n})\nexport class RecurringExpenseBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public expense: any,\n    public sliderService: SliderService,\n    public expenseService: ExpenseService,\n    private bottomSheetRef: MatBottomSheetRef<RecurringExpenseBottomSheetComponent>\n    ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  public deleteExpense(e: MouseEvent, key: number) {\n    e.stopPropagation();\n    if (confirm(\"Do you really want to delete this recurring expense? Past entries won't be deleted!\")) {\n      this.expenseService.deleteExpense(key, \"recurringExpenses\");\n      this.dismiss();\n    }\n    // this.detailViewShownForIndex = null;\n  }\n\n  editExpense(e: MouseEvent){\n    this.sliderService.show('add', this.expense)\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"expense-menu\">\n    <div class=\"option-container\">\n        <div class=\"edit menu-item\" (click)=\"editExpense($event)\">Edit</div>\n        <div class=\"delete menu-item\" (click)=\"deleteExpense($event, expense.key)\">Delete</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Observable } from 'rxjs';\nimport { RecurringExpenseBottomSheetComponent } from './expense-bottom-sheet/recurring-expense-bottom-sheet.component';\n\n@Component({\n  selector: 'app-recurring-expense-list',\n  animations: [\n    trigger('slideInOut', [\n      state('out', style({\n        opacity: '0',\n        overflow: 'hidden',\n        height: '0px',\n      })),\n      state('in', style({\n        opacity: '1',\n        overflow: 'hidden',\n        height: '*',\n      })),\n      transition('out => in', animate('150ms ease-in-out')),\n      transition('in => out', animate('150ms ease-in-out'))\n    ])\n  ],\n  templateUrl: './recurring-expense-list.component.html',\n  styleUrls: ['./recurring-expense-list.component.less']\n})\nexport class RecurringExpenseListComponent implements OnInit {\n\n  constructor(\n    public expenseService: ExpenseService,\n    public categoryService: CategoryService,\n    public sliderService: SliderService,\n    private bottomSheet: MatBottomSheet\n  ) { }\n\n  @Input() public expenses: Expense[];\n  @Input() public collapseNotifier: Observable<void>;\n  public detailViewShownForIndex: number;\n\n  ngOnInit(): void {\n    this.expenseService.expenseDeletedNotifier.subscribe(()=>{\n      this.helper = {}\n    });\n    this.collapseNotifier.subscribe(()=>{\n      this.helper = {}\n    })\n  }\n\n  public helper = {}\n  helpMenuOpenForIndex(index: number):string{\n    return this.helper[index] || 'out';\n  }\n\n  toggleHelpMenu(index: number): void {\n    if(this.helper[index]){\n      //already exists --> is open\n      this.helper = {};\n    }else{\n      this.helper = {};\n      this.helper[index] =  'in';\n    }\n  }\n\n  public stopPropagation(e: MouseEvent){\n    e.stopPropagation();\n  }\n\n  // public toggleDetailView(index: number) {\n  //   if (this.detailViewShownForIndex != null && this.detailViewShownForIndex == index) {\n  //     this.detailViewShownForIndex = null;\n  //   } else {\n  //     this.detailViewShownForIndex = index;\n  //   }\n  // }\n\n  openBottomSheet(e:MouseEvent, expense: any): void {\n    e.stopPropagation();\n    document.body.style.backgroundColor=\"#4f5053\";\n    this.bottomSheet.open(RecurringExpenseBottomSheetComponent,{data: expense});\n    // ExpenseBottomSheetComponent.\n  }\n\n}\n","<div class=\"expense-list\" (click)=\"stopPropagation($event)\">\n    <div *ngFor=\"let expense of expenses; let i = index\" class=\"expense-item\" (click)=\"toggleHelpMenu(i)\" >\n        <div class=\"category-indicator\" [style.background-color]=\"categoryService.categoryColors[expense.category]\"></div>\n        <div class=\"item-content\">\n            <div class=\"minimal-info\" >\n                <!-- <div class=\"date info-item\">{{expense.date | dateLongShort}}</div>  -->\n                <div class=\"name info-item\">{{expense.name}}</div>\n                <div class=\"amount info-item\">{{expense.amount | prettyCurrency}}</div>\n            </div>\n            <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i)\" >\n                <div class=\"description\" *ngIf=\"expense.description\">{{expense.description}}</div>\n                <div class=\"group\">\n                    <div class=\"group-title\">Since:</div>\n                    <div class=\"group-name\"> {{expense.date | date:'MMM y'}}</div>   \n                </div>\n                <div class=\"group\">\n                    <div class=\"group-title\">Group:</div>\n                    <div class=\"group-name\"> {{expense.group}}</div>   \n                    <div class=\"action-buttons\">\n                        <i  class=\"material-icons\" (click)=\"openBottomSheet($event, expense)\">more_horiz</i>                    \n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <i class=\"material-icons-outlined\" (click)=\"expenseService.deleteExpense(expense.key)\">close</i> -->\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { AudioService } from 'src/app/services/audio/audio.service';\nimport { takeUntil, bufferTime, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-stt-recorder',\n  templateUrl: './stt-recorder.component.html',\n  styleUrls: ['./stt-recorder.component.less']\n})\nexport class SttRecorderComponent implements OnInit {\n\n  constructor(\n    private audioService: AudioService,\n    private zone: NgZone,\n  ) { }\n\n  public recordingState$: BehaviorSubject<string> = new BehaviorSubject('inactive');\n  private data: Int16Array;\n  public results: any[] = [];\n\n\n  ngOnInit(): void {\n  }\n\n  async startRecording() {\n    if (this.recordingState$.value === 'inactive') {\n      let audioStream = await this.audioService.getUserMediaStream();\n\n      this.recordingState$.next(\"recording\");\n\n      this.data = new Int16Array();\n      this.resampleStream(audioStream).subscribe((data) => {\n        this.data = new Int16Array([...this.data, ...data]);\n      });\n    }\n  }\n\n  async stopRecording() {\n    if (this.recordingState$.value === 'recording') {\n      this.stopResampling();\n      this.recordingState$.next('inactive');\n      let result = await this.audioService.getTextFromAudio(this.data);\n      alert(result.transcription);\n      // if (metadataResult.transcription !== \"\") {\n      //   this.results.push(metadataResult);\n      // }\n    }\n  }\n\n\n  audioContext: AudioContext;\n  gumStream: MediaStream;\n  resampledFrames$: Subject<Int16Array>;\n  streamEndNotifier$: Subject<void>;\n  resampledStream$: Observable<Int16Array>;\n\n  resampleStream(sourceStream: MediaStream, emitInterval: number = Number.MAX_SAFE_INTEGER / 10): Observable<Int16Array> {\n    this.gumStream = sourceStream;\n    this.resampledFrames$ = new Subject<Int16Array>();\n\n    //TODO: Fix 'as any'\n    this.audioContext = new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n    let audioSource = this.audioContext.createMediaStreamSource(sourceStream);\n    let node = this.audioContext.createScriptProcessor(4096, 1, 1);\n    node.onaudioprocess = (e) => {\n      this.processAudioFrame(e.inputBuffer.getChannelData(0), audioSource.context.sampleRate);\n    };\n    audioSource.connect(node);\n    node.connect(this.audioContext.destination);\n\n    this.streamEndNotifier$ = new Subject<void>();\n\n    this.resampledStream$ = this.resampledFrames$.pipe(\n      takeUntil(this.streamEndNotifier$),\n      bufferTime(emitInterval),\n      map(this.mergeInt16Arrays),\n    );\n    return this.resampledStream$;\n  }\n  mergeInt16Arrays(arrays: Int16Array[]): Int16Array {\n    return arrays.reduce((previous, current) => {\n        return new Int16Array([...previous, ...current]);\n    }, new Int16Array())\n}\n\n  inputBuffer = [];\n\n  processAudioFrame(inputFrame, inputSampleRate: number) {\n    for (let i = 0; i < inputFrame.length; i++) {\n        this.inputBuffer.push((inputFrame[i]) * 32767);\n    }\n\n    const goalSampleRate = 16000;\n    const frameLength = 512;\n\n    while ((this.inputBuffer.length * goalSampleRate / inputSampleRate) > frameLength) {\n        let outputFrame = new Int16Array(frameLength);\n        let sum = 0;\n        let num = 0;\n        let outputIndex = 0;\n        let inputIndex = 0;\n\n        while (outputIndex < frameLength) {\n            sum = 0;\n            num = 0;\n            while (inputIndex < Math.min(this.inputBuffer.length, (outputIndex + 1) * inputSampleRate / goalSampleRate)) {\n                sum += this.inputBuffer[inputIndex];\n                num++;\n                inputIndex++;\n            }\n            outputFrame[outputIndex] = sum / num;\n            outputIndex++;\n        }\n\n        this.resampledFrames$.next(outputFrame);\n        this.inputBuffer = this.inputBuffer.slice(inputIndex);\n    }\n}\nstopResampling() {\n  //emit last ping since intervall won't ping last time at say 800ms \n  this.streamEndNotifier$.next(); \n  this.audioContext.close();\n  this.gumStream.getAudioTracks()[0].stop();\n  this.inputBuffer = [];\n}\n\n\n\n}\n","<p>stt-recorder works!</p>\n\n\n<div class=\"recorder\" (pointerdown)=\"startRecording()\" (pointerup)=\"stopRecording()\">\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupTotal } from '../services/groups/groups.service';\nimport { isSameDay, isSameMonth, isSameYear, getDate, getMonth, getYear } from 'date-fns';\n\n@Pipe({\n  name: 'dateDuration'\n})\nexport class DateDurationPipe implements PipeTransform {\n\n  private monthsAbbrev: string[]= [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\" ,\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dez\"];\n\n  transform(value: Partial<GroupTotal>): string {\n    let fromDate= new Date(value.firstExpenseDate);\n    let toDate =  new Date(value.lastExpenseDate);\n\n    // 25 Feb. 2020\n    if(isSameDay(fromDate,toDate)){\n      return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)}`;\n    }\n    \n    if(isSameMonth(fromDate,toDate)){\n      return `${getDate(fromDate)} - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)}`;\n    }\n\n    if(isSameYear(fromDate,toDate)){\n      return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(toDate)]}.  ${getYear(fromDate)}`;\n    }\n\n    return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)} - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(toDate)]}.  ${getYear(toDate)}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getYear } from 'date-fns';\n\n@Pipe({\n  name: 'dateLongShort'\n})\nexport class DateLongShortPipe implements PipeTransform {\n\n  constructor(\n    private datePipe: DatePipe,\n  ){}\n\n  transform(date: string): string {\n    if(getYear(new Date(date)) == getYear(new Date())){\n      return this.datePipe.transform(date, 'd MMM')\n    }else{\n      return this.datePipe.transform(date, 'd MMM y')\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'durationWeekDay'\n})\nexport class DurationWeekDayPipe implements PipeTransform {\n\n  transform(value: number): string {\n    let result=[]\n    let years = parseInt((value/(365)).toString().split(\".\")[0]);\n    let months = parseInt(((value - years*365)/30.4167).toString().split(\".\")[0]);\n    let weeks = parseInt(((value - years*365 - months*30.4167)/7).toString().split(\".\")[0]);\n    let days = parseInt((value - weeks*7 - months*30.4167 - years*365).toFixed(0));\n    \n    // if(value >400){\n    //   debugger;\n    // }\n\n    if(years>0){\n      result.push(`${years} ${this.pluralizeYear(years)}`)\n    }\n\n    if(months>0){\n      result.push(`${months} ${this.pluralizeMonth(months)}`)\n    }\n    \n    if(weeks>0){\n      result.push(`${weeks} ${this.pluralizeWeek(weeks)}`);\n    }\n\n    if(days>0 && years==0){\n      result.push(`${days} ${this.pluralizeDay(days)}`);\n    }\n    \n    return result.join(\", \");\n    \n  }\n  \n  pluralizeYear(years: number): string{\n    if(years>0){\n      return \"year\";\n    }else{\n      return \"years\";\n    }\n  }\n\n  pluralizeMonth(months: number): string{\n    if(months>1){\n      return \"months\";\n    }else{\n      return \"month\";\n    }\n  }\n\n  pluralizeWeek(weeks: number): string{\n    if(weeks>1){\n      return \"weeks\";\n    }else{\n      return \"week\";\n    }\n  }\n\n  pluralizeDay(days: number): string{\n    if(days>1){\n      return \"days\";\n    }else{\n      return \"day\";\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'prettyCurrency'\n})\nexport class PrettyCurrencyPipe implements PipeTransform {\n\n  transform(value: number): string {\n    return `${value.toFixed(2)}€`;\n  }\n\n}","import { Component, OnInit, ViewChild, ElementRef, NgZone, AfterViewInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { take } from 'rxjs/operators';\r\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.less']\r\n})\r\nexport class AddComponent implements OnInit, AfterViewInit {\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    public expenseService: ExpenseService,\r\n    public groupsService: GroupsService,\r\n    public categoryService: CategoryService,\r\n    private filterService: FilterService,\r\n    private _ngZone: NgZone\r\n  ) { }\r\n\r\n  @ViewChild(\"focusInputAdd\") public focusInput: ElementRef;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n\r\n  public expenseForm: FormGroup;\r\n  public recurringForm: FormGroup;\r\n  public selectedTabIndex: number;\r\n\r\n  public groups$: Observable<GroupItem[]>;\r\n  public initialData: Expense;\r\n\r\n  ngOnInit(): void {\r\n    this.initialData = this.sliderService.currentExpenseForEdit;\r\n    this.selectedTabIndex = (this.initialData?.lastUpdate) ? 1: 0;\r\n\r\n    this.expenseForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.maxLength(35)]),\r\n      amount: new FormControl('', Validators.required),\r\n      date: new FormControl(this.currentDate(), Validators.required),\r\n      category: new FormControl(this.categoryService.defaultCategory, Validators.required),\r\n      group: new FormControl(\"General\", Validators.required),\r\n      description: new FormControl('', Validators.maxLength(200))\r\n    });\r\n\r\n    this.recurringForm = new FormGroup({\r\n      name_recurring: new FormControl('', [Validators.required, Validators.maxLength(35)]),\r\n      amount_recurring: new FormControl('', Validators.required),\r\n      month_recurring: new FormControl(this.filterService.getCurrentMonthFilter(), Validators.required),\r\n      category_recurring: new FormControl('general', Validators.required),\r\n      group_recurring: new FormControl(\"General\", Validators.required),\r\n      description_recurring: new FormControl('', Validators.maxLength(200)),\r\n    });\r\n\r\n    //TODO : Dirty workaround\r\n    if (this.initialData) {\r\n      setTimeout(() => {\r\n        if(this.initialData.lastUpdate){\r\n          this.recurringForm.reset({\r\n            name_recurring: this.initialData.name,\r\n            amount_recurring: this.initialData.amount,\r\n            month_recurring: this.initialData.date.substring(0,7),\r\n            category_recurring: this.initialData.category,\r\n            group_recurring: this.initialData.group,\r\n            description_recurring: this.initialData.description\r\n          });\r\n        }else{\r\n          this.expenseForm.reset({\r\n            name: this.initialData.name,\r\n            amount: this.initialData.amount,\r\n            date: this.initialData.date,\r\n            category: this.initialData.category,\r\n            group: this.initialData.group,\r\n            description: this.initialData.description\r\n          });\r\n        }\r\n      }, 100);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.expenseForm.reset({\r\n          name: '',\r\n          amount: '',\r\n          date: this.currentDate(),\r\n          category: this.categoryService.defaultCategory,\r\n          group: this.groupsService.defaultGroup,\r\n          description: ''\r\n        })\r\n      }, 100);\r\n    }\r\n    this.groups$ = this.groupsService.getGroupsWithoutUpdate();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if(!this.initialData){\r\n      this.focusInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n\r\n  tabChanged(e: MatTabChangeEvent) {\r\n    this.selectedTabIndex = e.index;\r\n  }\r\n\r\n  hasError(controlName: string, errorName: string, formType: string) {\r\n    if (formType === \"single\") {\r\n      return this.expenseForm.controls[controlName].hasError(errorName);\r\n    } else {\r\n      return this.recurringForm?.controls[controlName]?.hasError(errorName);\r\n    }\r\n  }\r\n\r\n  private setFormGroupTouched(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n\r\n  currentDate() {\r\n    const currentDate = new Date();\r\n    \r\n    return `${currentDate.getFullYear()}-${this.filterService.parseMonth(currentDate.getMonth()+1)}-${this.filterService.parseMonth(currentDate.getDate())}`;\r\n  }\r\n\r\n  createExpense() {\r\n    if (this.selectedTabIndex === 0) {\r\n      let expense= this.expenseForm.value;\r\n      this.setFormGroupTouched(this.expenseForm);\r\n      if (this.expenseForm.valid) {\r\n        if (!this.initialData) {\r\n          this.expenseService.addExpense(expense, \"expenses\");\r\n        } else {\r\n          let key = this.initialData.key;\r\n          if(this.initialData.recurring){\r\n            expense.recurring = true;\r\n          }\r\n          this.expenseService.updateExpense(key, expense, \"expenses\");\r\n        }\r\n        this.sliderService.hide();\r\n      }\r\n    } else {\r\n      this.setFormGroupTouched(this.recurringForm);\r\n      let expense= {\r\n        name: this.recurringForm.value.name_recurring,\r\n        amount: this.recurringForm.value.amount_recurring,\r\n        date: this.recurringForm.value.month_recurring + \"-01\",\r\n        category: this.recurringForm.value.category_recurring,\r\n        group: this.recurringForm.value.group_recurring,\r\n        description: this.recurringForm.value.description_recurring,\r\n        recurring: true,\r\n        lastUpdate: null\r\n      };\r\n      \r\n      if (this.recurringForm.valid) {\r\n        if(!this.initialData){\r\n          expense.lastUpdate= this.expenseService.getFormatDate(new Date());\r\n          this.expenseService.addExpense(expense, \"recurringExpenses\");\r\n        }else{\r\n          expense.lastUpdate= this.initialData.lastUpdate\r\n          this.expenseService.updateExpense(this.initialData.key, expense, \"recurringExpenses\")\r\n        }\r\n        this.sliderService.hide();\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"add-component-container\">\r\n  <app-header>\r\n    <div class=\"flexbox align h-100 space-between p-0-8 slider-header\">\r\n      <i class=\"slider-header-icon\" (click)=\"sliderService.hide()\" class=\"material-icons-outlined slider-header-icon\">close</i>\r\n      <span *ngIf=\"initialData\">Edit</span>\r\n      <span *ngIf=\"!initialData\">Add</span>\r\n      <i class=\"material-icons-outlined slider-header-icon submit-icon\" [class.enabled]=\"expenseForm.valid || recurringForm.valid\" (click)=\"createExpense()\">check</i>\r\n    </div>\r\n  </app-header>\r\n\r\n  <mat-tab-group disableRipple mat-stretch-tabs class=\"example-stretched-tab\" (selectedTabChange)=\"tabChanged($event)\" [selectedIndex]=\"initialData?.lastUpdate? '1': '0'\">\r\n    <mat-tab [disabled]=\"initialData?.lastUpdate && initialData\" label=\"Single\"> \r\n      <div class=\"content-container\">\r\n        <form class=\"expense-form\" [formGroup]=\"expenseForm\" autocomplete=\"off\" (submit)=\"createExpense()\"\r\n          #formDirective=\"ngForm\">\r\n          \r\n          <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n            <mat-label>Name</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"name\" >\r\n            <mat-error *ngIf=\"hasError('name', 'required', 'single')\">Name is required</mat-error>\r\n            <mat-error *ngIf=\"hasError('name', 'maxlength', 'single')\">Max. 35 characters allowed</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\" class=\"amount-input\">\r\n            <mat-label>Amount (€)</mat-label>\r\n            <input type=\"number\" matInput formControlName=\"amount\" #focusInputAdd>\r\n            <mat-error *ngIf=\"hasError('amount', 'required', 'single')\">Amount is required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Category</mat-label>\r\n            <select matNativeControl formControlName=\"category\">\r\n              <option value=\"food\">Food</option>\r\n              <option value=\"accommodation\">Accommodation</option>\r\n              <option value=\"transport\">Transport</option>\r\n              <option value=\"leisure\">Leisure</option>\r\n              <option value=\"multimedia\">Multimedia</option>\r\n              <option value=\"gear\">Gear</option>\r\n              <option value=\"health_insurance\">Health & Insurance</option>\r\n              <option value=\"general\">General</option>\r\n            </select>\r\n          </mat-form-field> \r\n\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Group</mat-label>\r\n            <select matNativeControl formControlName=\"group\" class=\"group-input-field\">\r\n              <option value=\"General\">General</option>\r\n              <option *ngFor=\"let group of groups$ | async\" value=\"{{group.groupName}}\">{{group.groupName}}</option>\r\n            </select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Date</mat-label>\r\n            <input type=\"date\" matInput formControlName=\"date\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\"\r\n              cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"5\"></textarea>\r\n              <mat-error *ngIf=\"hasError('description', 'maxlength', 'single')\">Max. 200 characters allowed</mat-error>\r\n          </mat-form-field> \r\n          <input type=\"submit\" style=\"display: none\">\r\n        </form>\r\n      </div>  \r\n    </mat-tab>\r\n\r\n\r\n    <mat-tab [disabled]=\"!initialData?.lastUpdate && initialData\" label=\"Recurring\"> \r\n      <div class=\"content-container recurring\">\r\n      <div class=\"recurring-info-text\">Recurring expenses will automatically be added each month on the first day starting with the selected month.</div>\r\n      <form class=\"expense-form\" [formGroup]=\"recurringForm\" autocomplete=\"off\" (submit)=\"createExpense()\" #formDirective=\"ngForm\">\r\n          <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n            <mat-label>Name</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"name_recurring\" >\r\n            <mat-error *ngIf=\"hasError('name_recurring', 'required', 'recurring')\">Name is required</mat-error>\r\n            <mat-error *ngIf=\"hasError('name_recurring', 'maxlength', 'recurring')\">Max. 35 characters allowed</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\" class=\"amount-input\">\r\n            <mat-label>Amount (€)</mat-label>\r\n            <input type=\"number\" matInput formControlName=\"amount_recurring\">\r\n            <mat-error *ngIf=\"hasError('amount_recurring', 'required', 'recurring')\">Amount is required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Category</mat-label>\r\n            <select matNativeControl formControlName=\"category_recurring\">\r\n              <option value=\"food\">Food</option>\r\n              <option value=\"accommodation\">Accommodation</option>\r\n              <option value=\"transport\">Transport</option>\r\n              <option value=\"leisure\">Leisure</option>\r\n              <option value=\"multimedia\">Multimedia</option>\r\n              <option value=\"gear\">Gear</option>\r\n              <option value=\"health_insurance\">Health & Insurance</option>\r\n              <option value=\"general\">General</option>\r\n            </select>\r\n          </mat-form-field> \r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Group</mat-label>\r\n            <select matNativeControl formControlName=\"group_recurring\" class=\"group-input-field\">\r\n              <option value=\"General\">General</option>\r\n              <option *ngFor=\"let group of groups$ | async\" value=\"{{group.groupName}}\">{{group.groupName}}</option>\r\n            </select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Start month</mat-label>\r\n            <input type=\"month\" matInput formControlName=\"month_recurring\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description_recurring\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\"\r\n              cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"5\"></textarea>\r\n              <mat-error *ngIf=\"hasError('description_recurring', 'maxlength', 'recurring')\">Max. 200 characters allowed</mat-error>\r\n          </mat-form-field> \r\n          <input type=\"submit\" style=\"display: none\">\r\n        </form>\r\n      </div>\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.less']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit works!</p>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\nimport { FilterService, ExpenseFilter } from 'src/app/services/filter/filter.service';\nimport {  skip, filter, } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.less']\n})\nexport class FilterComponent implements OnInit {\n\n  @ViewChild(\"monthPickerInput\") public monthPickerInputElement: ElementRef;\n  @ViewChild(\"groupPickerInput\") public groupPickerInputElement: ElementRef;\n\n  public groups$: Observable<GroupItem[]>;\n\n  //Filters\n  public dateSelected: string;\n  public groupsSelected: string[];\n  public allDatesSelected: boolean;\n  public allGroupsSelected: boolean;\n\n  sortMethod: string;\n  sortMethods: string[] = ['date', 'amount'];\n  monthMethod: string;\n\n\n  constructor(\n    private groupService: GroupsService,\n    private filterService: FilterService\n  ) { }\n\n  ngOnInit(): void {\n    this.groups$ = this.groupService.getGroups();\n\n    this.filterService.filterState$.subscribe((state) => {\n      //FIXME : quick workaround for testing\n      setTimeout(() => {\n          if (state.date) {\n            this.dateSelected = `${state.date.year}-${state.date.month}`;\n            this.monthMethod = \"specific\";\n          } else {\n            this.dateSelected = null;\n            if(state.last30Active){\n              this.monthMethod = \"last30\"\n            }else{\n              this.monthMethod = \"all\";\n            }\n          }\n          if (state.groups) {\n            this.groupsSelected = state.groups;\n            this.allGroupsSelected = false;\n          } else {\n            this.groupsSelected = null;\n            this.allGroupsSelected = true;\n          }            \n      }, 200);\n    });\n\n  \n  this.filterService.filterShown$.pipe(\n    skip(1),\n    filter((val) => !val)\n    ).subscribe((isShown) => {\n      this.submitFilter();\n  })\n    \n    this.sortMethod = localStorage.getItem(\"sortMethod\") || \"date\";\n  }\n  \n  removeGroupFilter(index:number){\n    this.groupsSelected.splice(index,1);\n  }\n\n  groupChanged(e: any) {\n    this.allGroupsSelected = !e.checked;\n    if(e.checked){\n        this.groupsSelected= [\"General\"]; // if newly switched on just one with default general\n    }\n  }\n\n  dateChanged(e: any) {\n    if(e.value == 'specific'){\n      this.dateSelected= this.filterService.getCurrentMonthFilter();\n    }\n  }\n\n\n  submitFilter() {\n    let currentFilter = JSON.parse(localStorage.getItem(\"filter\"))\n\n    let newFilter: Partial<ExpenseFilter>= {}\n    if(!this.allGroupsSelected){\n      newFilter.groups=this.groupsSelected;\n    }\n\n    if(this.monthMethod == 'specific'){\n      newFilter.date={\n        month: this.dateSelected.substring(5),\n        year: this.dateSelected.substring(0, 4)\n      }\n      newFilter.last30Active= false;\n    }else if(this.monthMethod == 'all'){\n      newFilter.last30Active = false;\n    }else{\n      newFilter.last30Active= true;\n    }\n\n    let currentSortMethod= localStorage.getItem(\"sortMethod\");\n    if(this.sortMethod !== currentSortMethod){\n      this.filterService.setSortMethod(this.sortMethod);\n    }\n\n    if(JSON.stringify(currentFilter) !== JSON.stringify(newFilter)){\n      this.filterService.setFilter(newFilter)\n    }\n  }\n}\n","<div class=\"filter-component-container\">\n\n  <div class=\"filter-section\">\n    <div class=\"flexbox align\">\n      <i class=\"material-icons mr-8\">today</i>\n      <span>Date</span>\n    </div>\n       <mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"monthMethod\" (change)=\"dateChanged($event)\">\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'all'\">All time</mat-radio-button>\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'last30'\">Last 30 days</mat-radio-button>\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'specific'\">Specific month</mat-radio-button>\n    </mat-radio-group>\n\n    <mat-form-field appearance=\"standard\" class=\"month-filter\" *ngIf=\"monthMethod == 'specific'\">\n      <mat-label>Month</mat-label>\n      <input type=\"month\" matInput [(ngModel)]=\"dateSelected\" #monthPickerInput>\n    </mat-form-field>\n  </div>\n\n  <div class=\"filter-section groups\">\n    <div class=\"flexbox align\">\n      <!-- <div class=\"image-icon groups mr-8\"></div> -->\n      <i class=\"material-icons mr-8\">folder_open</i>\n      <span>Groups</span>\n    </div>    \n    <mat-slide-toggle color=\"primary\" class=\"example-margin\" [checked]=\"!allGroupsSelected\"\n      (change)=\"groupChanged($event)\">{{allGroupsSelected ? \"All\" : \"Specfic\"}}</mat-slide-toggle>\n    <div class=\"multiple\" *ngIf=\"!allGroupsSelected\">\n      <div class=\"group-filter-item\" *ngFor=\"let singleInput of groupsSelected; let i = index\">\n        <mat-form-field appearance=\"standard\" class=\"groups-filter\">\n          <mat-label>Group</mat-label>\n          <select matNativeControl class=\"group-picker\" [(ngModel)]=\"groupsSelected[i]\" #groupPickerInput>\n            <option value=\"General\">General</option>\n            <option *ngFor=\"let group of groups$ | async\" [value]=\"group.groupName\">{{group.groupName}}</option>\n          </select>\n        </mat-form-field>\n        <div class=\"remove-item mat-form-field-wrapper\" (click)=\"removeGroupFilter(i)\" *ngIf=\"groupsSelected.length > 1\">\n          <i class=\"material-icons\">close</i>\n        </div>\n      </div>\n      <div class=\"align add-group-filter\" (click)=\"groupsSelected.push('General')\">\n        <i class=\"material-icons\">add</i>\n        <span class=\"ml-8\">Add new group filter</span>\n      </div>\n    </div>\n   \n  </div>\n\n  <div class=\"filter-section\">\n    <label id=\"example-radio-group-label\" class=\"flexbox align\"><i class=\"material-icons mr-8\">sort</i> Sort by</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"sortMethod\">\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" *ngFor=\"let method of sortMethods\"\n        [value]=\"method\">\n        {{method}}\n      </mat-radio-button>\n    </mat-radio-group>\n\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { GroupsService, GroupItem, GroupTotal } from 'src/app/services/groups/groups.service';\r\nimport { Observable, combineLatest, Subscription } from 'rxjs';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\nimport { transition, trigger, state, style, animate } from '@angular/animations';\r\nimport { differenceInDays } from 'date-fns';\r\nimport { Router } from '@angular/router';\r\n\r\ntype GroupTotalCollections = {\r\n  type: string;\r\n  groupTotal: GroupTotal[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('out', style({\r\n        opacity: '0',\r\n        overflow: 'hidden',\r\n        height: '0px',\r\n        margin: '0px'\r\n      })),\r\n      state('in', style({\r\n        opacity: '1',\r\n        overflow: 'hidden',\r\n        height: '*',\r\n        margin: '12px 0 0 0'\r\n      })),\r\n      transition('out => in', animate('150ms ease-in-out')),\r\n      transition('in => out', animate('150ms ease-in-out'))\r\n    ])\r\n  ],\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.less']\r\n})\r\nexport class GroupsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    public groupsService: GroupsService,\r\n    public expenseService: ExpenseService,\r\n    private filterService: FilterService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public groups$: Observable<GroupItem[]>\r\n  public expenses$: Observable<Expense[]>;\r\n  private subscription: Subscription;\r\n  public groupsTotals: GroupTotalCollections[];\r\n  public allTotals: { duration: number, amount: number };\r\n  public helper = {}\r\n\r\n  ngOnInit(): void {\r\n    this.groups$ = this.groupsService.getGroups();\r\n    this.expenses$ = this.expenseService.getExpenses(\"expenses\")\r\n\r\n    this.subscription = combineLatest(this.expenses$, this.groups$).subscribe(([expenses, groups]) => {\r\n      this.groupsTotals = this.calculateGroupsTotals(expenses, groups);\r\n      this.allTotals = this.groupsTotals.map((el) => {\r\n        return el.groupTotal.reduce((acc, cur) => {\r\n          if(!cur.duration){\r\n            return acc;\r\n          }\r\n          return { duration: acc.duration + cur.duration, amount: acc.amount + cur.amount }\r\n        }, { duration: 0, amount: 0 })\r\n      }).reduce((acc, cur) => {\r\n        return { duration: acc.duration + cur.duration, amount: acc.amount + cur.amount }\r\n      });\r\n      this.initializeHelper();\r\n    })\r\n    this.helper = {}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Shows a expense list just like on home for this group. Opens a slighly modified \"home\" site with a \"x\" button to reset the site to its former state\r\n   */\r\n  showDetailList(groupName: string){\r\n    this.filterService.setFilter(\r\n      {\r\n        temporaryFilter: true,\r\n        groups: [groupName]\r\n      }\r\n    )\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  initializeHelper() {\r\n    for (let i = 0; i < this.groupsTotals.length; i++) {\r\n      this.helper[i] = {};\r\n    }\r\n  }\r\n\r\n  calculateGroupsTotals(expenses: Expense[], groups_origin: GroupItem[]): GroupTotalCollections[] {\r\n    let sorterHelper = {};\r\n    let groups = [...groups_origin].reverse();\r\n    // groups.push({ key: null, groupName: \"General\" });\r\n    groups.forEach((el) => {\r\n      sorterHelper[el.groupName] = {};\r\n      sorterHelper[el.groupName].amount = 0;\r\n      sorterHelper[el.groupName].expenses = [];\r\n    })\r\n\r\n    expenses.forEach(expense => {\r\n      let expenseGroup = expense.group;\r\n      //Skip expenses who have a group that has been deleted\r\n      if (expenseGroup !==\"General\") {\r\n        if (sorterHelper[expenseGroup]) {\r\n          sorterHelper[expenseGroup].amount += expense.amount;\r\n          sorterHelper[expenseGroup].expenses.push(expense)\r\n        } else {\r\n          groups.push({ key: null, groupName: expenseGroup });\r\n          sorterHelper[expenseGroup] = {}\r\n          sorterHelper[expenseGroup].amount = expense.amount;\r\n          sorterHelper[expenseGroup].expenses = [expense];\r\n          sorterHelper[expenseGroup].deleted = true;\r\n        }\r\n      }\r\n    })\r\n\r\n    let result: GroupTotal[] = groups.map<GroupTotal>((group) => {\r\n      let amountForGroup: number = sorterHelper[group.groupName].amount;\r\n      let expenses: Expense[] = sorterHelper[group.groupName].expenses;\r\n      let deleted: boolean = sorterHelper[group.groupName].deleted;\r\n\r\n      let result: GroupTotal;\r\n\r\n      if (expenses.length > 0) {\r\n        let expensesSorted = expenses.sort((a, b) => this.filterService.dateSorter(a.date, b.date));\r\n        let first = expensesSorted[expensesSorted.length - 1].date;\r\n        let last = expensesSorted[0].date;\r\n        let durationInDays = differenceInDays(new Date(last), new Date(first)) + 1;\r\n        result = { ...group, ...{ amount: amountForGroup, firstExpenseDate: first, lastExpenseDate: last, duration: durationInDays } }\r\n      } else {\r\n        result = { ...group, ...{ amount: amountForGroup } }\r\n      }\r\n\r\n      if (deleted) {\r\n        result = { ...result, ...{ deleted: deleted } }\r\n      }\r\n\r\n      return result\r\n    });\r\n\r\n    let mapped = result.reduce((acc, cur) => {\r\n        if (!cur.deleted) {\r\n          if (cur.groupName !== \"General\") {\r\n            let next = acc;\r\n            next[0].groupTotal.push(cur)\r\n            return next\r\n          } else {\r\n            return acc\r\n          }\r\n        } else {\r\n          let next = acc;\r\n          next[1].groupTotal.push(cur)\r\n          return next\r\n        }\r\n    }, [{ type: \"active\", groupTotal: [] }, { type: \"deleted\", groupTotal: [] }]);\r\n\r\n    mapped.forEach(groupCollection => {\r\n      groupCollection.groupTotal.sort((a, b) => this.filterService.dateSorter(a.firstExpenseDate, b.firstExpenseDate))\r\n    });\r\n\r\n\r\n    // mapped[0].groupTotal.fo\r\n\r\n    return mapped;\r\n  }\r\n\r\n\r\n\r\n  helpMenuOpenForIndex(index: number, outer: number): string {\r\n    return this.helper[outer][index] || 'out';\r\n  }\r\n\r\n  toggleHelpMenu(index: number, outer: number): void {\r\n    if (this.helper[outer][index]) {\r\n      //already exists --> is open\r\n      this.initializeHelper();\r\n    } else {\r\n      this.initializeHelper();\r\n      this.helper[outer][index] = 'in';\r\n    }\r\n  }\r\n}\r\n","<div class=\"groups-component-container w-100\">\r\n  <div class=\"group-list\" *ngFor=\"let totals of groupsTotals; let j = index\" >\r\n    <div *ngIf=\"totals.groupTotal.length>0\" [class.isSingle]=\"groupsTotals[0].groupTotal.length==0\">\r\n      <div class=\"group-list-header\">{{totals.type == 'deleted' ? 'Old groups' : 'Active groups'}}</div>\r\n      <div *ngFor=\"let group of totals.groupTotal; let i = index\" class=\"group-list-item\" (click)=\"toggleHelpMenu(i,j)\">\r\n        <div class=\"group-item-general\">\r\n          <div class=\"info-section\">\r\n            <div class=\"group-name\">{{group.groupName}}</div>\r\n            <div class=\"group-dates\" *ngIf=\"group.amount > 0\">\r\n              <span>{{ {firstExpenseDate:group.firstExpenseDate, lastExpenseDate: group.lastExpenseDate} | dateDuration }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"amount\">\r\n            <span *ngIf=\"group.amount>0\">{{group.amount | prettyCurrency}}</span>\r\n            <span class=\"no-expenses\" *ngIf=\"!(group.amount>0)\">No expenses yet</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i,j)\" *ngIf=\"group.duration\">\r\n          <div class=\"mb-8\">\r\n            <span class=\"regular-font mr-8\">Duration:</span>\r\n            <span>{{group.duration | durationWeekDay}}</span>\r\n          </div>\r\n          <div class=\"mb-8\">\r\n            <span class=\"regular-font mr-8\">Cost:</span>\r\n            <span>{{group.amount/ group.duration | number:'1.0-0':'de-DE'}}€ per day</span>\r\n          </div>\r\n          <div class=\"show-list-wrapper\" (click)=\"showDetailList(group.groupName)\">\r\n            <span class=\"regular-font mr-8\" >Show List</span>\r\n            <!-- <i class=\"material-icons-outlined\" (click)=\"showDetailList(group.groupName)\">read_more</i> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"group-list\" *ngIf=\"allTotals && (groupsTotals[0].groupTotal.length>0 || groupsTotals[1].groupTotal.length>0) \">\r\n    <div>\r\n      <div class=\"group-list-header\">Totals</div>\r\n      <div class=\"totals-info-section\">\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Total amount:</span>\r\n          <span>{{allTotals.amount | prettyCurrency}}</span>\r\n        </div>\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Duration:</span>\r\n          <span>{{allTotals.duration | durationWeekDay}}</span>\r\n        </div>\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Average cost/day:</span>\r\n          <span>{{(allTotals.amount / allTotals.duration) | number:'1.0-0':'de-DE'}}€ per day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"no-groups\" *ngIf=\"groupsTotals && (groupsTotals[0].groupTotal.length==0 && groupsTotals[1].groupTotal.length==0)\">\r\n    No groups yet\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { Observable, combineLatest, Subject, BehaviorSubject } from 'rxjs';\r\nimport { FilterService, ExpenseFilter, MonthYear } from 'src/app/services/filter/filter.service';\r\nimport { isWithinInterval, subDays, addMonths, subMonths } from \"date-fns\";\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport * as Highcharts from 'highcharts';\r\nimport { map } from 'rxjs/operators';\r\n\r\ninterface CategoryTotal {\r\n  category: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChartData{\r\n  data: {x:number, y:number}[];\r\n  chartStartDate: number;\r\n  currentMonthIndex: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.less']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    public expenseService: ExpenseService,\r\n    public filterService: FilterService,\r\n    public categoryService: CategoryService\r\n  ) { }\r\n\r\n\r\n  Highcharts: typeof Highcharts = Highcharts;\r\n  chartOptions: Highcharts.Options = {};\r\n\r\n  private expenses$: Observable<Expense[]>;\r\n  public currentFilter$: BehaviorSubject<ExpenseFilter>;\r\n  public monthSwitched$: BehaviorSubject<MonthYear>;\r\n  public sortMethod$: BehaviorSubject<string>;\r\n  public limitedCategory$: BehaviorSubject<string>\r\n\r\n  public expenses: Expense[];\r\n  public totalAmount: number = 0;\r\n  public totalCategories: CategoryTotal[];\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public chartData;\r\n  public initialFocus: string;\r\n\r\n  ngOnInit(): void {\r\n    this.expenses$ = this.expenseService.getExpenses(\"expenses\");\r\n    this.currentFilter$ = this.filterService.getFilter();\r\n    this.monthSwitched$ = this.filterService.monthSwitched$;\r\n    this.sortMethod$ = this.filterService.sortMethod$;\r\n    this.limitedCategory$ = new BehaviorSubject(null);\r\n\r\n    combineLatest(this.currentFilter$, this.expenses$, this.monthSwitched$, this.sortMethod$, this.limitedCategory$)\r\n      .subscribe(([filter, expenses, monthSwitch, sortMethod, limitedCategory]) => {\r\n        let filtered = expenses.filter((expense) => {\r\n          return this.matchesFilter(expense, filter, monthSwitch)\r\n        });\r\n\r\n        if (sortMethod == \"amount\") {\r\n          this.expenses = filtered.reverse().sort(this.filterService.amountSorter);\r\n        } else {\r\n          this.expenses = filtered.reverse().sort((a,b)=>this.filterService.dateSorter(a.date, b.date));\r\n        }\r\n\r\n        // If category limited only view expenses mathihc this category, but dont actually filter like emitting a new expense value. just change the view. Leave category-totals untouched\r\n        if(limitedCategory){\r\n          this.expenses = this.expenses.filter(expense=>{\r\n            return expense.category == limitedCategory;\r\n          })\r\n        }\r\n\r\n        this.totalAmount = filtered.reduce((acc, cur) => {\r\n          return acc + cur.amount\r\n        }, 0);\r\n\r\n        let temp = filtered.reduce((acc, cur) => {\r\n          acc[cur.category] += cur.amount;\r\n          return acc;\r\n        }, {\r\n          food: 0,\r\n          accommodation: 0,\r\n          transport: 0,\r\n          multimedia: 0,\r\n          leisure: 0,\r\n          gear: 0,\r\n          health_insurance: 0,\r\n          general: 0\r\n        });\r\n                \r\n        this.totalCategories = this.objectToArray(temp).filter((item) => {\r\n          return item.amount > 0;\r\n        }).sort((a, b) => {\r\n          return b.amount - a.amount;\r\n        });\r\n    })\r\n\r\n    this.calculateChartData().subscribe((options)=>{\r\n      if(options){\r\n        this.chartData = [...options.data].reverse().splice(1).filter((element)=>{\r\n          return element.y >0\r\n        });\r\n        this.drawChart(options);\r\n      }\r\n    });\r\n  }\r\n\r\n  chartOpened= false;\r\n  toggleChart(){\r\n    this.chartOpened = !this.chartOpened\r\n  }\r\n\r\n\r\n  /**\r\n   * Since the chart starts with 5 entries and scroll position equals left border, we want \r\n   * the scroll position to be in the middle of the chart\r\n   * @param number: index of item in array\r\n   */\r\n  getNormalizedStartMonth(number: number){\r\n    if(number>=3){\r\n      return number-3;\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  public activeCategory= null;\r\n\r\n  public toggleCategory(index:number, categoryTotal: CategoryTotal){\r\n    if(this.activeCategory == index){\r\n      this.activeCategory = null;\r\n      this.limitedCategory$.next(null)\r\n    }else{\r\n      this.activeCategory= index;\r\n      this.limitedCategory$.next(categoryTotal.category)\r\n    }\r\n  }\r\n\r\n  private calculateChartData(): Observable<ChartData>{\r\n    return combineLatest(this.expenses$, this.currentFilter$).pipe(\r\n      map(([expenses,filter])=>{   \r\n        if(expenses.length>0){\r\n          //TODO\r\n        }\r\n        // group all expensses in new object with accummulated amount\r\n        let monthTotalsObject =\r\n        expenses.filter((expense)=>{\r\n          let matches = false;\r\n          if(filter.groups){\r\n            filter.groups.forEach(groupFilter => {\r\n              if (!matches) {\r\n                matches = expense.group.toLowerCase() == groupFilter.toLowerCase()\r\n              }\r\n            });\r\n          }else{\r\n            //no groups selected so all expenses valid\r\n            matches = true;\r\n          }\r\n          return matches;\r\n        }).reduce((acc, cur)=>{\r\n          let oldAmount = acc[cur.date.substring(0,7)]?.amount ? acc[cur.date.substring(0,7)]?.amount : 0;\r\n          acc[cur.date.substring(0,7)]= {...acc[cur.date.substring(0,7)], ...{amount: oldAmount+cur.amount}}\r\n          return acc;\r\n        }, {});\r\n\r\n        //sort groups by month and convert to array\r\n        let monthTotalsSorted = this.monthTotalObjectToArray(monthTotalsObject).sort((a,b)=>{\r\n          return new Date(a.month).getTime() - new Date(b.month).getTime()\r\n        }).filter(el=>{\r\n          return new Date(el.month) <= new Date()\r\n        });\r\n        if(monthTotalsSorted.length >0){\r\n\r\n          let filledTotals: {month: string, amount: number}[]= [];\r\n          let firstMonth = new Date(monthTotalsSorted[0].month);\r\n          let lastMonth = new Date();\r\n          for (let month = firstMonth; month <=lastMonth; month=addMonths(month,1)) {\r\n            let monthString = this.filterService.getMonthDateString(month)\r\n            filledTotals.push({month: monthString, amount: 0});      \r\n          }\r\n  \r\n          // Now fill in the amounts calculated in monthTotalsSorted\r\n          monthTotalsSorted.forEach(monthTotal=> {\r\n            let indexForFilled = filledTotals.findIndex(el=>{\r\n              return el.month === monthTotal.month\r\n            });\r\n            filledTotals[indexForFilled].amount = monthTotal.amount;\r\n          });\r\n  \r\n          \r\n          // reduce to array of just amounts for chart\r\n          let chartData = filledTotals.map(el=>{\r\n            return{x:Date.UTC(new Date(el.month).getFullYear(), (new Date(el.month).getMonth()), 1), y: el.amount}          \r\n          });\r\n        \r\n          chartData.push({x: Date.UTC(new Date().getFullYear(), new Date().getMonth()+1,0),y:null})      \r\n          \r\n          let currentIndex = filledTotals.findIndex(el=>{\r\n            return el.month === this.filterService.getCurrentMonthFilter()\r\n          });\r\n  \r\n          return {\r\n            data: chartData,\r\n            chartStartDate:  Date.UTC(new Date(filledTotals[0].month).getFullYear(), new Date(filledTotals[0].month).getMonth(), 0),\r\n            currentMonthIndex: currentIndex\r\n          }\r\n        }\r\n        //create new array with all of the months from begin to finish adn initialize for chart with null\r\n      })\r\n    )\r\n  }\r\n\r\n  private drawChart(chartData: ChartData ) {\r\n    this.chartOptions = {\r\n      title: {\r\n        text: null,\r\n        style: {\r\n          color: '#272727'\r\n        }\r\n      },\r\n      tooltip: { enabled: false },\r\n      chart: {\r\n        backgroundColor: \"#eee\",\r\n        animation: false,\r\n        scrollablePlotArea: {\r\n          minWidth: chartData.data.length*50, //amountOfEntries *50px\r\n          opacity: 0.9,\r\n          scrollPositionX: (1/(chartData.data.length-5))*this.getNormalizedStartMonth(chartData.currentMonthIndex) // 1/ amountOfEntries * startMonth from begin ignoring 5 first entries \r\n        }\r\n      },\r\n      plotOptions: {\r\n        line: {\r\n          animation: false,\r\n          pointStart: chartData.chartStartDate,\r\n          // pointInterval: 24 * 3600 * 1000 * 30\r\n        },\r\n        series: {\r\n          states: {\r\n            hover: {\r\n              enabled: false\r\n            }\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        enabled: false\r\n      },\r\n      xAxis: {\r\n        min: chartData.chartStartDate,\r\n        allowDecimals: false,\r\n        type: 'datetime',\r\n        tickInterval: 30 * 24 * 3600 * 1000, //one month\r\n        labels: {\r\n          // rotation: 90,\r\n          // align: \"left\",\r\n          overflow: 'justify'\r\n        },\r\n        crosshair: {\r\n          width: 0\r\n        },\r\n      },\r\n      yAxis: {\r\n        opposite: false,      \r\n        gridLineColor: \"#ccc\",\r\n        min: 0,\r\n        title: {\r\n          text: null\r\n        },\r\n        labels: {\r\n          formatter: function () {\r\n            return this.value + \"€\"\r\n          }\r\n        }\r\n      },\r\n      colors: [\"#444\"],\r\n      series: [{\r\n        data: chartData.data,\r\n        type: 'line',\r\n        softThreshold: true\r\n      }]\r\n    };\r\n  }\r\n\r\n  private objectToArray(obj: any): CategoryTotal[] {\r\n    return Object.keys(obj).map(key => {\r\n      return { category: key, amount: obj[key] }\r\n    });\r\n  }\r\n\r\n  private monthTotalObjectToArray(obj: any): {month: string, amount: number}[] {\r\n    return Object.keys(obj).map(key => {\r\n      return { month: key, amount: obj[key].amount }\r\n    });\r\n  }\r\n\r\n  private matchesFilter(expense: Expense, filter: ExpenseFilter, monthSwitch: MonthYear): boolean {\r\n    let matches = true;\r\n    let expenseYear = expense.date.substring(0, 4);\r\n    let expenseMonth = expense.date.substring(5, 7);\r\n\r\n    if (monthSwitch) {\r\n      matches = expenseYear == monthSwitch.year && expenseMonth == monthSwitch.month;\r\n    } else {\r\n      if (filter.date) {\r\n        matches = expenseYear == filter.date.year && expenseMonth == filter.date.month;\r\n      } else {\r\n        //take all data change nothing...BUT if last30Days then \r\n        if (filter.last30Active) {\r\n          //leading zeros lead to wrong time for the Date. FIXME: Dirty solution \r\n          let expenseDate = new Date(new Date(expense.date).getFullYear(),new Date(expense.date).getMonth(),new Date(expense.date).getDate());\r\n          matches = isWithinInterval(expenseDate, { start: subDays(new Date(), 30), end: new Date() })\r\n        }\r\n      }\r\n    }\r\n\r\n    if (matches && filter.groups) {\r\n      let matchesInternal = false;\r\n      //OR-comparison, true if one of the filters is true\r\n      filter.groups.forEach(groupFilter => {\r\n        if (!matchesInternal) {\r\n          matchesInternal = expense.group.toLowerCase() == groupFilter.toLowerCase()\r\n        }\r\n      })\r\n      matches = matchesInternal;\r\n    }\r\n    return matches\r\n  }\r\n}\r\n","<div class=\"home-component-container\" (click)=\"collapseNotifier.next()\"\r\n  [class.no-filters]=\"!(currentFilter$ | async)?.date && !(currentFilter$ | async)?.groups && !(currentFilter$ | async)?.last30Active\">\r\n  <div class=\"general\" *ngIf=\"totalAmount >0\">\r\n    <div class=\"total-amount\" >\r\n      <span>{{totalAmount | prettyCurrency}}</span>\r\n    </div>\r\n\r\n    <i class=\"material-icons chart-icon\" [class.active]=\"chartOpened\" (click)=\"toggleChart()\" *ngIf=\"chartData\">timeline</i>\r\n\r\n    <div style=\"position: relative; z-index: 0;\" *ngIf=\"chartOpened\" class=\"chart-section\">\r\n      <highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartOptions\"\r\n        style=\"width: 100%; height: 265px; display: block;\" class=\"highcharts-chart\">\r\n      </highcharts-chart>\r\n\r\n      <div class=\"chart-list\">\r\n        <div class=\"month-item\" *ngFor=\"let item of chartData\">\r\n          <span class=\"month\">{{item.x | date: 'MMM y'}}</span>\r\n          <span class=\"amount\">{{item.y | prettyCurrency}}</span>          \r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chart-info-box flexbox\">\r\n        <i class=\"material-icons-outlined mr-8\">info</i>\r\n        <span>The chart will show all the months matching the groups filter. Selected date filters won't be\r\n          applied!</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"categories-total\" *ngIf=\"!chartOpened\">\r\n      <div class=\"category-item\" *ngFor=\"let total of totalCategories; let i= index\" (click)=\"toggleCategory(i,total)\" [class.category-limited]=\"activeCategory !== null\" [class.selected]=\"activeCategory == i\">\r\n        <div class=\"color-badge\" [style.background-color]=\"categoryService.categoryColors[total.category]\"></div>\r\n        <span class=\"category\" *ngIf=\"total.category !== 'health_insurance'\">{{total.category}} </span>\r\n        <span class=\"category\" *ngIf=\"total.category === 'health_insurance'\">Health & Insurance </span>\r\n        <span class=\"amount\"> {{total.amount | prettyCurrency}}</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <app-expense-list [expenses]=\"expenses\" [collapseNotifier]=\"collapseNotifier\" *ngIf=\"expenses?.length >0 && !chartOpened\">\r\n  </app-expense-list>\r\n\r\n  <div class=\"filter-container\" [class.active]=\"filterService.filterShown$ | async\">\r\n    <app-filter></app-filter>\r\n  </div>\r\n\r\n  <div class=\"no-expenses-placeholder\" *ngIf=\"expenses?.length === 0\">\r\n    <div>No expenses yet</div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap, share, tap } from 'rxjs/operators';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.less']\r\n})\r\nexport class SearchComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(\"searchInput\") public searchInputElement: ElementRef;\r\n  public seachtext: string;\r\n  componentDestroyed$: Subject<void> = new Subject();\r\n\r\n  public searchTerm$: Subject<string>;\r\n  public majorTerm$: Subject<string>;\r\n  public majorResult$: Observable<any>\r\n\r\n  public results$: Observable<Expense[]>\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public matchesFound: number;\r\n  public matchesTotalAmount: number;\r\n\r\n  public majorSystemEasterEggActive: boolean = false;\r\n\r\n\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    private expenseService: ExpenseService,\r\n    private filterService: FilterService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchTerm$ = new Subject<string>();\r\n    this.majorTerm$ = new Subject<string>();\r\n    this.majorResult$ = this.majorTerm$.pipe(\r\n      debounceTime(600),\r\n      distinctUntilChanged(),\r\n      filter(term => term.length > 0),\r\n      map(term => {\r\n        return this.translateWordToNumberRecursive(term)\r\n      })\r\n    )\r\n\r\n    this.results$ = this.searchTerm$.pipe(\r\n      debounceTime(600),\r\n      distinctUntilChanged(),\r\n      filter(term => term.length > 0),\r\n      switchMap((term) => this.getSearchResult(term))\r\n    );\r\n    this.results$.subscribe(expenses => {\r\n      this.matchesFound = expenses.length;\r\n      this.matchesTotalAmount = expenses.reduce((acc, cur) => {\r\n        return acc + cur.amount\r\n      }, 0)\r\n    })\r\n\r\n\r\n\r\n    //Collapse first in case of opened when new results come in\r\n    this.results$.subscribe(() => {\r\n      this.collapseNotifier.next();\r\n    })\r\n  }\r\n\r\n  translateWordToNumberRecursive(word: string): string {\r\n    let noDoubles = this.removedoubleLetters(word);\r\n    let normalizedWord = noDoubles.replace(/[aeiou]/ig, '').toLowerCase();\r\n    let res = this._translateWordToNumberRecursive(\"\", normalizedWord)\r\n    return res;\r\n  }\r\n\r\n  _translateWordToNumberRecursive(result: string, rest: string): string {\r\n    if (rest.length == 0) {\r\n      return result\r\n    } else {\r\n      switch (true) {\r\n        case (rest.startsWith(\"sch\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(3))\r\n        case (rest.startsWith(\"ch\")): case (rest.startsWith(\"sh\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(2))\r\n        case (rest.startsWith(\"ck\")):\r\n          return this._translateWordToNumberRecursive(result + \"7\", rest.substring(2))\r\n        case (rest.startsWith(\"s\")): case (rest.startsWith(\"z\")):\r\n          return this._translateWordToNumberRecursive(result + \"0\", rest.substring(1))\r\n        case (rest.startsWith(\"th\")):\r\n          return this._translateWordToNumberRecursive(result + \"1\", rest.substring(2))\r\n        case (rest.startsWith(\"t\")): case (rest.startsWith(\"d\")):\r\n          return this._translateWordToNumberRecursive(result + \"1\", rest.substring(1))\r\n        case (rest.startsWith(\"n\")):\r\n          return this._translateWordToNumberRecursive(result + \"2\", rest.substring(1))\r\n        case (rest.startsWith(\"m\")):\r\n          return this._translateWordToNumberRecursive(result + \"3\", rest.substring(1))\r\n        case (rest.startsWith(\"r\")):\r\n          return this._translateWordToNumberRecursive(result + \"4\", rest.substring(1))\r\n        case (rest.startsWith(\"l\")):\r\n          return this._translateWordToNumberRecursive(result + \"5\", rest.substring(1))\r\n        case (rest.startsWith(\"j\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(1))\r\n        case (rest.startsWith(\"c\")): case (rest.startsWith(\"k\")): case (rest.startsWith(\"g\")): case (rest.startsWith(\"q\")):\r\n          return this._translateWordToNumberRecursive(result + \"7\", rest.substring(1))\r\n        case (rest.startsWith(\"f\")): case (rest.startsWith(\"v\")): case (rest.startsWith(\"w\")):\r\n          return this._translateWordToNumberRecursive(result + \"8\", rest.substring(1))\r\n        case (rest.startsWith(\"ph\")):\r\n          return this._translateWordToNumberRecursive(result + \"8\", rest.substring(2))\r\n        case (rest.startsWith(\"p\")): case (rest.startsWith(\"b\")):\r\n          return this._translateWordToNumberRecursive(result + \"9\", rest.substring(1))\r\n        default:\r\n          return this._translateWordToNumberRecursive(result, rest.substring(1))\r\n      }\r\n    }\r\n  }\r\n\r\n  removedoubleLetters(word: string): string {\r\n    let arr = Array.from(word);\r\n    let result = \"\"\r\n    arr.forEach(char => {\r\n      if (result.length == 0 || char != result.charAt(result.length - 1)) {\r\n        result += char;\r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  getSearchResult(terms: string): Observable<Expense[]> {\r\n    let singleTerms = terms.toLowerCase().split(\",\");\r\n    //remove leading and ending whitespace after splitting\r\n    if (singleTerms[0] && singleTerms[0] == \"major\") {\r\n      //Easter egg, for Major system screen ;)\r\n      this.majorSystemEasterEggActive = true;\r\n      return new Observable<Expense[]>()\r\n    } else {\r\n      this.majorSystemEasterEggActive = false;\r\n      let normalizedTerms = singleTerms.map(el => {\r\n        let res = el;\r\n        if (el[0] === ' ') {\r\n          res = res.substring(1);\r\n        }\r\n        if (el[el.length - 1] === ' ') {\r\n          res = res.substring(0, res.length - 1);\r\n        }\r\n        return res;\r\n      });\r\n      return this.expenseService.getExpenses(\"expenses\").pipe(\r\n        map(expenses => {\r\n          return expenses.filter(expense => {\r\n            let matches = true;\r\n            normalizedTerms.forEach(singleTerm => {\r\n              if (matches) {\r\n                matches = expense.name.toLowerCase().includes(singleTerm) || expense.description.toLowerCase().includes(singleTerm) || expense.group.toLowerCase().includes(singleTerm);\r\n                let expenseDate = new Date(expense.date);\r\n                let matchesDate = true;\r\n                let dateSegments = singleTerm.split(\".\")\r\n                for (let i = 0; i < dateSegments.length; i++) {\r\n                  if (matchesDate) {\r\n                    if (!parseInt(dateSegments[i]) && !(dateSegments[i] == \"\")) {\r\n                      matchesDate = false;\r\n                      break; // break loop not a date\r\n                    }\r\n                    // first day, month, year\r\n                    if (i == 0) {\r\n                      matchesDate = parseInt(dateSegments[i]) == expenseDate.getDate();\r\n                    } else if (i == 1) {\r\n                      //this is for the case \"22.\"\r\n                      if (dateSegments[i] !== \"\") {\r\n                        matchesDate = parseInt(dateSegments[i]) == expenseDate.getMonth() + 1;\r\n                      }\r\n                    } else if (i == 2) {\r\n                      //this is for the case \"22.03.\" with ending dot leading to third segment\r\n                      if (dateSegments[i] !== \"\") {\r\n                        matchesDate = parseInt(dateSegments[i]) == expenseDate.getFullYear();\r\n                      }\r\n                    } else {\r\n                      matchesDate = false;\r\n                      break; // break loop not a date (can't have more than 3 segments 12.2.2020)\r\n                    }\r\n                  } else {\r\n                    break;\r\n                  }\r\n                }\r\n                matches = matches || matchesDate\r\n              } else {\r\n                return matches;\r\n              }\r\n            });\r\n            return matches;\r\n          }).reverse().sort((a, b) => this.filterService.dateSorter(a.date, b.date))\r\n        })\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.searchInputElement.nativeElement.focus();\r\n  }\r\n\r\n  public clear() {\r\n    this.seachtext = \"\";\r\n    this.searchTerm$.next(\"\");\r\n    this.searchInputElement.nativeElement.focus();\r\n  }\r\n\r\n}\r\n","<div class=\"search-component-container w-100\">\r\n  <app-header>\r\n    <div class=\"flexbox align p-0-8 h-100\">\r\n      <div class=\"flex-1 mr-8 search-bar-input-container\">\r\n        <i matIcon class=\"material-icons-outlined search-input-icon-prefix\">search</i>\r\n        <input (keyup)=\"searchTerm$.next($event.target.value)\" [(ngModel)]=\"seachtext\" class=\"searchbar-input w-100\"\r\n          id=\"searchbar-to-focus\" type=\"text\" matInput #searchInput>\r\n        <i matIcon class=\"material-icons-outlined search-input-icon-suffix\" (click)=\"clear()\">close</i>\r\n      </div>\r\n\r\n      <span (click)=\"sliderService.hide()\">cancel</span>\r\n    </div>\r\n  </app-header>\r\n\r\n  <div class=\"search-results\" (click)=\"collapseNotifier.next()\" *ngIf=\"!majorSystemEasterEggActive\">\r\n    <div *ngIf=\"(results$ | async)?.length >0\">{{matchesFound}} results ( {{matchesTotalAmount | prettyCurrency}})</div>\r\n    <div *ngIf=\"(results$ | async)?.length ==0 \" class=\"no-expenses\">No expenses found!</div>\r\n    <app-expense-list [expenses]=\"results$ | async\" [collapseNotifier]=\"collapseNotifier\"></app-expense-list>\r\n  </div>\r\n\r\n  <div class=\"major-system-container\" *ngIf=\"majorSystemEasterEggActive\">\r\n      <div class=\"header\">Major System Easter-Egg</div>\r\n    <input type=\"text\" (keyup)=\"majorTerm$.next($event.target.value)\" matInput>\r\n    {{majorResult$ | async}}\r\n    <div class=\"major-table\">\r\n        <div><span>0</span><span>s, z</span> (House)</div>\r\n        <div><span>1</span><span>t, d, th</span> (Taxi)</div>\r\n        <div><span>2</span><span>n</span> (Honey)</div>\r\n        <div><span>3</span><span>m</span> (Omaha)</div>\r\n        <div><span>4</span><span>r</span> (Hurry)</div>\r\n        <div><span>5</span><span>l</span> (Holy)</div>\r\n        <div><span>6</span><span>j, ch, sh, sch</span> (Joy)</div>\r\n        <div><span>7</span><span>c, k, g, q, ck</span> (High)</div>\r\n        <div><span>8</span><span>v, f, ph, w</span> (Fee)</div>\r\n        <div><span>9</span><span>p, b</span> (Bee)</div>\r\n    </div>\r\n  \r\n  </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { GroupsService } from 'src/app/services/groups/groups.service';\n\n@Component({\n  selector: 'app-settings-bottom-sheet',\n  templateUrl: './settings-bottom-sheet.component.html',\n  styleUrls: ['./settings-bottom-sheet.component.less']\n})\nexport class SettingsBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public group: any,\n    private bottomSheetRef: MatBottomSheetRef<SettingsBottomSheetComponent>,\n    private groupsService: GroupsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  deleteGroup() {\n    if (confirm(`Are you sure you want to finish \"${this.group.groupName}\"? This won't delete the expenses you added! You simply can't assign any more expenses to it.`)) {\n      this.groupsService.deleteGroup(this.group.key, this.group.groupName);\n      this.dismiss();\n    }\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"settings-group-menu\">\n    <div class=\"option-container\">\n        <div class=\"delete menu-item\" (click)=\"deleteGroup()\">Finish group</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Observable, Subject, combineLatest } from 'rxjs';\r\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { SettingsBottomSheetComponent } from './settings-bottom-sheet/settings-bottom-sheet.component';\r\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('out', style({\r\n        opacity: '0',\r\n        overflow: 'hidden',\r\n        height: '0px',\r\n        width: '0px',\r\n      })),\r\n      state('in', style({\r\n        opacity: '1',\r\n        overflow: 'hidden',\r\n        height: '*',\r\n        width: '*'\r\n      })),\r\n      transition('out => in', animate('150ms ease-in-out')),\r\n      transition('in => out', animate('150ms ease-in-out'))\r\n    ])\r\n  ],\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.less']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  @ViewChild(\"addGroupsInput\") public addGroupsInputElement: ElementRef;\r\n  @ViewChild(\"qrCode\") QrCode: ElementRef;\r\n\r\n  constructor(\r\n    private groupsService: GroupsService,\r\n    private categoryService: CategoryService,\r\n    private bottomSheet: MatBottomSheet,\r\n    private expenseService: ExpenseService,\r\n    private datePipe: DatePipe\r\n  ) { }\r\n\r\n  public groups$: Observable<GroupItem[]>;\r\n  public newGroupInputValue: string;\r\n  public defaultGroupSelected: string;\r\n  public defaultCategorySelected: string;\r\n  public recurringExpenses$: Observable<Expense[]>;\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public shareShown: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.groups$ = this.groupsService.getGroups();\r\n    this.recurringExpenses$ = this.expenseService.getExpenses(\"recurringExpenses\");\r\n    //TODO : Dirty workaround \r\n    setTimeout(() => {\r\n      this.defaultGroupSelected = this.groupsService.defaultGroup;\r\n    }, 100);\r\n    this.defaultCategorySelected = this.categoryService.defaultCategory;\r\n    this.checkRecurringExists();\r\n  }\r\n\r\n  hardReloadApp() {\r\n    let shallUpdate = confirm(\"Updating resets the offline cached app. Data will still remain!\");\r\n    if (shallUpdate) {\r\n      navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n        for (let registration of registrations) {\r\n          registration.unregister()\r\n        }\r\n      })\r\n      this.reloadApp();\r\n    }\r\n  }\r\n\r\n  reloadApp() {\r\n    window.location.reload();\r\n  }\r\n\r\n  /**\r\n   * Downloads all of the data (expenses, recurringExpenses, groups) as a snapshot in a .json file\r\n   */\r\n  public downloadBackup() {\r\n    combineLatest(this.expenseService.getExpenses(\"expenses\"), this.expenseService.getExpenses(\"recurringExpenses\"), this.groupsService.getGroups())\r\n      .pipe(take(1))\r\n      .subscribe(([expenses, recurringExpenses, groups]) => {\r\n        let data = { expenses, recurringExpenses, groups };\r\n        let fileName = `Expense_backup_${this.datePipe.transform(new Date(), 'MMM y').split(' ').join('_')}`\r\n        this.downloadObjectAsJson(data, fileName)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * gets called when a file has been chosen in the file-input\r\n   * @param event FileUploadEvent\r\n   */\r\n  onImport(event) {\r\n    var file = event.srcElement.files[0];\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = (e) => {\r\n        this.loadDataIntoApp(JSON.parse(e.target.result as string))\r\n      }\r\n      reader.onerror = (e) => {\r\n        console.log('error reading file');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loads all of the backup into the IndexedDB\r\n   * @param json data containing expenses, recurringExpenses, groups\r\n   */\r\n  loadDataIntoApp(json: { expenses: Expense[], recurringExpenses: Expense[], groups: GroupItem[] }) {\r\n    // add normal expenses\r\n\r\n    if (confirm(\"Please confirm you want to load this backup into your app\")) {\r\n      json.expenses.forEach(expense => {\r\n        delete expense.key;\r\n        // if(!expense.recurring){\r\n        this.expenseService.addExpense(expense, \"expenses\")\r\n        // }\r\n      });\r\n\r\n      // add recurring expenses\r\n      json.recurringExpenses.forEach(expense => {\r\n        delete expense.key;\r\n        this.expenseService.addExpense(expense, \"recurringExpenses\", true)\r\n      });\r\n\r\n      // add groups\r\n      json.groups.forEach(group => {\r\n        this.groupsService.addGroup(group.groupName);\r\n      });\r\n\r\n      alert(\"Data loaded successfully\")\r\n    }\r\n\r\n  }\r\n\r\n  public deleteData() {\r\n    if (confirm(\"This will delete all expenses and data associated on this device\")) {\r\n      if (confirm(\"Are you REALLY sure?\")) {\r\n        this.expenseService.clearData(\"expenses\");\r\n        this.expenseService.clearData(\"recurringExpenses\")\r\n        this.groupsService.clearData();\r\n      }\r\n    }\r\n  }\r\n\r\n  private downloadObjectAsJson(exportObj, exportName) {\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    console.log(\"should download now\")\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  /**\r\n   * call group/category service and update currently selected in subnject and localstorage\r\n   */\r\n  public defaultGroupChanged() {\r\n    this.groupsService.setDefaultGroup(this.defaultGroupSelected);\r\n  }\r\n\r\n  /**\r\n   * call group/category service and update currently selected in subnject and localstorage\r\n   */\r\n  public defaultCategoryChanged() {\r\n    this.categoryService.setDefaultCategory(this.defaultCategorySelected);\r\n  }\r\n\r\n  addGroup() {\r\n    if (!this.newGroupInputValue) {\r\n      this.addGroupsInputElement.nativeElement.focus();\r\n    } else {\r\n      this.groupsService.addGroup(this.newGroupInputValue);\r\n      this.newGroupInputValue = \"\";\r\n    }\r\n  }\r\n\r\n  openBottomSheet(e: MouseEvent, group: any): void {\r\n    document.body.style.backgroundColor = \"#4f5053\";\r\n    e.stopPropagation();\r\n    this.bottomSheet.open(SettingsBottomSheetComponent, { data: group });\r\n  }\r\n\r\n  /**\r\n   * Since the height animation overflows the end of scroll by making the container higher then before, one can't see he animation since its happening off-screen\r\n   * Therefore during the animation each frame we scroll to the bottom of the currently animated box\r\n   */\r\n  public animating = false;\r\n\r\n  toggleShare() {\r\n    const _scrollWithAnimation = () => {\r\n      if (this.animating) {\r\n        requestAnimationFrame(() => {\r\n          console.log(\"animated\")\r\n          this.QrCode.nativeElement.scrollIntoView({ block: \"end\" });\r\n          _scrollWithAnimation();\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!this.shareShown) {\r\n      this.animating = true\r\n      _scrollWithAnimation()\r\n      setTimeout(() => {\r\n        this.animating = false;\r\n      }, 250);\r\n    }\r\n    this.shareShown = !this.shareShown;\r\n  }\r\n\r\n  public recurringExists: boolean =false;\r\n  checkRecurringExists(){\r\n    this.recurringExpenses$.subscribe((rec=>{\r\n      if(rec.length>0){\r\n        this.recurringExists= true;\r\n      }else{\r\n        this.recurringExists= false;\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"settings-component-container\" (click)=\"collapseNotifier.next()\">\r\n\r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Recurring expenses</span>\r\n      </div>\r\n      <div *ngIf=\"!recurringExists\" class=\"no-recurring-expenses\">No recurring expenses yet</div>\r\n      <div class=\"p-8\" [class.empty-list]=\"!recurringExists\">\r\n        <app-recurring-expense-list [expenses]=\"recurringExpenses$ | async\" [collapseNotifier]=\"collapseNotifier\"></app-recurring-expense-list>\r\n      </div>\r\n\r\n    </div>\r\n  </section>\r\n\r\n\r\n  <!-- <div>Categories</div> -->\r\n  <section class=\"group-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Groups</span>\r\n        <input type=\"text\" [(ngModel)]=\"newGroupInputValue\" #addGroupsInput>\r\n        <i class=\"material-icons-outlined\" (click)=\"addGroup()\">add</i>\r\n      </div>\r\n\r\n      <div class=\"group-list\">\r\n        <div class=\"group-item\" *ngFor=\"let group of groups$ | async\">\r\n          <span>{{group.groupName}}</span>\r\n          <i class=\"material-icons-outlined\" (click)=\"openBottomSheet($event, group)\">more_horiz</i>\r\n        </div>\r\n        <span *ngIf=\"(groups$ | async).length === 0\" class=\"no-items-yet\">\r\n          There are no groups yet\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"defaults-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Default form values</span>\r\n      </div>\r\n      <mat-form-field appearance=\"standard\" class=\"groups-default\">\r\n        <mat-label>Group</mat-label>\r\n        <select matNativeControl class=\"group-picker group-input-field\" [(ngModel)]=\"defaultGroupSelected\"\r\n          (change)=\"defaultGroupChanged()\">\r\n          <option value=\"General\">General</option>\r\n          <option *ngFor=\"let group of groups$ | async\" [value]=\"group.groupName\">{{group.groupName}}</option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"standard\" class=\"groups-default\">\r\n        <mat-label>Category</mat-label>\r\n        <select matNativeControl class=\"group-picker\" [(ngModel)]=\"defaultCategorySelected\"\r\n          (change)=\"defaultCategoryChanged()\">\r\n          <option value=\"food\">Food</option>\r\n          <option value=\"accommodation\">Accommodation</option>\r\n          <option value=\"transport\">Transport</option>\r\n          <option value=\"leisure\">Leisure</option>\r\n          <option value=\"multimedia\">Multimedia</option>\r\n          <option value=\"gear\">Gear</option>\r\n          <option value=\"health_insurance\">Health & Insurance</option>\r\n          <option value=\"general\">General</option>\r\n        </select>\r\n      </mat-form-field>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Data management</span>\r\n      </div>\r\n      <div class=\"flexbox p-8\" >\r\n        <i class=\"material-icons-outlined mr-8 bigger-font\">info</i>\r\n        <p class=\"smaller-font\">This app operates fully locally on your device without any cloud backup. Uninstalling the app will delete all of your data. You can download your data as a file and load it back into the app any time after re-installing the app as long as you own that file.</p>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"downloadBackup()\">\r\n        <i class=\"material-icons-outlined mr-8\">cloud_download</i>\r\n        <span>Download backup</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\">\r\n        <i class=\"material-icons-outlined mr-8\">cloud_upload</i>\r\n        <label class=\"backup-upload-imput\">\r\n          <span>Load backup</span>\r\n          <input type=\"file\" id=\"backupUploader\" (change)=\"onImport($event)\"/>\r\n        </label>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"deleteData()\">\r\n        <i class=\"material-icons-outlined mr-8\">delete</i>\r\n        <span>Delete all data</span>\r\n      </div>\r\n      \r\n    </div>\r\n  </section>\r\n  \r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>General</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"reloadApp()\">\r\n        <i class=\"material-icons-outlined mr-8\">refresh</i>\r\n        <span>Reload Application</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"hardReloadApp()\">\r\n        <i class=\"material-icons-outlined mr-8\">update</i>\r\n        <span>Update Application</span>\r\n      </div>\r\n      <div class=\"share-section flexbox column\">\r\n        <div class=\"flexbox align p-8\" (click)=\"toggleShare()\">\r\n          <i class=\"material-icons-outlined mr-8\" >share</i>\r\n          <span>Share</span>\r\n        </div>\r\n        <img #qrCode [@slideInOut]=\"shareShown ? 'in': 'out'\" src=\"../../../assets/images/qr_code.png\" alt=\"QR-Code\" class=\"qr-code\">\r\n      </div>\r\n    </div>\r\n  </section>\r\n  \r\n  <!-- <div>Monthly</div> -->\r\n  \r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  public getTextFromAudio(binaryData: Int16Array): Promise<any> {\n    return this.http.post<any>(\"/api/audio\", binaryData.buffer, { responseType: 'json' }).toPromise()\n  }\n\n  public getUserMediaStream(): Promise<MediaStream> {\n    const constraints: any = {\n      audio: {\n        \"noiseSuppression\": true\n      }\n    };\n\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nexport interface CategoryColor{\n  food: string;\n  transport: string;\n  accommodation: string;\n  multimedia: string;\n  leisure: string;\n  gear: string;\n  health_insurance: string;\n  general: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  public defaultCategory: string;\n  constructor() { \n    this.defaultCategory = localStorage.getItem(\"defaultCategory\") || \"food\"\n  }\n\n  public readonly categoryColors: CategoryColor = {\n    food: \"#749056\",//\"rgb(110, 150, 72)\",\n    accommodation: \"#5979a9\",//\"rgb(84, 94, 117)\",\n    transport: \"rgb(192, 87, 70)\",\n    multimedia: \"rgb(150, 123, 92)\",//\"rgb(189, 155, 117)\",\n    leisure: \"rgb(202, 179, 99)\",\n    gear: \"rgb(65, 97, 68)\",\n    health_insurance: \"#afafaf\",\n    general: \"rgb(82, 82, 82)\",\n  }\n\n  public setDefaultCategory(category:string){\n    localStorage.setItem(\"defaultCategory\", category)\n    this.defaultCategory = category;\n  }\n\n\n}\n","import { Expense } from './expense.service';\r\n\r\nexport const expenses: Expense[] = [\r\n    {\r\n        name: \"Döner\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2020-02-24\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n    },\r\n    {\r\n        name: \"Pizza\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-02-13\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n    },\r\n    {\r\n        name: \"Flug\",\r\n        amount: 1699,\r\n        category: \"transport\",\r\n        date: \"2020-02-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Netto\",\r\n        amount: 3900,\r\n        category: \"food\",\r\n        date: \"2020-01-18\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Restaurant zum Hirsch\",\r\n        amount: 124,\r\n        category: \"multimedia\",\r\n        date: \"2019-12-12\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"general\",\r\n        date: \"2019-12-22\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"general\",\r\n        date: \"2019-02-07\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Zug Stuttgart\",\r\n        amount: 12.3,\r\n        category: \"food\",\r\n        date: \"2020-01-16\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"food\",\r\n        date: \"2020-01-12\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-01-06\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"multimedia\",\r\n        date: \"2019-07-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"food\",\r\n        date: \"2020-02-17\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-02-22\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"multimedia\",\r\n        date: \"2020-02-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Google Drive Abo\",\r\n        amount: 9.99,\r\n        category: \"multimedia\",\r\n        date: \"2016-05-03\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Hostel\",\r\n        amount: 45.90,\r\n        category: \"accomodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Rentenversicherung\",\r\n        amount: 63.50,\r\n        category: \"general\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Krankenversicherung\",\r\n        amount: 2505.50,\r\n        category: \"general\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Döner\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n    },\r\n    {\r\n        name: \"Pizza\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n    },\r\n    {\r\n        name: \"Familien-Essen\",\r\n        amount: 50,\r\n        category: \"transport\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Netto\",\r\n        amount: 13.87,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Restaurant zum Hirsch\",\r\n        amount: 78,\r\n        category: \"food\",\r\n        date: \"2016-08-13\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Zug Stuttgart\",\r\n        amount: 12.3,\r\n        category: \"accommodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"transport\",\r\n        date: \"2017-08-31\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"multimedia\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Google Drive Abo\",\r\n        amount: 9.99,\r\n        category: \"accomodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Hostel\",\r\n        amount: 45.90,\r\n        category: \"accomodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Rentenversicherung\",\r\n        amount: 63.50,\r\n        category: \"general\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Krankenversicherung\",\r\n        amount: 105.50,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n    },\r\n]","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { IndexedDBConnectionService } from '../indexed-dbconnection.service';\r\nimport { expenses } from \"./Expenses\";\r\nimport { GroupsService } from '../groups/groups.service';\r\nimport { groups } from '../groups/Groups';\r\nimport { isEqual, addMonths, differenceInMonths, getMonth } from 'date-fns';\r\nimport { take } from 'rxjs/operators';\r\n\r\nexport interface Expense {\r\n  name: string;\r\n  amount: number;\r\n  category: string;\r\n  group: string;\r\n  date: string;\r\n  description?: string;\r\n  recurring?: boolean;\r\n  lastUpdate?: string;\r\n  key?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseService {\r\n\r\n  private db: any;\r\n  private expenses$: Subject<Expense[]>;\r\n  private recurringExpenses$: Subject<Expense[]>;\r\n  private connection$: ReplaySubject<boolean>;\r\n  public expenseDeletedNotifier: Subject<void>;\r\n\r\n  constructor(\r\n    private indexedDBService: IndexedDBConnectionService,\r\n  ) {\r\n    this.connection$ = new ReplaySubject(1);\r\n    this.createExpenseDatabase();\r\n    this.expenses$ = new Subject<Expense[]>();\r\n    this.recurringExpenses$ = new Subject<Expense[]>();\r\n    this.expenseDeletedNotifier = new Subject();\r\n    this.checkRecurringExpenses();\r\n  }\r\n\r\n\r\n  getFormatDate(date: Date): string{\r\n    return `${date.getFullYear()}-${this.getPrettyMonth(date.getMonth()+1)}-01`\r\n  }\r\n\r\n  getPrettyMonth(number:number ): string{\r\n    if(number<10){\r\n      return 0 + number.toString();\r\n    }else{\r\n      return number.toString();\r\n    }\r\n  }\r\n\r\n  checkRecurringExpenses(){\r\n    this.getExpenses(\"recurringExpenses\").pipe(take(1)).subscribe(expenses=>{\r\n      expenses.forEach(expense=>{\r\n        if((!expense.lastUpdate || addMonths(new Date(expense.lastUpdate),1) < new Date()) && new Date()> new Date(expense.date)){\r\n          // update needed for this expense\r\n          let key= expense.key;\r\n          delete expense.lastUpdate;\r\n          delete expense.key;\r\n          this.addExpense({...expense, ...{date:this.getFormatDate(new Date(new Date().getFullYear(), new Date().getMonth()))}}, \"expenses\");\r\n          this.updateExpense(key, {...expense, ...{lastUpdate: this.getFormatDate(new Date())}}, \"recurringExpenses\")\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param expense \r\n   * @param type either 'expenses' or 'recurringExpenses'\r\n   */\r\n  public addExpense(expense: Expense, type: string, fromBackup?: boolean) {\r\n    let tx = this.db.transaction([type], 'readwrite');\r\n    let store = tx.objectStore(type);\r\n    store.add(expense);\r\n    tx.oncomplete = () => {\r\n      if(type==\"recurringExpenses\"){\r\n        if(!fromBackup){\r\n          this.addInitialRecurrentEntries(expense)\r\n        }\r\n        this.refreshExpenses(type);\r\n      }else{\r\n        this.refreshExpenses(type);\r\n      }\r\n    }\r\n    tx.onerror = (event) => {\r\n      alert('error storing expense ' + event.target.errorCode);\r\n    }\r\n  };\r\n\r\n  addInitialRecurrentEntries(expense: Expense){\r\n    let currentMonthDate = new Date( new Date().getFullYear(), new Date().getMonth());\r\n    let counter=0;\r\n    // becomes -1 once iterading date after expense date\r\n    while(differenceInMonths(currentMonthDate, addMonths(new Date(expense.date), counter))>=0){\r\n      let pastRecurrentExpense = {...expense, ...{date: this.getFormatDate(addMonths(new Date(expense.date), counter))}}\r\n      delete pastRecurrentExpense.lastUpdate;\r\n      this.addExpense(pastRecurrentExpense, \"expenses\")\r\n      counter++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all of the expenses from the IndexedDB\r\n   * @param type either \"expenses\" or \"recurring\"\r\n   */\r\n  public getExpenses(type:string): Observable<Expense[]> {\r\n    this.connection$.subscribe(()=>this.refreshExpenses(type));\r\n    if(type==\"expenses\"){\r\n      return this.expenses$.asObservable();\r\n    }else{\r\n      return this.recurringExpenses$.asObservable();\r\n    }\r\n  }\r\n\r\n  public updateExpense(key: number, value: Expense, type: string) {\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    let objectStore = transaction.objectStore(type);\r\n    let req = objectStore.put(value, key);\r\n    req.onsuccess = () => {\r\n      this.refreshExpenses(type);\r\n    }\r\n  }\r\n\r\n  public deleteExpense(key: number, type:string) {\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    let objectStore = transaction.objectStore(type);\r\n    let req = objectStore.delete(key);\r\n    this.expenseDeletedNotifier.next();\r\n    req.onsuccess = () => {\r\n      this.refreshExpenses(type);\r\n    }\r\n  }\r\n\r\n  clearData(type:string){\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    var objectStore = transaction.objectStore(type);\r\n    objectStore.clear();\r\n  }\r\n\r\n  /**\r\n   * Makes the Observable emit all of the new values from the DB\r\n   */\r\n  private refreshExpenses(type: string) {\r\n    let transaction = this.db.transaction([type]);\r\n    let object_store = transaction.objectStore(type);\r\n    let request = object_store.openCursor();\r\n    let result: Expense[] = []\r\n\r\n    request.onsuccess = (event) => {\r\n      let cursor = event.target.result;\r\n      if (cursor) {\r\n        let key = cursor.primaryKey;\r\n        let value = cursor.value;\r\n        result.push({ ...{ key }, ...value })\r\n        cursor.continue();\r\n      }\r\n      else {\r\n        if(type==\"expenses\"){\r\n          this.expenses$.next(result);\r\n        }else{\r\n          this.recurringExpenses$.next(result);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private createExpenseDatabase() {\r\n    let dbReq = this.indexedDBService.getConnection()\r\n\r\n    dbReq.onupgradeneeded = (event) => {\r\n      let db = (event.target as any).result;\r\n      this.indexedDBService.upgradeDatabase(db);\r\n      //For dev purposes only\r\n      // setTimeout(() => {\r\n      //   this.seedExpenses();   \r\n      //   for (const group of groups) {\r\n      //     this.addGroup(group);\r\n      //   }\r\n      // }, 1000);\r\n    }\r\n\r\n    dbReq.onsuccess = (event) => {\r\n      this.db = (event.target as any).result;\r\n      this.connection$.next(true);\r\n    }\r\n\r\n    dbReq.onerror = function (event) {\r\n      alert('error opening database ' + (event.target as any).errorCode);\r\n    }\r\n  }\r\n\r\n  public addGroup(group: string) {\r\n    let tx = this.db.transaction(['groups'], 'readwrite');\r\n    let store = tx.objectStore('groups');\r\n    store.add({groupName: group});\r\n  };\r\n\r\n  private seedExpenses(){\r\n    for (const expense of expenses) {\r\n      this.addExpense(expense, \"expenses\");\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { addMonths, subMonths } from 'date-fns';\nimport { Expense } from '../expenses/expense.service';\n\nexport interface MonthYear {\n  /**\n   * 1 being january\n   */\n  month: string;\n  year: string;\n}\n\nexport interface ExpenseFilter {\n  groups?: string[];\n  date?: MonthYear;\n  last30Active?: boolean;\n  temporaryFilter?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  public filterShown$: BehaviorSubject<boolean>;\n  public filterState$: BehaviorSubject<ExpenseFilter>;\n  public monthSwitched$: BehaviorSubject<MonthYear>\n  public sortMethod$: BehaviorSubject<string>\n\n  //Used for saving the current filter and re using it after a temrprary filter has been applied\n  public temporaryFilterStateClipboard: Partial<ExpenseFilter>\n\n  private defaultFilter: ExpenseFilter = {\n    date: {\n      month: this.getCurrentMonthFilter().substring(5),\n      year: this.getCurrentMonthFilter().substring(0, 4)\n    }\n  }\n\n  constructor() {\n    this.filterShown$ = new BehaviorSubject(false);\n\n    let initialFilter: ExpenseFilter = JSON.parse(localStorage.getItem(\"filter\")) || this.defaultFilter;\n    this.filterState$ = new BehaviorSubject(initialFilter);\n    this.monthSwitched$ = new BehaviorSubject(null);\n    this.sortMethod$ = new BehaviorSubject(localStorage.getItem(\"sortMethod\") || \"date\")\n  }\n\n  //resets a filter to its state before the temporary filter change\n  resetFilter() {\n    if (this.temporaryFilterStateClipboard) {\n      this.setFilter(this.temporaryFilterStateClipboard);\n      this.temporaryFilterStateClipboard = null;\n    }\n  }\n\n  setFilter(newFilter: Partial<ExpenseFilter>) {\n    //When choosing a cloes group a temporary filter is applied since the group isnt selectable in filter panel by default when closed. This lets you still see the groups details listing.\n    //This temporary filter has to be reset to its former state by pressing \"x\" on the UI since the expense-list should just eb a temporary overlay.\n    // pressing \"x\" will bring the expense list to its default state as it was before\n    if (newFilter.temporaryFilter && !this.temporaryFilterStateClipboard) {\n      this.temporaryFilterStateClipboard = this.filterState$.value;\n    }\n    this.filterState$.next(newFilter);\n    this.monthSwitched$.next(null);\n    localStorage.setItem(\"filter\", JSON.stringify(newFilter))\n  }\n\n  setSortMethod(method: string) {\n    localStorage.setItem(\"sortMethod\", method);\n    this.sortMethod$.next(method);\n  }\n\n  getFilter(): BehaviorSubject<ExpenseFilter> {\n    return this.filterState$;\n  }\n\n  show() {\n    this.resetFilter();\n    this.filterShown$.next(true);\n  }\n\n  hide() {\n    this.filterShown$.next(false);\n  }\n\n\n  /**\n   * Either increments or decrements the month shown\n   * @param method Either \"increment\" or \"decrement\"\n   */\n  public switchMonth(method: string) {\n    if (this.filterState$.value.date) {\n      let current: MonthYear = this.monthSwitched$.value || this.filterState$.value.date;\n\n      let incrementedDate: Date;\n      if (method === \"increment\") {\n        incrementedDate = addMonths(new Date(`${current.year}-${current.month}`), 1);\n      } else {\n        incrementedDate = subMonths(new Date(`${current.year}-${current.month}`), 1);\n      }\n\n      let incremented = { month: this.parseMonth(incrementedDate.getMonth() + 1), year: incrementedDate.getFullYear().toString() };\n      this.monthSwitched$.next(incremented)\n    }\n  }\n\n\n  /**\n   * comparator function to sort by date descending (latest first)\n   */\n  public dateSorter = (a_date: string, b_date: string) => {\n    if (!a_date || !b_date) {\n      return;\n    }\n    return this.createComparatorNumber(b_date) - this.createComparatorNumber(a_date);\n  }\n\n  public amountSorter = (a: Expense, b: Expense) => {\n    return b.amount - a.amount;\n  }\n\n\n  /**\n  * Transforms \"2020-02-15\" to 20200215, for quick sorting after date\n  */\n  private createComparatorNumber(date: string) {\n    return parseInt(date.split('-').join(''))\n  }\n\n  public getCurrentMonthFilter(): string {\n    return '' + new Date().getFullYear() + '-' + this.parseMonth(new Date().getMonth() + 1)\n  }\n\n  public getMonthDateString(date: Date) {\n    return `${date.getFullYear()}-${this.parseMonth(date.getMonth() + 1)}`\n  }\n\n  public parseMonth(month: number): string {\n    if (month > 9) {\n      return month.toString();\n    } else {\n      return `0${month}`;\n    }\n  }\n}\n","export const groups: string[] = [\"Asia\", \"Trip Norway\", \"Studium\", \"Canada\"]","import { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\nimport { IndexedDBConnectionService } from '../indexed-dbconnection.service';\nimport { groups } from './Groups';\nimport { ExpenseService } from '../expenses/expense.service';\n\nexport interface GroupItem{\n  key: number;\n  groupName: string;\n}\n\nexport interface GroupTotal extends GroupItem {\n  amount: number;\n  firstExpenseDate?: string;\n  lastExpenseDate?: string;\n  deleted?: boolean;\n  duration?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n\n  private db: any;\n  private groups$: BehaviorSubject<GroupItem[]>;\n  private connection$: ReplaySubject<boolean>;\n  public defaultGroup: string;\n\n  constructor(\n    private indexedDBService: IndexedDBConnectionService\n  ) {\n    this.connection$ = new ReplaySubject(1);\n    this.createGroupDatabase();\n    this.groups$ = new BehaviorSubject<GroupItem[]>([]);\n    this.defaultGroup = localStorage.getItem(\"defaultGroup\") || \"General\"\n  }\n\n  public addGroup(group: string) {\n    let tx = this.db.transaction(['groups'], 'readwrite');\n    let store = tx.objectStore('groups');\n    store.add({groupName: group});\n    tx.oncomplete = () => {\n      this.refreshGroups();\n    }\n    tx.onerror = (event) => {\n      alert('error storing expense ' + event.target.errorCode);\n    }\n  };\n\n  public getGroups(): Observable<GroupItem[]> {\n    this.connection$.subscribe(()=>this.refreshGroups());\n    return this.groups$.asObservable();\n  }\n\n  // optimized for overlays which don't own a route to not request double amount\n  public getGroupsWithoutUpdate(){\n    return this.groups$.asObservable();\n  }\n\n  clearData(){\n    let transaction = this.db.transaction(\"groups\", \"readwrite\");\n    let objectStore = transaction.objectStore(\"groups\");\n    objectStore.clear();\n  }\n\n\n  public deleteGroup(key: number, groupName: string) {\n    let transaction = this.db.transaction(\"groups\", \"readwrite\");\n    let objectStore = transaction.objectStore(\"groups\");\n    let req = objectStore.delete(key);\n    req.onsuccess = () => {\n      this.refreshGroups();\n    }\n    if(this.defaultGroup == groupName){\n      this.setDefaultGroup(\"General\");\n    }\n  }\n\n\n  public setDefaultGroup(group:string){\n    localStorage.setItem(\"defaultGroup\", group)\n    this.defaultGroup= group;\n  }\n\n  /**\n   * Makes the Observable emit all of the new values from the DB\n   */\n  private refreshGroups() {\n    let transaction = this.db.transaction([\"groups\"]);\n    let object_store = transaction.objectStore(\"groups\");\n    let request = object_store.openCursor();\n    let result: GroupItem[] = []\n\n    request.onsuccess = (event) => {\n      let cursor = event.target.result;\n      if (cursor) {\n        let key = cursor.primaryKey;\n        let value = cursor.value;\n        result.push({ ...{ key }, ...value })\n        cursor.continue();\n      }\n      else {\n        this.groups$.next(result)\n      }\n    };\n  }\n\n  private createGroupDatabase() {\n    let dbReq = this.indexedDBService.getConnection();\n\n    dbReq.onupgradeneeded = (event) => {\n      let db = (event.target as any).result;\n      this.indexedDBService.upgradeDatabase(db);\n    }\n\n    dbReq.onsuccess = (event) => {\n      this.db = (event.target as any).result;\n      this.connection$.next(true);\n    }\n\n    dbReq.onerror = function (event) {\n      alert('error opening database ' + (event.target as any).errorCode);\n    }\n  }\n\n  public seedGroups(){\n    for (const group of groups) {\n      this.addGroup(group);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBConnectionService {\n\n  constructor() { }\n\n  upgradeDatabase(db: any){\n    const stores = db.objectStoreNames;\n\n    if (!stores.contains(\"expenses\")) {\n      db.createObjectStore('expenses', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'expenses'\")\n    }\n\n    if (!stores.contains(\"recurringExpenses\")) {\n      db.createObjectStore('recurringExpenses', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'expenses'\")\n    }\n\n    if (!stores.contains(\"groups\")) {\n      db.createObjectStore('groups', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'groups'\")\n    }\n  }\n\n  /**\n   * DB Versions:\n   * 1: expense\n   * 2: +groups\n   * 3: +recurringExpenses\n   */\n  getConnection(): IDBOpenDBRequest{\n    return indexedDB.open('ExpenseManagerDB', 3);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Expense } from '../expenses/expense.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SliderService {\r\n\r\n  private active$: BehaviorSubject<string>;\r\n  public activeComponent: string;\r\n  public currentExpenseForEdit: Expense;\r\n\r\n  constructor() {\r\n    this.active$= new BehaviorSubject<string>(null)\r\n   }\r\n\r\n  public getActiveComponent():string{\r\n     return this.activeComponent;\r\n  }\r\n\r\n  public getActiveComponentAsync():Observable<string>{\r\n    return this.active$.asObservable();\r\n  }\r\n\r\n  public show(component: string, expense?: Expense):void{\r\n    this.activeComponent= component;\r\n    if(expense){\r\n      this.currentExpenseForEdit = expense;\r\n    }\r\n    this.active$.next(component);\r\n  }\r\n\r\n  public hide():void{\r\n    if(this.currentExpenseForEdit){\r\n      this.currentExpenseForEdit = null;\r\n    }\r\n    this.activeComponent=null;\r\n    this.active$.next(null);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'localhost:3000/api'\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}