{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component.ts","./src/app/components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component.html","./src/app/components/expense-list/expense-list.component.ts","./src/app/components/expense-list/expense-list.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component.ts","./src/app/components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component.html","./src/app/components/recurring-expense-list/recurring-expense-list.component.ts","./src/app/components/recurring-expense-list/recurring-expense-list.component.html","./src/app/components/stt-recorder/stt-recorder.component.ts","./src/app/components/stt-recorder/stt-recorder.component.html","./src/app/pipes/date-duration.pipe.ts","./src/app/pipes/date-long-short.pipe.ts","./src/app/pipes/duration-week-day.pipe.ts","./src/app/pipes/pretty-currency.pipe.ts","./src/app/screens/add/add.component.ts","./src/app/screens/add/add.component.html","./src/app/screens/edit/edit.component.ts","./src/app/screens/edit/edit.component.html","./src/app/screens/filter/filter.component.ts","./src/app/screens/filter/filter.component.html","./src/app/screens/groups/groups.component.ts","./src/app/screens/groups/groups.component.html","./src/app/screens/home/home.component.ts","./src/app/screens/home/home.component.html","./src/app/screens/search/search.component.ts","./src/app/screens/search/search.component.html","./src/app/screens/settings/settings-bottom-sheet/settings-bottom-sheet.component.ts","./src/app/screens/settings/settings-bottom-sheet/settings-bottom-sheet.component.html","./src/app/screens/settings/settings.component.ts","./src/app/screens/settings/settings.component.html","./src/app/services/audio/audio.service.ts","./src/app/services/category/category.service.ts","./src/app/services/expenses/Expenses.ts","./src/app/services/expenses/expense.service.ts","./src/app/services/filter/filter.service.ts","./src/app/services/groups/Groups.ts","./src/app/services/groups/groups.service.ts","./src/app/services/indexed-dbconnection.service.ts","./src/app/services/slider/slider.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAsG;AAE/F,MAAM,gBAAgB,GAC3B,mEAAO,CAAC,iBAAiB,EAAE;IACzB,sEAAU,CAAC,sDAAsD,EAAE;QACjE,iEAAK,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;QAC/B,iEAAK,CAAC,gBAAgB,EAAE;YACtB,iEAAK,CAAC;gBACJ,QAAQ,EAAE,UAAU;gBACpB,GAAG,EAAE,CAAC;gBACN,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,MAAM;aACd,CAAC;SACH,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE;YACd,iEAAK,CAAC,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC;SACxB,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE,wEAAY,EAAE,CAAC;QAC/B,iEAAK,CAAC;YACJ,iEAAK,CAAC,QAAQ,EAAE;gBACd,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;aAClD,CAAC;YACF,iEAAK,CAAC,QAAQ,EAAE;gBACd,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;aAChD,CAAC;SACH,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE,wEAAY,EAAE,CAAC;KAChC,CAAC;IACF,sEAAU,CAAC,sDAAsD,EAAE;QAC/D,iEAAK,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;QAC/B,iEAAK,CAAC,gBAAgB,EAAE;YACtB,iEAAK,CAAC;gBACJ,QAAQ,EAAE,UAAU;gBACpB,GAAG,EAAE,CAAC;gBACN,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE,MAAM;aACd,CAAC;SACH,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE;YACd,iEAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC;SACzB,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE,wEAAY,EAAE,CAAC;QAC/B,iEAAK,CAAC;YACJ,iEAAK,CAAC,QAAQ,EAAE;gBACd,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;aACnD,CAAC;YACF,iEAAK,CAAC,QAAQ,EAAE;gBACd,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;aACjD,CAAC;SACH,CAAC;QACF,iEAAK,CAAC,QAAQ,EAAE,wEAAY,EAAE,CAAC;KAChC,CAAC;CACL,CAAC,CAAC;;;;;;;;;;;;;ACpDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEO;AACY;AAChB;AACqB;AACX;;;AAGpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,0EAAa,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,MAAM,EAAC,EAAE;IACrE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAiB,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,UAAU,EAAC,EAAG;IAClF,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,gFAAe,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,QAAQ,EAAC,EAAC;IAC1E,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACtD,CAAC;AAUK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAPlB;YACP,uEAAa;YACb,4FAAuB;YACvB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;QACS,4DAAY;mIAEX,gBAAgB,cANzB,uEAAa;QACb,4FAAuB,2EAGf,4DAAY;6FAEX,gBAAgB;cAR5B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC7B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACsB;AACxB;AAER;AAEH;;;;;;;;;;;ICNrC,6EACE;IAAA,yEACE;IAAA,uEAAM;IAAA,uDAAe;IAAA,4DAAO;IAC9B,4DAAM;IACR,4DAAa;;;IAFH,0DAAe;IAAf,oFAAe;;;;IAMrB,uEAAuH;IAA1E,ySAAS,4BAAoB,IAAC;IAA4C,yEAAc;IAAA,4DAAI;;;;IACzI,uEAA8K;IAAjI,qUAA0B;IAAuG,gEAAK;IAAA,4DAAI;;;IACvL,uEAAoD;IAAA,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,oFAAe;;;IACnE,uEAAiD;IAAA,iEAAM;IAAA,4DAAO;;;;IAC9D,wEAA4H;IAA7E,0SAAS,4BAAoB,IAAC;IAA+C,sEAAW;IAAA,4DAAI;;;IAMvI,uEAAiC;IAAA,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,0FAAqB;;;IACtD,uEAAyD;IAAA,8DAAE;IAAA,4DAAO;;;IAClE,uEAAkC;IAAA,uDAAsB;IAAA,4DAAO;;;IAA7B,0DAAsB;IAAtB,2FAAsB;;;;IAL9D,0EACE;;IAAA,wEAAyH;IAAjD,4SAAS,kCAA0B,WAAW,CAAC,IAAC;IAAC,uEAAY;IAAA,4DAAI;IACzI,0EACI;IADsB,8SAAS,4BAAoB,IAAC;IACpD,8HAAiC;IACjC,8HAAyD;IACzD,8HAAkC;IACtC,4DAAM;IACN,wEAA0H;IAAjD,4SAAS,kCAA0B,WAAW,CAAC,IAAC;IAAC,wEAAa;IAAA,4DAAI;IAC7I,4DAAM;;;IAR6C,kOAAiH;IACxI,0DAA6C;IAA7C,yGAA6C;IAE7D,0DAA0B;IAA1B,iIAA0B;IAC1B,0DAAiD;IAAjD,yMAAiD;IACjD,0DAA2B;IAA3B,kIAA2B;IAEV,0DAA6C;IAA7C,yGAA6C;;;IAhB5E,6EACE;IAAA,yEACE;IAAA,iHAAuH;;IACvH,iHAA8K;;;IAC9K,uHAAoD;;IACpD,uHAAiD;;IACjD,mHAA4H;;IAC9H,4DAAM;IAEN,yHACE;IASJ,4DAAa;;;IAjBmE,0DAA0C;IAA1C,qKAA0C;IAC9C,0DAAqG;IAArG,8RAAqG;IACvK,0DAA6C;IAA7C,uKAA6C;IAC7C,0DAA0C;IAA1C,uKAA0C;IAC8B,0DAA6C;IAA7C,wKAA6C;IAGwC,0DAAiD;IAAjD,yMAAiD;;;IAoBtN,qEAAmE;;;IACnE,wEAA4E;;ADlBvE,MAAM,YAAY;IAOvB,YACU,MAAc,EACf,aAA4B,EAC5B,aAA4B,EAC3B,QAAkB;QAHlB,WAAM,GAAN,MAAM,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAV5B,UAAK,GAAG,UAAU,CAAC;QACZ,gBAAW,GAAW,gBAAgB,CAAC;QAEvC,mBAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAChD,iBAAY,GAAoC,IAAI,CAAC;QAQ1D,MAAM,CAAC,MAAM,CAAC,IAAI,CAChB,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,+DAAe,CAAC,CAClD,CAAC,SAAS,CAAC,CAAC,KAAsB,EAAE,EAAE;YACrC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACjC,QAAQ,GAAG,EAAE;gBACX,KAAK,MAAM;oBACT,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC9B,MAAM;gBACR,KAAK,QAAQ;oBACX,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;oBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,MAAM;gBACR,KAAK,UAAU;oBACb,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,MAAM;gBACR;oBACE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC9B,MAAM;aACT;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,0DAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,EAAE;YACxG,IAAI,UAAU,GAAG;gBACf,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI;aACZ;YACD,IAAI,WAAW,EAAE;gBACf,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,KAAK,EAAE,OAAO,CAAC,CAAC;aACnG;iBAAM;gBACL,IAAI,MAAM,CAAC,IAAI,EAAE;oBACf,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,CAAC,CAAC;iBACnG;qBAAK,IAAG,MAAM,CAAC,YAAY,EAAC;oBAC3B,UAAU,CAAC,IAAI,GAAG,cAAc;iBACjC;aACF;YAED,IAAI,MAAM,CAAC,MAAM,EAAE;gBACjB,8BAA8B;gBAC9B,UAAU,CAAC,KAAK,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBACzC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACtC,UAAU,CAAC,KAAK,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;iBAC5C;aACF;YACD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,qCAAqC;IACvC,CAAC;IAED,YAAY,CAAC,MAAoB;QAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;IACvF,CAAC;;wEAtEU,YAAY;4FAAZ,YAAY;QClBzB,sHACE;QAKF,wHACE;QAoBF,yEACE;QAAA,oFAAgD;QAClD,4DAAM;QAGN,wEAAyB;QAEzB,yEACE;QAAA,gHAAyD;QACzD,sHAA+D;QACjE,4DAAM;;;QArCM,gGAAkC;QAMlC,0DAAkC;QAAlC,gGAAkC;QAqBrB,0DAAyC;QAAzC,oGAAyC;QAO1C,0DAAyD;QAAzD,iHAAyD;QACtE,0DAA+C;QAA/C,6GAA+C;QAC5C,0DAAkD;QAAlD,gHAAkD;6jPDvBlD;YACV,4DAAgB;YAChB,6BAA6B;SAC9B;6FAEU,YAAY;cATxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,UAAU,EAAE;oBACV,4DAAgB;oBAChB,6BAA6B;iBAC9B;aACF;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACN;AACI;AACT;AACgC;AACjB;AACJ;AACC;AACG;AACS;AACA;AACG;AACT;AACR;AACE;AACQ;AACD;AACL;AACO;AACA;AACb;AACa;AACA;AACF;AACvB;AACY;AACO;AACG;AACuB;AAC1B;AACM;AACwD;AACJ;AACnE;AACgE;AACoC;AACpF;AACV;AACL;AACD;AACH;AACsC;;;AACxF,2EAAkB,CAAC,kEAAQ,EAAE,IAAI,CAAC,CAAC;AAkD5B,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,yDAAQ;KACT,YAtBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,gFAAkB;YAClB,uEAAc;YACd,yEAAe;YACf,uEAAc;YACd,oFAAoB;YACpB,iFAAmB;YACnB,qEAAa;YACb,mEAAmB;YACnB,oFAAoB;YACpB,2EAAmB;YACnB,uEAAc;YACd,2DAAW;YACX,yEAAqB;YACrB,sEAAgB;YAChB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;SACpF;mIAMU,SAAS,mBA9ClB,2DAAY;QACZ,uEAAY;QACZ,0EAAa;QACb,mFAAe;QACf,oFAAe;QACf,uFAAiB;QACjB,iFAAe;QACf,iFAAe;QACf,iFAAe;QACf,+EAAkB;QAClB,2EAAgB;QAChB,8EAAiB;QACjB,qGAAoB;QACpB,2EAAa;QACb,yIAA2B;QAC3B,qIAA4B;QAC5B,kIAA6B;QAC7B,sKAAoC;QACpC,kFAAmB;QACnB,qGAAoB,aAGpB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,gFAAkB;QAClB,uEAAc;QACd,yEAAe;QACf,uEAAc;QACd,oFAAoB;QACpB,iFAAmB;QACnB,qEAAa;QACb,mEAAmB;QACnB,oFAAoB;QACpB,2EAAmB;QACnB,uEAAc;QACd,2DAAW;QACX,yEAAqB;QACrB,sEAAgB;6FAQP,SAAS;cAhDrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uEAAY;oBACZ,0EAAa;oBACb,mFAAe;oBACf,oFAAe;oBACf,uFAAiB;oBACjB,iFAAe;oBACf,iFAAe;oBACf,iFAAe;oBACf,+EAAkB;oBAClB,2EAAgB;oBAChB,8EAAiB;oBACjB,qGAAoB;oBACpB,2EAAa;oBACb,yIAA2B;oBAC3B,qIAA4B;oBAC5B,kIAA6B;oBAC7B,sKAAoC;oBACpC,kFAAmB;oBACnB,qGAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,gFAAkB;oBAClB,uEAAc;oBACd,yEAAe;oBACf,uEAAc;oBACd,oFAAoB;oBACpB,iFAAmB;oBACnB,qEAAa;oBACb,mEAAmB;oBACnB,oFAAoB;oBACpB,2EAAmB;oBACnB,uEAAc;oBACd,2DAAW;oBACX,yEAAqB;oBACrB,sEAAgB;oBAChB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;iBACpF;gBACD,SAAS,EAAE;oBACT,yDAAQ;iBACT;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgC;;;;;AASnF,MAAM,2BAA2B;IAEtC,YACwC,OAAY,EAC3C,aAA4B,EAC5B,cAA8B,EAC7B,cAA8D;QAHhC,YAAO,GAAP,OAAO,CAAK;QAC3C,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC7B,mBAAc,GAAd,cAAc,CAAgD;IAClE,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAE,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,CAAa,EAAE,GAAW;QAC7C,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,OAAO,CAAC,4CAA4C,CAAC,EAAE;YACzD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QACD,uCAAuC;IACzC,CAAC;IAED,WAAW,CAAC,CAAa;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,KAAiB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAEO,OAAO;QACb,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;;sGAtCU,2BAA2B,kEAG5B,oFAAqB;2GAHpB,2BAA2B;QCVxC,yEACI;QAAA,yEACI;QAAA,yEAA0D;QAA9B,sJAAS,uBAAmB,IAAC;QAAC,+DAAI;QAAA,4DAAM;QACpE,yEAA2E;QAA7C,sJAAS,0CAAkC,IAAC;QAAC,iEAAM;QAAA,4DAAM;QAC3F,4DAAM;QACN,yEAAsD;QAAxB,sJAAS,iBAAa,IAAC;QAAC,iEAAM;QAAA,4DAAM;QACtE,4DAAM;;6FDIO,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;sBAII,oDAAM;uBAAC,oFAAqB;;;;;;;;;;;;;;AEbjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAK2C;AACnB;AACxC;;;;;;;;;;;ICLjC,2EAAkD;IAAA,kEAAO;IAAA,4DAAO;;;IASxD,0EACI;IACA,uEAAM;IAAA,uDAAuB;IAAA,4DAAO;IACxC,4DAAM;;;IADI,0DAAuB;IAAvB,yFAAuB;;;;IAZ7C,yEACI;IADsE,6WAA2B;IACjG,8HAAkD;IAClD,oEAAkH;IAClH,yEACI;IAAA,yEACI;IAAA,yEAA4B;IAAA,uDAAgC;;IAAA,4DAAM;IAClE,yEAA4B;IAAA,uDAAgB;IAAA,4DAAM;IAClD,2EAA8B;IAAA,wDAAmC;;IAAA,4DAAM;IAC3E,4DAAM;IACN,2EACI;IAAA,+HACI;IAIJ,2EACI;IAAA,2EACI;IACA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACvB,4DAAM;IACN,2EAAyB;IAAA,wDAAiB;IAAA,4DAAM;IAChD,2EACI;IAAA,yEAAsE;IAA3C,qYAA0C;IAAC,sEAAU;IAAA,4DAAI;IACxF,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEV,4DAAM;;;;;IA3BsB,0DAAyB;IAAzB,wFAAyB;IACjB,0DAA2E;IAA3E,6IAA2E;IAGvE,0DAAgC;IAAhC,mJAAgC;IAChC,0DAAgB;IAAhB,kFAAgB;IACd,0DAAmC;IAAnC,uJAAmC;IAE9C,0DAAuC;IAAvC,8GAAuC;IACzB,0DAA2B;IAA3B,0FAA2B;IAU/B,0DAAiB;IAAjB,6FAAiB;;;;IArB9D,yEACI;IADsB,6UAAiC;IACvD,wHACI;IA4BR,4DAAM;;;IA7BG,0DAA+C;IAA/C,sFAA+C;;AD8BjD,MAAM,oBAAoB;IAE/B,YACS,cAA8B,EAC9B,eAAgC,EAChC,aAA4B,EAC5B,aAA4B,EAC3B,WAA2B;QAJ5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAAgB;QAK5B,YAAO,GAAY,IAAI,CAAC;QAe1B,WAAM,GAAG,EAAE;IAnBd,CAAC;IAML,QAAQ;QACN,kDAAK,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YACpF,IAAI,CAAC,MAAM,GAAE,EAAE;QACjB,CAAC,CAAC,CAAC;QACH,0CAA0C;QAC1C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,EAAE;YAC3C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;YACpB,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC;IACJ,CAAC;IAGD,oBAAoB,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC;YACpB,4BAA4B;YAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SAClB;aAAI;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAI,IAAI,CAAC;SAC5B;IACH,CAAC;IAEM,eAAe,CAAC,CAAa;QAClC,CAAC,CAAC,eAAe,EAAE,CAAC;IACtB,CAAC;IAED,eAAe,CAAC,CAAY,EAAE,OAAY;QACxC,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gHAA2B,EAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;IACrE,CAAC;;wFAlDU,oBAAoB;oGAApB,oBAAoB;QC/BjC,gHACI;;QADwD,6EAAe;usVDY7D;YACV,mEAAO,CAAC,YAAY,EAAE;gBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;oBACjB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;gBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;oBAChB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;gBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;gBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;aACtD,CAAC;SACH;6FAIU,oBAAoB;cArBhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,UAAU,EAAE;oBACV,mEAAO,CAAC,YAAY,EAAE;wBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;4BACjB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,KAAK;yBACd,CAAC,CAAC;wBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;4BAChB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,GAAG;yBACZ,CAAC,CAAC;wBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;wBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;qBACtD,CAAC;iBACH;gBACD,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAWE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AE1CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,eAAe;IAE1B,YACS,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IACjC,CAAC;IAEL,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCR5B,yEACE;QAAA,0EACE;QAAA,oEAAmC;QAErC,4DAAO;QAEP,0EACE;QAAA,oEAAsC;QACxC,4DAAO;QAEP,0EACE;QAD+C,2IAAS,uBAAmB,KAAK,CAAC,IAAC;QAClF,oEAAmC;QACrC,4DAAO;QAEP,0EACE;QADgD,2IAAS,uBAAmB,QAAQ,CAAC,IAAC;QACtF,oEAAqC;QACvC,4DAAO;QAGP,0EACE;QAAA,qEAAuC;QACzC,4DAAO;QACP,+EAAqC;QAGvC,4DAAM;;6FDjBO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,eAAe;IAE1B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;;QCP5B,yEACI;QAAA,6DAAY;QAChB,4DAAM;;6FDKO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgC;;;;;AASnF,MAAM,oCAAoC;IAE/C,YACwC,OAAY,EAC3C,aAA4B,EAC5B,cAA8B,EAC7B,cAAuE;QAHzC,YAAO,GAAP,OAAO,CAAK;QAC3C,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC7B,mBAAc,GAAd,cAAc,CAAyD;IAC3E,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAE,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,CAAa,EAAE,GAAW;QAC7C,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,OAAO,CAAC,qFAAqF,CAAC,EAAE;YAClG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QACD,uCAAuC;IACzC,CAAC;IAED,WAAW,CAAC,CAAa;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,KAAiB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAEO,OAAO;QACb,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;;wHAtCU,oCAAoC,kEAGrC,oFAAqB;oHAHpB,oCAAoC;QCVjD,yEACI;QAAA,yEACI;QAAA,yEAA0D;QAA9B,+JAAS,uBAAmB,IAAC;QAAC,+DAAI;QAAA,4DAAM;QACpE,yEAA2E;QAA7C,+JAAS,0CAAkC,IAAC;QAAC,iEAAM;QAAA,4DAAM;QAC3F,4DAAM;QACN,yEAAsD;QAAxB,+JAAS,iBAAa,IAAC;QAAC,iEAAM;QAAA,4DAAM;QACtE,4DAAM;;6FDIO,oCAAoC;cALhD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,iDAAiD,CAAC;aAC/D;;sBAII,oDAAM;uBAAC,oFAAqB;;;;;;;;;;;;;;AEbjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAKwB;AAEsC;;;;;;;;;ICGvG,0EAAqD;IAAA,uDAAuB;IAAA,4DAAM;;;IAA7B,0DAAuB;IAAvB,yFAAuB;;;;IATxF,yEACI;IADsE,+WAA2B;IACjG,oEAAkH;IAClH,yEACI;IAAA,yEACI;IACA,yEAA4B;IAAA,uDAAgB;IAAA,4DAAM;IAClD,yEAA8B;IAAA,uDAAmC;;IAAA,4DAAM;IAC3E,4DAAM;IACN,yEACI;IAAA,iIAAqD;IACrD,2EACI;IAAA,2EAAyB;IAAA,kEAAM;IAAA,4DAAM;IACrC,2EAAyB;IAAA,wDAA+B;;IAAA,4DAAM;IAClE,4DAAM;IACN,2EACI;IAAA,2EAAyB;IAAA,kEAAM;IAAA,4DAAM;IACrC,2EAAyB;IAAA,wDAAiB;IAAA,4DAAM;IAChD,2EACI;IAAA,yEAAsE;IAA3C,uYAA0C;IAAC,sEAAU;IAAA,4DAAI;IACxF,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEV,4DAAM;;;;;IAvB8B,0DAA2E;IAA3E,6IAA2E;IAIvE,0DAAgB;IAAhB,kFAAgB;IACd,0DAAmC;IAAnC,qJAAmC;IAE9C,0DAAuC;IAAvC,8GAAuC;IACjC,0DAA2B;IAA3B,0FAA2B;IAGvB,0DAA+B;IAA/B,wKAA+B;IAI/B,0DAAiB;IAAjB,6FAAiB;;ADavD,MAAM,6BAA6B;IAExC,YACS,cAA8B,EAC9B,eAAgC,EAChC,aAA4B,EAC3B,WAA2B;QAH5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAAgB;QAgB9B,WAAM,GAAG,EAAE;IAfd,CAAC;IAML,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,CAAC,GAAE,EAAE;YACvD,IAAI,CAAC,MAAM,GAAG,EAAE;QAClB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAE,EAAE;YAClC,IAAI,CAAC,MAAM,GAAG,EAAE;QAClB,CAAC,CAAC;IACJ,CAAC;IAGD,oBAAoB,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC;YACpB,4BAA4B;YAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SAClB;aAAI;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAI,IAAI,CAAC;SAC5B;IACH,CAAC;IAEM,eAAe,CAAC,CAAa;QAClC,CAAC,CAAC,eAAe,EAAE,CAAC;IACtB,CAAC;IAED,2CAA2C;IAC3C,yFAAyF;IACzF,2CAA2C;IAC3C,aAAa;IACb,4CAA4C;IAC5C,MAAM;IACN,IAAI;IAEJ,eAAe,CAAC,CAAY,EAAE,OAAY;QACxC,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mIAAoC,EAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;QAC5E,+BAA+B;IACjC,CAAC;;0GAtDU,6BAA6B;6GAA7B,6BAA6B;QC9B1C,yEACI;QADsB,wJAAS,2BAAuB,IAAC;QACvD,2HACI;QAwBR,4DAAM;;QAzBG,0DAA+C;QAA/C,iFAA+C;stTDU1C;YACV,mEAAO,CAAC,YAAY,EAAE;gBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;oBACjB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;gBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;oBAChB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;gBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;gBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;aACtD,CAAC;SACH;6FAIU,6BAA6B;cArBzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,UAAU,EAAE;oBACV,mEAAO,CAAC,YAAY,EAAE;wBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;4BACjB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,KAAK;yBACd,CAAC,CAAC;wBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;4BAChB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,GAAG;yBACZ,CAAC,CAAC;wBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;wBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;qBACtD,CAAC;iBACH;gBACD,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD;;kBAUE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;;;;;;;;;AExCkD;AACE;AAEA;;;AAQrD,MAAM,oBAAoB;IAE/B,YACU,YAA0B,EAC1B,IAAY;QADZ,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAQ;QAGf,oBAAe,GAA4B,IAAI,oDAAe,CAAC,UAAU,CAAC,CAAC;QAE3E,YAAO,GAAU,EAAE,CAAC;QAmE3B,gBAAW,GAAG,EAAE,CAAC;IAvEb,CAAC;IAOL,QAAQ;IACR,CAAC;IAEK,cAAc;;YAClB,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,KAAK,UAAU,EAAE;gBAC7C,IAAI,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;gBAE/D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAEvC,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC7B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAClD,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAEK,aAAa;;YACjB,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,KAAK,WAAW,EAAE;gBAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACtC,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC5B,6CAA6C;gBAC7C,uCAAuC;gBACvC,IAAI;aACL;QACH,CAAC;KAAA;IASD,cAAc,CAAC,YAAyB,EAAE,eAAuB,MAAM,CAAC,gBAAgB,GAAG,EAAE;QAC3F,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,4CAAO,EAAc,CAAC;QAElD,oBAAoB;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAE,MAAc,CAAC,YAAY,IAAK,MAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC;QAC/F,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;QAC1E,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1F,CAAC,CAAC;QACF,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAE9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAChD,gEAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAClC,iEAAU,CAAC,YAAY,CAAC,EACxB,0DAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC3B,CAAC;QACF,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IACD,gBAAgB,CAAC,MAAoB;QACnC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;YACvC,OAAO,IAAI,UAAU,CAAC,CAAC,GAAG,QAAQ,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,EAAE,IAAI,UAAU,EAAE,CAAC;IACxB,CAAC;IAIC,iBAAiB,CAAC,UAAU,EAAE,eAAuB;QACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;SAClD;QAED,MAAM,cAAc,GAAG,KAAK,CAAC;QAC7B,MAAM,WAAW,GAAG,GAAG,CAAC;QAExB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,cAAc,GAAG,eAAe,CAAC,GAAG,WAAW,EAAE;YAC/E,IAAI,WAAW,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,UAAU,GAAG,CAAC,CAAC;YAEnB,OAAO,WAAW,GAAG,WAAW,EAAE;gBAC9B,GAAG,GAAG,CAAC,CAAC;gBACR,GAAG,GAAG,CAAC,CAAC;gBACR,OAAO,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,eAAe,GAAG,cAAc,CAAC,EAAE;oBACzG,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBACpC,GAAG,EAAE,CAAC;oBACN,UAAU,EAAE,CAAC;iBAChB;gBACD,WAAW,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;gBACrC,WAAW,EAAE,CAAC;aACjB;YAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SACzD;IACL,CAAC;IACD,cAAc;QACZ,mEAAmE;QACnE,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;;wFAnHY,oBAAoB;oGAApB,oBAAoB;QCXjC,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;QAG1B,yEAEM;QAFgB,2JAAe,oBAAgB,IAAC,+FAAc,mBAAe,IAA7B;QAEtD,4DAAM;;6FDMO,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAoD;AAEsC;;AAKnF,MAAM,gBAAgB;IAH7B;QAKU,iBAAY,GAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KAqBtH;IAnBC,SAAS,CAAC,KAA0B;QAClC,IAAI,QAAQ,GAAE,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC/C,IAAI,MAAM,GAAI,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAE9C,eAAe;QACf,IAAG,0DAAS,CAAC,QAAQ,EAAC,MAAM,CAAC,EAAC;YAC5B,OAAO,GAAG,wDAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,wDAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;SAC9F;QAED,IAAG,4DAAW,CAAC,QAAQ,EAAC,MAAM,CAAC,EAAC;YAC9B,OAAO,GAAG,wDAAO,CAAC,QAAQ,CAAC,MAAM,wDAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,wDAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;SACnH;QAED,IAAG,2DAAU,CAAC,QAAQ,EAAC,MAAM,CAAC,EAAC;YAC7B,OAAO,GAAG,wDAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,wDAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,wDAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;SAC5J;QAED,OAAO,GAAG,wDAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,wDAAO,CAAC,QAAQ,CAAC,MAAM,wDAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,yDAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,wDAAO,CAAC,MAAM,CAAC,EAAE,CAAC;IAChL,CAAC;;gFAtBU,gBAAgB;kHAAhB,gBAAgB;6FAAhB,gBAAgB;cAH5B,kDAAI;eAAC;gBACJ,IAAI,EAAE,cAAc;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAoD;AAEjB;;;AAK5B,MAAM,iBAAiB;IAE5B,YACU,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAC1B,CAAC;IAEH,SAAS,CAAC,IAAY;QACpB,IAAG,wDAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,wDAAO,CAAC,IAAI,IAAI,EAAE,CAAC,EAAC;YAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC;SAC9C;aAAI;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;SAChD;IACH,CAAC;;kFAZU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAoD;;AAK7C,MAAM,mBAAmB;IAE9B,SAAS,CAAC,KAAa;QACrB,IAAI,MAAM,GAAC,EAAE;QACb,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,KAAK,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAC,GAAG,CAAC,GAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAC,GAAG,GAAG,MAAM,GAAC,OAAO,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,GAAC,CAAC,GAAG,MAAM,GAAC,OAAO,GAAG,KAAK,GAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/E,kBAAkB;QAClB,cAAc;QACd,IAAI;QAEJ,IAAG,KAAK,GAAC,CAAC,EAAC;YACT,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;SACrD;QAED,IAAG,MAAM,GAAC,CAAC,EAAC;YACV,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC;SACxD;QAED,IAAG,KAAK,GAAC,CAAC,EAAC;YACT,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACtD;QAED,IAAG,IAAI,GAAC,CAAC,IAAI,KAAK,IAAE,CAAC,EAAC;YACpB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnD;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE3B,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,IAAG,KAAK,GAAC,CAAC,EAAC;YACT,OAAO,MAAM,CAAC;SACf;aAAI;YACH,OAAO,OAAO,CAAC;SAChB;IACH,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAG,MAAM,GAAC,CAAC,EAAC;YACV,OAAO,QAAQ,CAAC;SACjB;aAAI;YACH,OAAO,OAAO,CAAC;SAChB;IACH,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,IAAG,KAAK,GAAC,CAAC,EAAC;YACT,OAAO,OAAO,CAAC;SAChB;aAAI;YACH,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAG,IAAI,GAAC,CAAC,EAAC;YACR,OAAO,MAAM,CAAC;SACf;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;sFA/DU,mBAAmB;wHAAnB,mBAAmB;6FAAnB,mBAAmB;cAH/B,kDAAI;eAAC;gBACJ,IAAI,EAAE,iBAAiB;aACxB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,kBAAkB;IAE7B,SAAS,CAAC,KAAa;QACrB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAChC,CAAC;;oFAJU,kBAAkB;sHAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,kDAAI;eAAC;gBACJ,IAAI,EAAE,gBAAgB;aACvB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACnC;AAI9B;;;;;;;;;;;;;;;;;ICDhC,uEAA0B;IAAA,+DAAI;IAAA,4DAAO;;;IACrC,uEAA2B;IAAA,8DAAG;IAAA,4DAAO;;;IAc/B,4EAA0D;IAAA,2EAAgB;IAAA,4DAAY;;;IACtF,4EAA2D;IAAA,qFAA0B;IAAA,4DAAY;;;IAMjG,4EAA4D;IAAA,6EAAkB;IAAA,4DAAY;;;IAqBxF,6EAA0E;IAAA,uDAAmB;IAAA,4DAAS;;;IAAxD,iGAA2B;IAAC,0DAAmB;IAAnB,oFAAmB;;;IAa7F,4EAAkE;IAAA,sFAA2B;IAAA,4DAAY;;;IAe3G,4EAAuE;IAAA,2EAAgB;IAAA,4DAAY;;;IACnG,4EAAwE;IAAA,qFAA0B;IAAA,4DAAY;;;IAM9G,4EAAyE;IAAA,6EAAkB;IAAA,4DAAY;;;IAqBrG,6EAA0E;IAAA,uDAAmB;IAAA,4DAAS;;;IAAxD,iGAA2B;IAAC,0DAAmB;IAAnB,oFAAmB;;;IAa7F,4EAA+E;IAAA,sFAA2B;IAAA,4DAAY;;ADnG7H,MAAM,YAAY;IACvB,YACS,aAA4B,EAC5B,cAA8B,EAC9B,aAA4B,EAC5B,eAAgC,EAC/B,aAA4B,EAC5B,OAAe;QALhB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAQ;IACrB,CAAC;IAIL,aAAa;QACX,gEAAgE;QAChE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9F,CAAC;IASD,QAAQ;;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,OAAC,IAAI,CAAC,WAAW,0CAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1E,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9D,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpF,KAAK,EAAE,IAAI,0DAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YACjC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjG,kBAAkB,EAAE,IAAI,0DAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnE,eAAe,EAAE,IAAI,0DAAW,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChE,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SACtE,CAAC,CAAC;QAEH,yBAAyB;QACzB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAC;oBAC7B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;wBACvB,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;wBACrC,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;wBACzC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC;wBACrD,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;wBAC7C,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;wBACvC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;qBACpD,CAAC,CAAC;iBACJ;qBAAI;oBACH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;wBACrB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;wBAC3B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;wBAC/B,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;wBAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;wBACnC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;wBAC7B,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;qBAC1C,CAAC,CAAC;iBACJ;YACH,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;aAAM;YACL,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACrB,IAAI,EAAE,EAAE;oBACR,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;oBACxB,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,eAAe;oBAC9C,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY;oBACtC,WAAW,EAAE,EAAE;iBAChB,CAAC;YACJ,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;IAC7D,CAAC;IAED,eAAe;QACb,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;YACnB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;IACH,CAAC;IAGD,UAAU,CAAC,CAAoB;QAC7B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,WAAmB,EAAE,SAAiB,EAAE,QAAgB;;QAC/D,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACnE;aAAM;YACL,mBAAO,IAAI,CAAC,aAAa,0CAAE,QAAQ,CAAC,WAAW,2CAAG,QAAQ,CAAC,SAAS,EAAE;SACvE;IACH,CAAC;IAEO,mBAAmB,CAAC,SAAoB;QAC9C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC9C,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAE/B,OAAO,GAAG,WAAW,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;IAC3J,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;YAC/B,IAAI,OAAO,GAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;iBACrD;qBAAM;oBACL,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;oBAC/B,IAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAC;wBAC5B,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;qBAC1B;oBACD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;iBAC7D;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC3B;SACF;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,OAAO,GAAE;gBACX,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc;gBAC7C,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB;gBACjD,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK;gBACtD,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kBAAkB;gBACrD,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe;gBAC/C,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,qBAAqB;gBAC3D,SAAS,EAAE,IAAI;gBACf,UAAU,EAAE,IAAI;aACjB,CAAC;YAEF,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;gBAC5B,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;oBACnB,OAAO,CAAC,UAAU,GAAE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;oBAClE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;iBAC9D;qBAAI;oBACH,OAAO,CAAC,UAAU,GAAE,IAAI,CAAC,WAAW,CAAC,UAAU;oBAC/C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,mBAAmB,CAAC;iBACtF;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC3B;SACF;IACH,CAAC;;wEA5JU,YAAY;4FAAZ,YAAY;;;;;;;;QCjBzB,yEACE;QAAA,6EACE;QAAA,yEACE;QAAA,uEAAgH;QAAlF,qIAAS,wBAAoB,IAAC;QAAoD,gEAAK;QAAA,4DAAI;QACzH,0GAA0B;QAC1B,0GAA2B;QAC3B,uEAAuJ;QAA1B,qIAAS,mBAAe,IAAC;QAAC,gEAAK;QAAA,4DAAI;QAClK,4DAAM;QACR,4DAAa;QAEb,mFACE;QAD0E,yKAAqB,sBAAkB,IAAC;QAClH,8EACE;QAAA,0EACE;QAAA,8EAGE;QAHsE,2IAAU,mBAAe,IAAC;QAGhG,sFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEACA;QAAA,sHAA0D;QAC1D,sHAA2D;QAC7D,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,2EAAU;QAAA,4DAAY;QACjC,4EACA;QAAA,sHAA4D;QAC9D,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,8EACE;QAAA,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAA8B;QAAA,yEAAa;QAAA,4DAAS;QACpD,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAiC;QAAA,8EAAkB;QAAA,4DAAS;QAC5D,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QAC1C,4DAAS;QACX,4DAAiB;QAEnB,sFACI;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,8EACE;QAAA,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,iHAA0E;;QAC5E,4DAAS;QACX,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEACF;QAAA,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,+EAC2D;QACzD,sHAAkE;QACtE,4DAAiB;QACjB,wEACF;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAU;QAGV,+EACE;QAAA,2EACA;QAAA,2EAAiC;QAAA,wKAA4G;QAAA,4DAAM;QACnJ,8EACI;QADsE,2IAAU,mBAAe,IAAC;QAChG,sFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEACA;QAAA,sHAAuE;QACvE,sHAAwE;QAC1E,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,2EAAU;QAAA,4DAAY;QACjC,wEACA;QAAA,sHAAyE;QAC3E,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,8EACE;QAAA,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAA8B;QAAA,yEAAa;QAAA,4DAAS;QACpD,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAiC;QAAA,8EAAkB;QAAA,4DAAS;QAC5D,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QAC1C,4DAAS;QACX,4DAAiB;QAEjB,uFACE;QAAA,8EAAW;QAAA,kEAAK;QAAA,4DAAY;QAC5B,+EACE;QAAA,+EAAwB;QAAA,oEAAO;QAAA,4DAAS;QACxC,mHAA0E;;QAC5E,4DAAS;QACX,4DAAiB;QAEjB,uFACE;QAAA,8EAAW;QAAA,wEAAW;QAAA,4DAAY;QAClC,yEACF;QAAA,4DAAiB;QAEjB,uFACE;QAAA,8EAAW;QAAA,wEAAW;QAAA,4DAAY;QAClC,gFAC2D;QACzD,wHAA+E;QACnF,4DAAiB;QACjB,yEACF;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAU;QAEZ,4DAAgB;QAElB,4DAAM;;QAzHM,0DAAmB;QAAnB,iFAAmB;QACnB,0DAAoB;QAApB,kFAAoB;QACwC,0DAA0D;QAA1D,sHAA0D;QAIX,0DAAmD;QAAnD,oJAAmD;QAC7J,0DAAmD;QAAnD,sJAAmD;QAE7B,0DAAyB;QAAzB,sFAAyB;QAMrC,0DAA8C;QAA9C,4GAA8C;QAC9C,0DAA+C;QAA/C,6GAA+C;QAM/C,0DAAgD;QAAhD,8GAAgD;QAqBjD,2DAAqC;QAArC,mJAAqC;QAalC,2DAAsD;QAAtD,oHAAsD;QAQlE,0DAAoD;QAApD,uJAAoD;QAGhC,0DAA2B;QAA3B,wFAA2B;QAIrC,0DAA2D;QAA3D,yHAA2D;QAC3D,0DAA4D;QAA5D,0HAA4D;QAM5D,0DAA6D;QAA7D,2HAA6D;QAqB9D,2DAAqC;QAArC,oJAAqC;QAalC,2DAAmE;QAAnE,iIAAmE;;6FDnG/E,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAWE,uDAAS;mBAAC,eAAe;;kBACzB,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AE5BvB;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;6FDOL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAGzB;;;;;;;;;;;;;;ICU5C,qFACE;IAAA,4EAAW;IAAA,gEAAK;IAAA,4DAAY;IAC5B,gFACF;IAD+B,oWAA0B;IAAvD,4DACF;IAAA,4DAAiB;;;IADc,0DAA0B;IAA1B,0FAA0B;;;IAkBjD,6EAAwE;IAAA,uDAAmB;IAAA,4DAAS;;;IAAtD,uFAAyB;IAAC,0DAAmB;IAAnB,qFAAmB;;;;IAG/F,0EACE;IAD8C,6aAA8B;IAC5E,wEAA0B;IAAA,gEAAK;IAAA,4DAAI;IACrC,4DAAM;;;;IAVR,0EACE;IAAA,qFACE;IAAA,4EAAW;IAAA,gEAAK;IAAA,4DAAY;IAC5B,iFACE;IAD4C,uYAA+B;IAC3E,6EAAwB;IAAA,kEAAO;IAAA,4DAAS;IACxC,+HAAwE;;IAC1E,4DAAS;IACX,4DAAiB;IACjB,2HACE;IAEJ,4DAAM;;;;IAR4C,0DAA+B;IAA/B,oGAA+B;IAEnE,0DAAqC;IAArC,sJAAqC;IAG8B,0DAAiC;IAAjC,oGAAiC;;;;IATpH,0EACE;IAAA,oHACE;IAWF,0EACE;IADkC,qSAAS,6BAAoB,SAAS,CAAC,IAAC;IAC1E,wEAA0B;IAAA,8DAAG;IAAA,4DAAI;IACjC,2EAAmB;IAAA,+EAAoB;IAAA,4DAAO;IAChD,4DAAM;IACR,4DAAM;;;IAhB2B,0DAAyD;IAAzD,4FAAyD;;;IAuBxF,sFAEE;IAAA,uDACF;IAAA,4DAAmB;;;IAFjB,8EAAgB;IAChB,0DACF;IADE,uFACF;;AD3CC,MAAM,eAAe;IAkB1B,YACU,YAA2B,EAC3B,aAA4B;QAD5B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,kBAAa,GAAb,aAAa,CAAe;QANtC,gBAAW,GAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAOvC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAClD,sCAAsC;YACtC,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,IAAI,CAAC,YAAY,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC7D,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;iBAC/B;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAG,KAAK,CAAC,YAAY,EAAC;wBACpB,IAAI,CAAC,WAAW,GAAG,QAAQ;qBAC5B;yBAAI;wBACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;qBAC1B;iBACF;gBACD,IAAI,KAAK,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC;oBACnC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAChC;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC/B;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QAGL,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAClC,2DAAI,CAAC,CAAC,CAAC,EACP,6DAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CACpB,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC;QAEA,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC;IACjE,CAAC;IAED,iBAAiB,CAAC,KAAY;QAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,YAAY,CAAC,CAAM;QACjB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;QACpC,IAAG,CAAC,CAAC,OAAO,EAAC;YACT,IAAI,CAAC,cAAc,GAAE,CAAC,SAAS,CAAC,CAAC,CAAC,qDAAqD;SAC1F;IACH,CAAC;IAED,WAAW,CAAC,CAAM;QAChB,IAAG,CAAC,CAAC,KAAK,IAAI,UAAU,EAAC;YACvB,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;SAC/D;IACH,CAAC;IAGD,YAAY;QACV,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE9D,IAAI,SAAS,GAA0B,EAAE;QACzC,IAAG,CAAC,IAAI,CAAC,iBAAiB,EAAC;YACzB,SAAS,CAAC,MAAM,GAAC,IAAI,CAAC,cAAc,CAAC;SACtC;QAED,IAAG,IAAI,CAAC,WAAW,IAAI,UAAU,EAAC;YAChC,SAAS,CAAC,IAAI,GAAC;gBACb,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;aACxC;YACD,SAAS,CAAC,YAAY,GAAE,KAAK,CAAC;SAC/B;aAAK,IAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAC;YACjC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;SAChC;aAAI;YACH,SAAS,CAAC,YAAY,GAAE,IAAI,CAAC;SAC9B;QAED,IAAI,iBAAiB,GAAE,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC1D,IAAG,IAAI,CAAC,UAAU,KAAK,iBAAiB,EAAC;YACvC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACnD;QAED,IAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAC;YAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC;SACxC;IACH,CAAC;;8EA3GU,eAAe;+FAAf,eAAe;;;;;;;;QCX5B,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,uEAA+B;QAAA,gEAAK;QAAA,4DAAI;QACxC,uEAAM;QAAA,+DAAI;QAAA,4DAAO;QACnB,4DAAM;QACH,qFACD;QAD8C,kMAAyB,gGAAW,uBAAmB,IAA9B;QACvE,sFAA+E;QAAA,mEAAQ;QAAA,4DAAmB;QAC1G,uFAAkF;QAAA,wEAAY;QAAA,4DAAmB;QACjH,uFAAoF;QAAA,0EAAc;QAAA,4DAAmB;QACvH,4DAAkB;QAElB,mIACE;QAGJ,4DAAM;QAEN,0EACE;QAAA,0EACE;QACA,wEAA+B;QAAA,uEAAW;QAAA,4DAAI;QAC9C,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACrB,4DAAM;QACN,uFACkC;QAAhC,0JAAU,wBAAoB,IAAC;QAAC,wDAAyC;QAAA,4DAAmB;QAC9F,6GACE;QAkBJ,4DAAM;QAEN,0EACE;QAAA,6EAA4D;QAAA,wEAA+B;QAAA,gEAAI;QAAA,4DAAI;QAAC,oEAAO;QAAA,4DAAQ;QACnH,uFACE;QADuF,kMAAwB;QAC/G,wIAEE;QAEJ,4DAAkB;QAEpB,4DAAM;QAER,4DAAM;;QApD8C,0DAAyB;QAAzB,oFAAyB;QACR,0DAAe;QAAf,wEAAe;QACf,0DAAkB;QAAlB,2EAAkB;QAClB,0DAAoB;QAApB,6EAAoB;QAG1B,0DAAiC;QAAjC,+FAAiC;QAYnC,0DAA8B;QAA9B,2FAA8B;QACrD,0DAAyC;QAAzC,0GAAyC;QACrD,0DAA0B;QAA1B,wFAA0B;QAuByC,0DAAwB;QAAxB,mFAAwB;QAChD,0DAAkC;QAAlC,oFAAkC;;6FDxC1F,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;kBAGE,uDAAS;mBAAC,kBAAkB;;kBAC5B,uDAAS;mBAAC,kBAAkB;;;;;;;;;;;;;;AEd/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAGE;AAGkB;AACrC;;;;;;;;;;;;;ICChC,0EACE;IAAA,uEAAM;IAAA,uDAAsG;;IAAA,4DAAO;IACrH,4DAAM;;;IADE,0DAAsG;IAAtG,8PAAsG;;;IAI9G,uEAA6B;IAAA,uDAAiC;;IAAA,4DAAO;;;IAAxC,0DAAiC;IAAjC,kJAAiC;;;IAC9D,2EAAoD;IAAA,0EAAe;IAAA,4DAAO;;;;IAG9E,0EACE;IAAA,0EACE;IAAA,2EAAgC;IAAA,oEAAS;IAAA,4DAAO;IAChD,uEAAM;IAAA,uDAAoC;;IAAA,4DAAO;IACnD,4DAAM;IACN,0EACE;IAAA,2EAAgC;IAAA,gEAAK;IAAA,4DAAO;IAC5C,wEAAM;IAAA,wDAAkE;;IAAA,4DAAO;IACjF,4DAAM;IACN,2EACE;IAD6B,gcAAyC;IACtE,4EAAiC;IAAA,qEAAS;IAAA,4DAAO;IAEnD,4DAAM;IACR,4DAAM;;;;;;;IAbiB,mHAAyC;IAGtD,0DAAoC;IAApC,oJAAoC;IAIpC,0DAAkE;IAAlE,iNAAkE;;;;IApB9E,yEACE;IADkF,mcAA6B;IAC/G,yEACE;IAAA,0EACE;IAAA,0EAAwB;IAAA,uDAAmB;IAAA,4DAAM;IACjD,8HACE;IAEJ,4DAAM;IACN,0EACE;IAAA,gIAA6B;IAC7B,gIAAoD;IACtD,4DAAM;IACR,4DAAM;IACN,+HACE;IAaJ,4DAAM;;;IAxBwB,0DAAmB;IAAnB,oFAAmB;IAClB,0DAAwB;IAAxB,sFAAwB;IAK3C,0DAAsB;IAAtB,sFAAsB;IACF,0DAAyB;IAAzB,yFAAyB;IAGU,0DAAsB;IAAtB,oFAAsB;;;IAf3F,sEACE;IAAA,yEAA+B;IAAA,uDAA6D;IAAA,4DAAM;IAClG,wHACE;IA2BJ,4DAAM;;;;IA9BkC,qHAAuD;IAC9D,0DAA6D;IAA7D,8HAA6D;IACvF,0DAAsD;IAAtD,0FAAsD;;;IAH/D,yEACE;IAAA,iHACE;IA8BJ,4DAAM;;;IA/BC,0DAAkC;IAAlC,kGAAkC;;;IAgCzC,yEACE;IAAA,sEACE;IAAA,yEAA+B;IAAA,iEAAM;IAAA,4DAAM;IAC3C,0EACE;IAAA,0EACE;IAAA,2EAAgC;IAAA,wEAAa;IAAA,4DAAO;IACpD,uEAAM;IAAA,uDAAqC;;IAAA,4DAAO;IACpD,4DAAM;IACN,2EACE;IAAA,4EAAgC;IAAA,qEAAS;IAAA,4DAAO;IAChD,wEAAM;IAAA,wDAAwC;;IAAA,4DAAO;IACvD,4DAAM;IACN,2EACE;IAAA,4EAAgC;IAAA,6EAAiB;IAAA,4DAAO;IACxD,wEAAM;IAAA,wDAA6E;;IAAA,4DAAO;IAC5F,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAZQ,0DAAqC;IAArC,2JAAqC;IAIrC,0DAAwC;IAAxC,6JAAwC;IAIxC,0DAA6E;IAA7E,iOAA6E;;;IAK3F,0EACE;IAAA,0EACF;IAAA,4DAAM;;ADjBD,MAAM,eAAe;IAE1B,YACS,aAA4B,EAC5B,aAA4B,EAC5B,cAA8B,EAC7B,aAA4B,EAC5B,MAAc;QAJf,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC7B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QAQjB,WAAM,GAAG,EAAE;IAPd,CAAC;IASL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC;QAE5D,IAAI,CAAC,YAAY,GAAG,0DAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE;YAC/F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;gBAC5C,OAAO,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;oBACvC,IAAG,CAAC,GAAG,CAAC,QAAQ,EAAC;wBACf,OAAO,GAAG,CAAC;qBACZ;oBACD,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;gBACnF,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACrB,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE;YACnF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE;IAClB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,SAAiB;QAC9B,IAAI,CAAC,aAAa,CAAC,SAAS,CAC1B;YACE,eAAe,EAAE,IAAI;YACrB,MAAM,EAAE,CAAC,SAAS,CAAC;SACpB,CACF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACrB;IACH,CAAC;IAED,qBAAqB,CAAC,QAAmB,EAAE,aAA0B;QACnE,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,MAAM,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;QAC1C,oDAAoD;QACpD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;YACpB,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YAChC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC3C,CAAC,CAAC;QAEF,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzB,IAAI,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;YACjC,sDAAsD;YACtD,IAAI,YAAY,KAAI,SAAS,EAAE;gBAC7B,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;oBAC9B,YAAY,CAAC,YAAY,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC;oBACpD,YAAY,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClD;qBAAM;oBACL,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;oBACpD,YAAY,CAAC,YAAY,CAAC,GAAG,EAAE;oBAC/B,YAAY,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;oBACnD,YAAY,CAAC,YAAY,CAAC,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC;oBAChD,YAAY,CAAC,YAAY,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;iBAC3C;aACF;QACH,CAAC,CAAC;QAEF,IAAI,MAAM,GAAiB,MAAM,CAAC,GAAG,CAAa,CAAC,KAAK,EAAE,EAAE;YAC1D,IAAI,cAAc,GAAW,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;YAClE,IAAI,QAAQ,GAAc,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;YACjE,IAAI,OAAO,GAAY,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;YAE7D,IAAI,MAAkB,CAAC;YAEvB,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,IAAI,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5F,IAAI,KAAK,GAAG,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3D,IAAI,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClC,IAAI,cAAc,GAAG,iEAAgB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3E,MAAM,mCAAQ,KAAK,GAAK,EAAE,MAAM,EAAE,cAAc,EAAE,gBAAgB,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAE;aAC/H;iBAAM;gBACL,MAAM,mCAAQ,KAAK,GAAK,EAAE,MAAM,EAAE,cAAc,EAAE,CAAE;aACrD;YAED,IAAI,OAAO,EAAE;gBACX,MAAM,mCAAQ,MAAM,GAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE;aAChD;YAED,OAAO,MAAM;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACpC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBAChB,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,EAAE;oBAC/B,IAAI,IAAI,GAAG,GAAG,CAAC;oBACf,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;oBAC5B,OAAO,IAAI;iBACZ;qBAAM;oBACL,OAAO,GAAG;iBACX;aACF;iBAAM;gBACL,IAAI,IAAI,GAAG,GAAG,CAAC;gBACf,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC5B,OAAO,IAAI;aACZ;QACL,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAE9E,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YAC/B,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAClH,CAAC,CAAC,CAAC;QAGH,0BAA0B;QAE1B,OAAO,MAAM,CAAC;IAChB,CAAC;IAID,oBAAoB,CAAC,KAAa,EAAE,KAAa;QAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;IAC5C,CAAC;IAED,cAAc,CAAC,KAAa,EAAE,KAAa;QACzC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;YAC7B,4BAA4B;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;SAClC;IACH,CAAC;;8EAxJU,eAAe;+FAAf,eAAe;QCtC5B,yEACE;QAAA,2GACE;QAgCF,6GACE;QAkBF,2GACE;QAGJ,4DAAM;;QAxDoB,0DAAkD;QAAlD,qFAAkD;QAiClD,0DAAkG;QAAlG,2KAAkG;QAmBnG,0DAAsG;QAAtG,gLAAsG;2sUDpCjH;YACV,mEAAO,CAAC,YAAY,EAAE;gBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;oBACjB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,KAAK;oBACb,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;gBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;oBAChB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,GAAG;oBACX,MAAM,EAAE,YAAY;iBACrB,CAAC,CAAC;gBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;gBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;aACtD,CAAC;SACH;6FAIU,eAAe;cAvB3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE;oBACV,mEAAO,CAAC,YAAY,EAAE;wBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;4BACjB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,KAAK;yBACd,CAAC,CAAC;wBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;4BAChB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,GAAG;4BACX,MAAM,EAAE,YAAY;yBACrB,CAAC,CAAC;wBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;wBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;qBACtD,CAAC;iBACH;gBACD,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AErCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEyB;AAEA;AAElC;AACJ;;;;;;;;;;;;ICAjC,wEAA4G;IAA1C,4TAAuB;IAAmB,mEAAQ;IAAA,4DAAI;;;IAAnF,wFAA4B;;;IAQ7D,0EACE;IAAA,2EAAoB;IAAA,uDAA0B;;IAAA,4DAAO;IACrD,2EAAqB;IAAA,uDAA2B;;IAAA,4DAAO;IACzD,4DAAM;;;IAFgB,0DAA0B;IAA1B,qJAA0B;IACzB,0DAA2B;IAA3B,4IAA2B;;;IARtD,0EACE;IAAA,kFAEmB;IAEnB,0EACE;IAAA,sHACE;IAGJ,4DAAM;IAEN,0EACE;IAAA,wEAAwC;IAAA,+DAAI;IAAA,4DAAI;IAChD,uEAAM;IAAA,iKACI;IAAA,4DAAO;IACnB,4DAAM;IACR,4DAAM;;;IAhBc,0DAAyB;IAAzB,0FAAyB;IAKjB,0DAA8B;IAA9B,sFAA8B;;;IAgBtD,2EAAqE;IAAA,uDAAmB;IAAA,4DAAO;;;IAA1B,0DAAmB;IAAnB,6FAAmB;;;IACxF,2EAAqE;IAAA,8EAAmB;IAAA,4DAAO;;;;IAHjG,0EACE;IAD6E,mZAAiC;IAC9G,qEAAyG;IACzG,8HAAqE;IACrE,8HAAqE;IACrE,2EAAsB;IAAA,uDAAiC;;IAAA,4DAAO;IAChE,4DAAM;;;;;IAL2G,8GAAkD;IACxI,0DAAyE;IAAzE,yIAAyE;IAC3E,0DAA6C;IAA7C,2GAA6C;IAC7C,0DAA6C;IAA7C,2GAA6C;IAC9C,0DAAiC;IAAjC,4JAAiC;;;IAL3D,0EACE;IAAA,uHACE;IAMJ,4DAAM;;;IAPuB,0DAAmD;IAAnD,4FAAmD;;;IA3BlF,yEACE;IAAA,yEACE;IAAA,uEAAM;IAAA,uDAAgC;;IAAA,4DAAO;IAC/C,4DAAM;IAEN,2GAA4G;IAE5G,+GACE;IAkBF,+GACE;IAQJ,4DAAM;;;IAjCI,0DAAgC;IAAhC,qJAAgC;IAGkD,0DAAiB;IAAjB,mFAAiB;IAE9D,0DAAmB;IAAnB,qFAAmB;IAmBlC,0DAAoB;IAApB,sFAAoB;;;IAWpD,kFACmB;;;IADD,sFAAqB;;;IAOvC,0EACE;IAAA,sEAAK;IAAA,0EAAe;IAAA,4DAAM;IAC5B,4DAAM;;ADtBD,MAAM,aAAa;IAExB,YACS,cAA8B,EAC9B,aAA4B,EAC5B,eAAgC;QAFhC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAIzC,eAAU,GAAsB,uCAAU,CAAC;QAC3C,iBAAY,GAAuB,EAAE,CAAC;QAS/B,gBAAW,GAAW,CAAC,CAAC;QAExB,qBAAgB,GAAkB,IAAI,4CAAO,EAAE,CAAC;QAiEvD,gBAAW,GAAE,KAAK,CAAC;QAmBZ,mBAAc,GAAE,IAAI,CAAC;IAnGxB,CAAC;IAmBL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAElD,0DAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC;aAC7G,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,CAAC,EAAE,EAAE;YAC1E,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;gBACzC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,CAAC;YACzD,CAAC,CAAC,CAAC;YAEH,IAAI,UAAU,IAAI,QAAQ,EAAE;gBAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aAC/F;YAED,kLAAkL;YAClL,IAAG,eAAe,EAAC;gBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAE;oBAC5C,OAAO,OAAO,CAAC,QAAQ,IAAI,eAAe,CAAC;gBAC7C,CAAC,CAAC;aACH;YAED,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAC9C,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM;YACzB,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACtC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC;gBAChC,OAAO,GAAG,CAAC;YACb,CAAC,EAAE;gBACD,IAAI,EAAE,CAAC;gBACP,aAAa,EAAE,CAAC;gBAChB,SAAS,EAAE,CAAC;gBACZ,UAAU,EAAE,CAAC;gBACb,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,CAAC;gBACP,gBAAgB,EAAE,CAAC;gBACnB,OAAO,EAAE,CAAC;aACX,CAAC,CAAC;YAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC9D,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACf,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,IAAI,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,EAAC,EAAE;YAC7C,IAAG,OAAO,EAAC;gBACT,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAC,EAAE;oBACvE,OAAO,OAAO,CAAC,CAAC,GAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW;IACtC,CAAC;IAGD;;;;OAIG;IACH,uBAAuB,CAAC,MAAc;QACpC,IAAG,MAAM,IAAE,CAAC,EAAC;YACX,OAAO,MAAM,GAAC,CAAC,CAAC;SACjB;aAAI;YACH,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAIM,cAAc,CAAC,KAAY,EAAE,aAA4B;QAC9D,IAAG,IAAI,CAAC,cAAc,IAAI,KAAK,EAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;SACjC;aAAI;YACH,IAAI,CAAC,cAAc,GAAE,KAAK,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;SACnD;IACH,CAAC;IAEO,kBAAkB;QACxB,OAAO,0DAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAC5D,0DAAG,CAAC,CAAC,CAAC,QAAQ,EAAC,MAAM,CAAC,EAAC,EAAE;YACvB,IAAG,QAAQ,CAAC,MAAM,GAAC,CAAC,EAAC;gBACnB,MAAM;aACP;YACD,6DAA6D;YAC7D,IAAI,iBAAiB,GACrB,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAC,EAAE;gBACzB,IAAI,OAAO,GAAG,KAAK,CAAC;gBACpB,IAAG,MAAM,CAAC,MAAM,EAAC;oBACf,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;wBAClC,IAAI,CAAC,OAAO,EAAE;4BACZ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,WAAW,CAAC,WAAW,EAAE;yBACnE;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAI;oBACH,0CAA0C;oBAC1C,OAAO,GAAG,IAAI,CAAC;iBAChB;gBACD,OAAO,OAAO,CAAC;YACjB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAC,EAAE;;gBACpB,IAAI,SAAS,GAAG,UAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,0CAAE,MAAM,EAAC,CAAC,OAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,0CAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,mCAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAK,EAAC,MAAM,EAAE,SAAS,GAAC,GAAG,CAAC,MAAM,EAAC,CAAC;gBAClG,OAAO,GAAG,CAAC;YACb,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,2CAA2C;YAC3C,IAAI,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE;gBAClF,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;YAClE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,GAAE;gBACZ,OAAO,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;YACzC,CAAC,CAAC,CAAC;YACH,IAAG,iBAAiB,CAAC,MAAM,GAAE,CAAC,EAAC;gBAE7B,IAAI,YAAY,GAAqC,EAAE,CAAC;gBACxD,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACtD,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC3B,KAAK,IAAI,KAAK,GAAG,UAAU,EAAE,KAAK,IAAG,SAAS,EAAE,KAAK,GAAC,0DAAS,CAAC,KAAK,EAAC,CAAC,CAAC,EAAE;oBACxE,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK,CAAC;oBAC9D,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC;iBACpD;gBAED,0DAA0D;gBAC1D,iBAAiB,CAAC,OAAO,CAAC,UAAU,GAAE;oBACpC,IAAI,cAAc,GAAG,YAAY,CAAC,SAAS,CAAC,EAAE,GAAE;wBAC9C,OAAO,EAAE,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK;oBACtC,CAAC,CAAC,CAAC;oBACH,YAAY,CAAC,cAAc,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;gBAC1D,CAAC,CAAC,CAAC;gBAGH,4CAA4C;gBAC5C,IAAI,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,GAAE;oBACnC,OAAM,EAAC,CAAC,EAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,EAAC;gBACxG,CAAC,CAAC,CAAC;gBAEH,SAAS,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC;gBAEzF,IAAI,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,EAAE,GAAE;oBAC5C,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE;gBAChE,CAAC,CAAC,CAAC;gBAEH,OAAO;oBACL,IAAI,EAAE,SAAS;oBACf,cAAc,EAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;oBACvH,iBAAiB,EAAE,YAAY;iBAChC;aACF;YACD,iGAAiG;QACnG,CAAC,CAAC,CACH;IACH,CAAC;IAEO,SAAS,CAAC,SAAoB;QACpC,IAAI,CAAC,YAAY,GAAG;YAClB,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE;oBACL,KAAK,EAAE,SAAS;iBACjB;aACF;YACD,OAAO,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;YAC3B,KAAK,EAAE;gBACL,eAAe,EAAE,MAAM;gBACvB,SAAS,EAAE,KAAK;gBAChB,kBAAkB,EAAE;oBAClB,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,GAAC,EAAE;oBAClC,OAAO,EAAE,GAAG;oBACZ,eAAe,EAAE,CAAC,CAAC,GAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,uEAAuE;iBACjL;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE;oBACJ,SAAS,EAAE,KAAK;oBAChB,UAAU,EAAE,SAAS,CAAC,cAAc;iBAErC;gBACD,MAAM,EAAE;oBACN,MAAM,EAAE;wBACN,KAAK,EAAE;4BACL,OAAO,EAAE,KAAK;yBACf;qBACF;iBACF;aACF;YACD,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YACD,KAAK,EAAE;gBACL,GAAG,EAAE,SAAS,CAAC,cAAc;gBAC7B,aAAa,EAAE,KAAK;gBACpB,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;gBACnC,MAAM,EAAE;oBACN,gBAAgB;oBAChB,iBAAiB;oBACjB,QAAQ,EAAE,SAAS;iBACpB;gBACD,SAAS,EAAE;oBACT,KAAK,EAAE,CAAC;iBACT;aACF;YACD,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;gBACf,aAAa,EAAE,MAAM;gBACrB,GAAG,EAAE,CAAC;gBACN,KAAK,EAAE;oBACL,IAAI,EAAE,IAAI;iBACX;gBACD,MAAM,EAAE;oBACN,SAAS,EAAE;wBACT,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG;oBACzB,CAAC;iBACF;aACF;YACD,MAAM,EAAE,CAAC,MAAM,CAAC;YAChB,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,IAAI;iBACpB,CAAC;SACH,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,GAAQ;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAChC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB,CAAC,GAAQ;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAChC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,aAAa,CAAC,OAAgB,EAAE,MAAqB,EAAE,WAAsB;QACnF,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhD,IAAI,WAAW,EAAE;YACf,OAAO,GAAG,WAAW,IAAI,WAAW,CAAC,IAAI,IAAI,YAAY,IAAI,WAAW,CAAC,KAAK,CAAC;SAChF;aAAM;YACL,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,OAAO,GAAG,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAChF;iBAAM;gBACL,wDAAwD;gBACxD,IAAI,MAAM,CAAC,YAAY,EAAE;oBACvB,uEAAuE;oBACvE,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;oBACpI,OAAO,GAAG,iEAAgB,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,wDAAO,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC;iBAC7F;aACF;SACF;QAED,IAAI,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE;YAC5B,IAAI,eAAe,GAAG,KAAK,CAAC;YAC5B,mDAAmD;YACnD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAClC,IAAI,CAAC,eAAe,EAAE;oBACpB,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,WAAW,CAAC,WAAW,EAAE;iBAC3E;YACH,CAAC,CAAC;YACF,OAAO,GAAG,eAAe,CAAC;SAC3B;QACD,OAAO,OAAO;IAChB,CAAC;;0EAjTU,aAAa;6FAAb,aAAa;QC1B1B,yEAEE;QAFoC,wIAAS,2BAAuB,IAAC;;;;QAErE,yGACE;QAoCF,mIACA;QAEA,yEACE;;QAAA,wEAAyB;QAC3B,4DAAM;QAEN,yGACE;QAGJ,4DAAM;;;;QAjDJ,kFAAoI;QAC/G,0DAAsB;QAAtB,qFAAsB;QAqCmC,0DAA2C;QAA3C,6IAA2C;QAG3F,0DAAmD;QAAnD,qKAAmD;QAI5C,0DAA8B;QAA9B,2HAA8B;;6FDpBxD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AAExD;AAC6D;;;;;;;;;;;;;ICYpG,sEAA2C;IAAA,uDAAmE;;IAAA,4DAAM;;;IAAzE,0DAAmE;IAAnE,2MAAmE;;;IAC9G,0EAAiE;IAAA,6EAAkB;IAAA,4DAAM;;;;IAF3F,0EACE;IAD0B,qSAAS,gCAAuB,IAAC;IAC3D,mHAA2C;;IAC3C,mHAAiE;;IACjE,kFAAyG;;IAC3G,4DAAM;;;;;;;IAHC,0DAAqC;IAArC,2EAAqC;IACrC,0DAAuC;IAAvC,2EAAuC;IAC1B,0DAA6B;IAA7B,uJAA6B;;;;IAGjD,0EACI;IAAA,0EAAoB;IAAA,kFAAuB;IAAA,4DAAM;IACnD,4EACA;IADmB,uSAAS,6CAAoC,IAAC;IAAjE,4DACA;IAAA,uDACA;;IAAA,0EACI;IAAA,sEAAK;IAAA,uEAAM;IAAA,4DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IAAC,oEAAO;IAAA,4DAAM;IAClD,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,oEAAQ;IAAA,4DAAO;IAAC,mEAAM;IAAA,4DAAM;IACrD,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAC,oEAAO;IAAA,4DAAM;IAC/C,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAC,oEAAO;IAAA,4DAAM;IAC/C,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAC,oEAAO;IAAA,4DAAM;IAC/C,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAC,mEAAM;IAAA,4DAAM;IAC9C,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,0EAAc;IAAA,4DAAO;IAAC,kEAAK;IAAA,4DAAM;IAC1D,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,0EAAc;IAAA,4DAAO;IAAC,mEAAM;IAAA,4DAAM;IAC3D,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,uEAAW;IAAA,4DAAO;IAAC,kEAAK;IAAA,4DAAM;IACvD,uEAAK;IAAA,wEAAM;IAAA,6DAAC;IAAA,4DAAO;IAAA,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IAAC,kEAAK;IAAA,4DAAM;IACpD,4DAAM;IAER,4DAAM;;;IAdJ,0DACA;IADA,iKACA;;ADXG,MAAM,eAAe;IAkB1B,YACS,aAA4B,EAC3B,cAA8B,EAC9B,aAA4B;QAF7B,kBAAa,GAAb,aAAa,CAAe;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAjBtC,wBAAmB,GAAkB,IAAI,4CAAO,EAAE,CAAC;QAO5C,qBAAgB,GAAkB,IAAI,4CAAO,EAAE,CAAC;QAIhD,+BAA0B,GAAY,KAAK,CAAC;IAO/C,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,4CAAO,EAAU,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,4CAAO,EAAU,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CACtC,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAC/B,0DAAG,CAAC,IAAI,CAAC,EAAE;YACT,OAAO,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC;QAClD,CAAC,CAAC,CACH;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACnC,mEAAY,CAAC,GAAG,CAAC,EACjB,2EAAoB,EAAE,EACtB,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAC/B,gEAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAChD,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACrD,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM;YACzB,CAAC,EAAE,CAAC,CAAC;QACP,CAAC,CAAC;QAIF,2DAA2D;QAC3D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,8BAA8B,CAAC,IAAY;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,cAAc,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACtE,IAAI,GAAG,GAAG,IAAI,CAAC,+BAA+B,CAAC,EAAE,EAAE,cAAc,CAAC;QAClE,OAAO,GAAG,CAAC;IACb,CAAC;IAED,+BAA+B,CAAC,MAAc,EAAE,IAAY;QAC1D,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YACpB,OAAO,MAAM;SACd;aAAM;YACL,QAAQ,IAAI,EAAE;gBACZ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAC3B,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBACxD,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC1B,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACtD,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC1B,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACtD,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACzB,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACzB,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACzB,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACzB,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACzB,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBAChH,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACnF,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC1B,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACtD,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC9E;oBACE,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACzE;SACF;IACH,CAAC;IAED,mBAAmB,CAAC,IAAY;QAC9B,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAG,EAAE;QACf,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAClE,MAAM,IAAI,IAAI,CAAC;aAChB;QACH,CAAC,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,IAAI,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjD,sDAAsD;QACtD,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE;YAC/C,wCAAwC;YACxC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;YACvC,OAAO,IAAI,+CAAU,EAAa;SACnC;aAAM;YACL,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;YACxC,IAAI,eAAe,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACzC,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBACjB,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACxB;gBACD,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;oBAC7B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBACxC;gBACD,OAAO,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CACrD,0DAAG,CAAC,QAAQ,CAAC,EAAE;gBACb,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;oBAC/B,IAAI,OAAO,GAAG,IAAI,CAAC;oBACnB,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;wBACnC,IAAI,OAAO,EAAE;4BACX,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;4BACxK,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;4BACzC,IAAI,WAAW,GAAG,IAAI,CAAC;4BACvB,IAAI,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;4BACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC5C,IAAI,WAAW,EAAE;oCACf,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;wCAC1D,WAAW,GAAG,KAAK,CAAC;wCACpB,MAAM,CAAC,wBAAwB;qCAChC;oCACD,yBAAyB;oCACzB,IAAI,CAAC,IAAI,CAAC,EAAE;wCACV,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC;qCAClE;yCAAM,IAAI,CAAC,IAAI,CAAC,EAAE;wCACjB,4BAA4B;wCAC5B,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;4CAC1B,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;yCACvE;qCACF;yCAAM,IAAI,CAAC,IAAI,CAAC,EAAE;wCACjB,wEAAwE;wCACxE,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;4CAC1B,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,WAAW,EAAE,CAAC;yCACtE;qCACF;yCAAM;wCACL,WAAW,GAAG,KAAK,CAAC;wCACpB,MAAM,CAAC,oEAAoE;qCAC5E;iCACF;qCAAM;oCACL,MAAM;iCACP;6BACF;4BACD,OAAO,GAAG,OAAO,IAAI,WAAW;yBACjC;6BAAM;4BACL,OAAO,OAAO,CAAC;yBAChB;oBACH,CAAC,CAAC,CAAC;oBACH,OAAO,OAAO,CAAC;gBACjB,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAC5E,CAAC,CAAC,CACH;SAEF;IACH,CAAC;IAID,eAAe;QACb,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;;8EAnMU,eAAe;+FAAf,eAAe;;;;;;QCb5B,yEACE;QAAA,6EACE;QAAA,yEACE;QAAA,yEACE;QAAA,uEAAoE;QAAA,iEAAM;QAAA,4DAAI;QAC9E,8EAEA;QAFO,4IAAS,yCAAqC,IAAC;QAAtD,4DAEA;QAAA,uEAAsF;QAAlB,wIAAS,WAAO,IAAC;QAAC,gEAAK;QAAA,4DAAI;QACjG,4DAAM;QAEN,2EAAqC;QAA/B,4IAAS,wBAAoB,IAAC;QAAC,kEAAM;QAAA,4DAAO;QACpD,4DAAM;QACR,4DAAa;QAEb,8GACE;QAKF,8GACI;QAiBN,4DAAM;;QAjCyD,0DAAuB;QAAvB,kFAAuB;QAStB,0DAAmC;QAAnC,iGAAmC;QAM7D,0DAAkC;QAAlC,gGAAkC;;6FDP3D,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;kBAGE,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AEf1B;AAAA;AAAA;AAAA;AAAA;AAA0D;AACgC;;;;AAQnF,MAAM,4BAA4B;IAEvC,YACwC,KAAU,EACxC,cAA+D,EAC/D,aAA4B;QAFE,UAAK,GAAL,KAAK,CAAK;QACxC,mBAAc,GAAd,cAAc,CAAiD;QAC/D,kBAAa,GAAb,aAAa,CAAe;IAClC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAE,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,OAAO,CAAC,oCAAoC,IAAI,CAAC,KAAK,CAAC,SAAS,+FAA+F,CAAC,EAAE;YACpK,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,KAAK,CAAC,KAAiB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAEO,OAAO;QACb,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;;wGA7BU,4BAA4B,kEAG7B,oFAAqB;4GAHpB,4BAA4B;QCTzC,yEACI;QAAA,yEACI;QAAA,yEAAsD;QAAxB,uJAAS,iBAAa,IAAC;QAAC,uEAAY;QAAA,4DAAM;QAC5E,4DAAM;QACN,yEAAsD;QAAxB,uJAAS,iBAAa,IAAC;QAAC,iEAAM;QAAA,4DAAM;QACtE,4DAAM;;6FDIO,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;sBAII,oDAAM;uBAAC,oFAAqB;;;;;;;;;;;;;;AEZjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACf;AAI6C;AAEjE;AAE2C;;;;;;;;;;;;;;ICF3E,0EAA4D;IAAA,oFAAyB;IAAA,4DAAM;;;;IAmBzF,0EACE;IAAA,uEAAM;IAAA,uDAAmB;IAAA,4DAAO;IAChC,wEAA4E;IAAzC,kXAAwC;IAAC,qEAAU;IAAA,4DAAI;IAC5F,4DAAM;;;IAFE,0DAAmB;IAAnB,oFAAmB;;;IAG3B,2EACE;IAAA,oFACF;IAAA,4DAAO;;;IAeL,6EAAwE;IAAA,uDAAmB;IAAA,4DAAS;;;IAAtD,sFAAyB;IAAC,0DAAmB;IAAnB,oFAAmB;;ADb9F,MAAM,iBAAiB;IAK5B,YACU,aAA4B,EAC5B,eAAgC,EAChC,WAA2B,EAC3B,cAA8B,EAC9B,QAAkB;QAJlB,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAgB;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAQrB,qBAAgB,GAAkB,IAAI,4CAAO,EAAE,CAAC;QAChD,eAAU,GAAY,KAAK,CAAC;QA6InC;;;WAGG;QACI,cAAS,GAAG,KAAK,CAAC;QAuBlB,oBAAe,GAAW,KAAK,CAAC;IAhLnC,CAAC;IAUL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAC/E,0BAA0B;QAC1B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QAC9D,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QACpE,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,aAAa;QACX,IAAI,WAAW,GAAG,OAAO,CAAC,iEAAiE,CAAC,CAAC;QAC7F,IAAI,WAAW,EAAE;YACf,SAAS,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,UAAU,aAAa;gBACrE,KAAK,IAAI,YAAY,IAAI,aAAa,EAAE;oBACtC,YAAY,CAAC,UAAU,EAAE;iBAC1B;YACH,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAED,SAAS;QACP,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,cAAc;QACnB,0DAAa,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAC7I,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,iBAAiB,EAAE,MAAM,CAAC,EAAE,EAAE;YACnD,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,iBAAiB,EAAE,MAAM,EAAE,CAAC;YACnD,IAAI,QAAQ,GAAG,kBAAkB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACpG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC;QAC3C,CAAC,CAAC;IACN,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,KAAK;QACZ,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,IAAI,EAAE;YACR,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;gBACpB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAgB,CAAC,CAAC;YAC7D,CAAC;YACD,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YACpC,CAAC;SACF;IACH,CAAC;IAED;;;OAGG;IACH,eAAe,CAAC,IAAgF;QAC9F,sBAAsB;QAEtB,IAAI,OAAO,CAAC,2DAA2D,CAAC,EAAE;YACxE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC9B,OAAO,OAAO,CAAC,GAAG,CAAC;gBACnB,0BAA0B;gBAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC;gBACnD,IAAI;YACN,CAAC,CAAC,CAAC;YAEH,yBAAyB;YACzB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACvC,OAAO,OAAO,CAAC,GAAG,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,CAAC;YACpE,CAAC,CAAC,CAAC;YAEH,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,0BAA0B,CAAC;SAClC;IAEH,CAAC;IAEM,UAAU;QACf,IAAI,OAAO,CAAC,kEAAkE,CAAC,EAAE;YAC/E,IAAI,OAAO,CAAC,sBAAsB,CAAC,EAAE;gBACnC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC1C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAChC;SACF;IACH,CAAC;IAEO,oBAAoB,CAAC,SAAS,EAAE,UAAU;QAChD,IAAI,OAAO,GAAG,+BAA+B,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9F,IAAI,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACrD,kBAAkB,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,kBAAkB,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,GAAG,OAAO,CAAC,CAAC;QAClE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,uBAAuB;QACtE,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;QAClC,kBAAkB,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACI,mBAAmB;QACxB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IACI,sBAAsB;QAC3B,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACxE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACrD,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAC9B;IACH,CAAC;IAED,eAAe,CAAC,CAAa,EAAE,KAAU;QACvC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;QAChD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mHAA4B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IACvE,CAAC;IAQD,WAAW;QACT,MAAM,oBAAoB,GAAG,GAAG,EAAE;YAChC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,qBAAqB,CAAC,GAAG,EAAE;oBACzB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;oBACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;oBAC3D,oBAAoB,EAAE,CAAC;gBACzB,CAAC,CAAC;aACH;QACH,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI;YACrB,oBAAoB,EAAE;YACtB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;QACD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAGD,oBAAoB;QAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,GAAG,GAAE;YACtC,IAAG,GAAG,CAAC,MAAM,GAAC,CAAC,EAAC;gBACd,IAAI,CAAC,eAAe,GAAE,IAAI,CAAC;aAC5B;iBAAI;gBACH,IAAI,CAAC,eAAe,GAAE,KAAK,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;;kFArMU,iBAAiB;iGAAjB,iBAAiB;;;;;;;;QClC9B,yEAEE;QAFwC,4IAAS,2BAAuB,IAAC;QAEzE,6EACE;QAAA,yEACE;QAAA,yEACE;QAAA,uEAAM;QAAA,6EAAkB;QAAA,4DAAO;QACjC,4DAAM;QACN,6GAA4D;QAC5D,yEACE;QAAA,2FAAuI;;QACzI,4DAAM;QAER,4DAAM;QACR,4DAAU;QAIV,8EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACnB,+EACA;QADmB,kMAAgC;QAAnD,4DACA;QAAA,yEAAwD;QAArB,2IAAS,cAAU,IAAC;QAAC,+DAAG;QAAA,4DAAI;QACjE,4DAAM;QAEN,2EACE;QAAA,gHACE;;QAGF,kHACE;;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAU;QAEV,+EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,+EAAmB;QAAA,4DAAO;QAClC,4DAAM;QACN,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,8EAEE;QAF8D,qMAAkC,0FACtF,yBAAqB,IADiE;QAEhG,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,sHAAwE;;QAC1E,4DAAS;QACX,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,8EAEE;QAF4C,wMAAqC,0FACvE,4BAAwB,IAD+C;QAEjF,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAA8B;QAAA,yEAAa;QAAA,4DAAS;QACpD,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAiC;QAAA,8EAAkB;QAAA,4DAAS;QAC5D,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QAC1C,4DAAS;QACX,4DAAiB;QACnB,4DAAM;QACR,4DAAU;QAEV,8EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,2EAAe;QAAA,4DAAO;QAC9B,4DAAM;QACN,2EACE;QAAA,yEAAoD;QAAA,gEAAI;QAAA,4DAAI;QAC5D,yEAAwB;QAAA,6TAAiQ;QAAA,4DAAI;QAC/R,4DAAM;QACN,2EACE;QAD6B,6IAAS,oBAAgB,IAAC;QACvD,yEAAwC;QAAA,0EAAc;QAAA,4DAAI;QAC1D,wEAAM;QAAA,2EAAe;QAAA,4DAAO;QAC9B,4DAAM;QACN,2EACE;QAAA,yEAAwC;QAAA,wEAAY;QAAA,4DAAI;QACxD,6EACE;QAAA,wEAAM;QAAA,uEAAW;QAAA,4DAAO;QACxB,6EACF;QADyC,iJAAU,oBAAgB,IAAC;QAAlE,4DACF;QAAA,4DAAQ;QACV,4DAAM;QACN,2EACE;QAD6B,6IAAS,gBAAY,IAAC;QACnD,yEAAwC;QAAA,kEAAM;QAAA,4DAAI;QAClD,wEAAM;QAAA,2EAAe;QAAA,4DAAO;QAC9B,4DAAM;QAER,4DAAM;QACR,4DAAU;QAEV,8EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QACtB,4DAAM;QACN,2EACE;QAD6B,6IAAS,eAAW,IAAC;QAClD,yEAAwC;QAAA,mEAAO;QAAA,4DAAI;QACnD,wEAAM;QAAA,8EAAkB;QAAA,4DAAO;QACjC,4DAAM;QACN,2EACE;QAD6B,6IAAS,mBAAe,IAAC;QACtD,yEAAwC;QAAA,kEAAM;QAAA,4DAAI;QAClD,wEAAM;QAAA,8EAAkB;QAAA,4DAAO;QACjC,4DAAM;QACN,2EACE;QAAA,4EACE;QAD6B,8IAAS,iBAAa,IAAC;QACpD,0EAAyC;QAAA,kEAAK;QAAA,4DAAI;QAClD,yEAAM;QAAA,kEAAK;QAAA,4DAAO;QACpB,4DAAM;QACN,2EACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAU;QAIZ,4DAAM;;QAlHK,0DAAwB;QAAxB,sFAAwB;QACZ,0DAAqC;QAArC,6FAAqC;QACxB,0DAAuC;QAAvC,8JAAuC;QAYhD,0DAAgC;QAAhC,2FAAgC;QAK3B,0DAAqC;QAArC,mJAAqC;QAIvD,0DAAsC;QAAtC,6JAAsC;QAcoB,2DAAkC;QAAlC,6FAAkC;QAGxF,0DAAqC;QAArC,mJAAqC;QAMD,0DAAqC;QAArC,gGAAqC;QA6DtE,2DAAwC;QAAxC,sGAAwC;ipYDrG/C;YACV,mEAAO,CAAC,YAAY,EAAE;gBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;oBACjB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,KAAK;oBACb,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;gBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;oBAChB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,GAAG;oBACX,KAAK,EAAE,GAAG;iBACX,CAAC,CAAC;gBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;gBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;aACtD,CAAC;SACH;6FAIU,iBAAiB;cAvB7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,UAAU,EAAE;oBACV,mEAAO,CAAC,YAAY,EAAE;wBACpB,iEAAK,CAAC,KAAK,EAAE,iEAAK,CAAC;4BACjB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,KAAK;4BACb,KAAK,EAAE,KAAK;yBACb,CAAC,CAAC;wBACH,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC;4BAChB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,QAAQ;4BAClB,MAAM,EAAE,GAAG;4BACX,KAAK,EAAE,GAAG;yBACX,CAAC,CAAC;wBACH,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;wBACrD,sEAAU,CAAC,WAAW,EAAE,mEAAO,CAAC,mBAAmB,CAAC,CAAC;qBACtD,CAAC;iBACH;gBACD,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAGE,uDAAS;mBAAC,gBAAgB;;kBAC1B,uDAAS;mBAAC,QAAQ;;;;;;;;;;;;;;AErCrB;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGlC,gBAAgB,CAAC,UAAsB;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,YAAY,EAAE,UAAU,CAAC,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE;IACnG,CAAC;IAEM,kBAAkB;QACvB,MAAM,WAAW,GAAQ;YACvB,KAAK,EAAE;gBACL,kBAAkB,EAAE,IAAI;aACzB;SACF,CAAC;QAEF,OAAO,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;;wEAjBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAA2C;;AAgBpC,MAAM,eAAe;IAG1B;QAIgB,mBAAc,GAAkB;YAC9C,IAAI,EAAE,SAAS;YACf,aAAa,EAAE,SAAS;YACxB,SAAS,EAAE,kBAAkB;YAC7B,UAAU,EAAE,mBAAmB;YAC/B,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,iBAAiB;YACvB,gBAAgB,EAAE,SAAS;YAC3B,OAAO,EAAE,iBAAiB;SAC3B;QAZC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,MAAM;IAC1E,CAAC;IAaM,kBAAkB,CAAC,QAAe;QACvC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;IAClC,CAAC;;8EArBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,QAAQ,GAAc;IAC/B;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KACnB;IACD;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KACnB;IACD;QACI,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,WAAW;QACrB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,uBAAuB;QAC7B,MAAM,EAAE,GAAG;QACX,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IAED;QACI,IAAI,EAAE,WAAW;QACjB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,WAAW;QACjB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,SAAS;KAEnB;IACD;QACI,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,cAAc;QACxB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,oBAAoB;QAC1B,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAChB;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,WAAW;QACrB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,uBAAuB;QAC7B,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,MAAM;KAEhB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,WAAW;QACjB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,YAAY;QACtB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,CAAC;QACT,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,cAAc;QACxB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,cAAc;QACxB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,oBAAoB;QAC1B,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KAEvB;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,MAAM;QAChB,IAAI,EAAE,YAAY;QAClB,WAAW,EAAE,gDAAgD;QAC7D,KAAK,EAAE,aAAa;KACvB;CACJ;;;;;;;;;;;;;AC/RD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgC;AAErC;AAGsC;AACtC;;;AAiB/B,MAAM,cAAc;IAQzB,YACU,gBAA4C;QAA5C,qBAAgB,GAAhB,gBAAgB,CAA4B;QAEpD,IAAI,CAAC,WAAW,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,4CAAO,EAAa,CAAC;QAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,4CAAO,EAAa,CAAC;QACnD,IAAI,CAAC,sBAAsB,GAAG,IAAI,4CAAO,EAAE,CAAC;QAC5C,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAGD,aAAa,CAAC,IAAU;QACtB,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,KAAK;IAC7E,CAAC;IAED,cAAc,CAAC,MAAa;QAC1B,IAAG,MAAM,GAAC,EAAE,EAAC;YACX,OAAO,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC9B;aAAI;YACH,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAE;YACtE,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAE;gBACxB,IAAG,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,0DAAS,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,GAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;oBACvH,iCAAiC;oBACjC,IAAI,GAAG,GAAE,OAAO,CAAC,GAAG,CAAC;oBACrB,OAAO,OAAO,CAAC,UAAU,CAAC;oBAC1B,OAAO,OAAO,CAAC,GAAG,CAAC;oBACnB,IAAI,CAAC,UAAU,iCAAK,OAAO,GAAK,EAAC,IAAI,EAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,GAAG,UAAU,CAAC,CAAC;oBACnI,IAAI,CAAC,aAAa,CAAC,GAAG,kCAAM,OAAO,GAAK,EAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,EAAC,GAAG,mBAAmB,CAAC;iBAC5G;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACI,UAAU,CAAC,OAAgB,EAAE,IAAY,EAAE,UAAoB;QACpE,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;QAClD,IAAI,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACjC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACnB,EAAE,CAAC,UAAU,GAAG,GAAG,EAAE;YACnB,IAAG,IAAI,IAAE,mBAAmB,EAAC;gBAC3B,IAAG,CAAC,UAAU,EAAC;oBACb,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC;iBACzC;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAI;gBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aAC5B;QACH,CAAC;QACD,EAAE,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;YACrB,KAAK,CAAC,wBAAwB,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAAA,CAAC;IAEF,0BAA0B,CAAC,OAAgB;QACzC,IAAI,gBAAgB,GAAG,IAAI,IAAI,CAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClF,IAAI,OAAO,GAAC,CAAC,CAAC;QACd,oDAAoD;QACpD,OAAM,mEAAkB,CAAC,gBAAgB,EAAE,0DAAS,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,IAAE,CAAC,EAAC;YACxF,IAAI,oBAAoB,mCAAO,OAAO,GAAK,EAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,0DAAS,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,EAAC,CAAC;YAClH,OAAO,oBAAoB,CAAC,UAAU,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAU,CAAC;YACjD,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED;;;OAGG;IACI,WAAW,CAAC,IAAW;QAC5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,EAAE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,IAAG,IAAI,IAAE,UAAU,EAAC;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;SACtC;aAAI;YACH,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SAC/C;IACH,CAAC;IAEM,aAAa,CAAC,GAAW,EAAE,KAAc,EAAE,IAAY;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACtC,GAAG,CAAC,SAAS,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAEM,aAAa,CAAC,GAAW,EAAE,IAAW;QAC3C,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;QACnC,GAAG,CAAC,SAAS,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,SAAS,CAAC,IAAW;QACnB,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QACzD,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChD,WAAW,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,IAAY;QAClC,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,IAAI,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,OAAO,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;QACxC,IAAI,MAAM,GAAc,EAAE;QAE1B,OAAO,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAC5B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACjC,IAAI,MAAM,EAAE;gBACV,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;gBAC5B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBACzB,MAAM,CAAC,IAAI,eAAM,EAAE,GAAG,EAAE,EAAK,KAAK,EAAG;gBACrC,MAAM,CAAC,QAAQ,EAAE,CAAC;aACnB;iBACI;gBACH,IAAG,IAAI,IAAE,UAAU,EAAC;oBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC7B;qBAAI;oBACH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACtC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,qBAAqB;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;QAEjD,KAAK,CAAC,eAAe,GAAG,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,EAAE,GAAI,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAC1C,uBAAuB;YACvB,qBAAqB;YACrB,4BAA4B;YAC5B,kCAAkC;YAClC,4BAA4B;YAC5B,MAAM;YACN,YAAY;QACd,CAAC;QAED,KAAK,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,EAAE,GAAI,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QAED,KAAK,CAAC,OAAO,GAAG,UAAU,KAAK;YAC7B,KAAK,CAAC,yBAAyB,GAAI,KAAK,CAAC,MAAc,CAAC,SAAS,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAEM,QAAQ,CAAC,KAAa;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACrC,KAAK,CAAC,GAAG,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAChC,CAAC;IAAA,CAAC;IAEM,YAAY;QAClB,KAAK,MAAM,OAAO,IAAI,kDAAQ,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACtC;IACH,CAAC;;4EAvLU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACQ;AACH;;AAqBzC,MAAM,aAAa;IAiBxB;QAPQ,kBAAa,GAAkB;YACrC,IAAI,EAAE;gBACJ,KAAK,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChD,IAAI,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;aACnD;SACF;QAuED;;WAEG;QACI,eAAU,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;YACrD,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;gBACtB,OAAO;aACR;YACD,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACnF,CAAC;QAEM,iBAAY,GAAG,CAAC,CAAU,EAAE,CAAU,EAAE,EAAE;YAC/C,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QAC7B,CAAC;QAhFC,IAAI,CAAC,YAAY,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QAE/C,IAAI,aAAa,GAAkB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC;QACpG,IAAI,CAAC,YAAY,GAAG,IAAI,oDAAe,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC;IACtF,CAAC;IAED,iEAAiE;IACjE,WAAW;QACT,IAAI,IAAI,CAAC,6BAA6B,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YACnD,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;SAC3C;IACH,CAAC;IAED,SAAS,CAAC,SAAiC;QACzC,uLAAuL;QACvL,gJAAgJ;QAChJ,iFAAiF;QACjF,IAAI,SAAS,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE;YACpE,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;SAC9D;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,MAAc;QAC1B,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAGD;;;OAGG;IACI,WAAW,CAAC,MAAc;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE;YAChC,IAAI,OAAO,GAAc,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;YAEnF,IAAI,eAAqB,CAAC;YAC1B,IAAI,MAAM,KAAK,WAAW,EAAE;gBAC1B,eAAe,GAAG,0DAAS,CAAC,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9E;iBAAM;gBACL,eAAe,GAAG,0DAAS,CAAC,IAAI,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9E;YAED,IAAI,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC7H,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;SACtC;IACH,CAAC;IAkBD;;MAEE;IACM,sBAAsB,CAAC,IAAY;QACzC,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEM,qBAAqB;QAC1B,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzF,CAAC;IAEM,kBAAkB,CAAC,IAAU;QAClC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE;IACxE,CAAC;IAEM,UAAU,CAAC,KAAa;QAC7B,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,KAAK,EAAE,CAAC;SACpB;IACH,CAAC;;0EA1HU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACtBD;AAAA;AAAO,MAAM,MAAM,GAAa,CAAC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,CAAC;;;;;;;;;;;;;ACA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgC;AAEzC;;;AAmB3B,MAAM,aAAa;IAOxB,YACU,gBAA4C;QAA5C,qBAAgB,GAAhB,gBAAgB,CAA4B;QAEpD,IAAI,CAAC,WAAW,GAAG,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,oDAAe,CAAc,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,SAAS;IACvE,CAAC;IAEM,QAAQ,CAAC,KAAa;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACrC,KAAK,CAAC,GAAG,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QAC9B,EAAE,CAAC,UAAU,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QACD,EAAE,CAAC,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;YACrB,KAAK,CAAC,wBAAwB,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAAA,CAAC;IAEK,SAAS;QACd,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,EAAE,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,8EAA8E;IACvE,sBAAsB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,SAAS;QACP,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpD,WAAW,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAGM,WAAW,CAAC,GAAW,EAAE,SAAiB;QAC/C,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,GAAG,CAAC,SAAS,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QACD,IAAG,IAAI,CAAC,YAAY,IAAI,SAAS,EAAC;YAChC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;SACjC;IACH,CAAC;IAGM,eAAe,CAAC,KAAY;QACjC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAE,KAAK,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,IAAI,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,OAAO,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;QACxC,IAAI,MAAM,GAAgB,EAAE;QAE5B,OAAO,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAC5B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACjC,IAAI,MAAM,EAAE;gBACV,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;gBAC5B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBACzB,MAAM,CAAC,IAAI,eAAM,EAAE,GAAG,EAAE,EAAK,KAAK,EAAG;gBACrC,MAAM,CAAC,QAAQ,EAAE,CAAC;aACnB;iBACI;gBACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;aAC1B;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;QAElD,KAAK,CAAC,eAAe,GAAG,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,EAAE,GAAI,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAC5C,CAAC;QAED,KAAK,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,EAAE,GAAI,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QAED,KAAK,CAAC,OAAO,GAAG,UAAU,KAAK;YAC7B,KAAK,CAAC,yBAAyB,GAAI,KAAK,CAAC,MAAc,CAAC,SAAS,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAEM,UAAU;QACf,KAAK,MAAM,KAAK,IAAI,8CAAM,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;;0EA5GU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,0BAA0B;IAErC;IAAgB,CAAC;IAEjB,eAAe,CAAC,EAAO;QACrB,MAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAC;QAEnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAChC,EAAE,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC;SAChD;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;YACzC,EAAE,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC;SAChD;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC9B,EAAE,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;SAC9C;IACH,CAAC;IAED;;;;;OAKG;IACH,aAAa;QACX,OAAO,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;;oGA/BU,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;6FAEP,0BAA0B;cAHtC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA2C;AACQ;;AAO5C,MAAM,aAAa;IAMxB;QACE,IAAI,CAAC,OAAO,GAAE,IAAI,oDAAe,CAAS,IAAI,CAAC;IAChD,CAAC;IAEK,kBAAkB;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC/B,CAAC;IAEM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAEM,IAAI,CAAC,SAAiB,EAAE,OAAiB;QAC9C,IAAI,CAAC,eAAe,GAAE,SAAS,CAAC;QAChC,IAAG,OAAO,EAAC;YACT,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;SACtC;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAEM,IAAI;QACT,IAAG,IAAI,CAAC,qBAAqB,EAAC;YAC5B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACnC;QACD,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;;0EAhCU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,oBAAoB;CAC7B,CAAC;AAIF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, transition, style, query, animateChild, group, animate } from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('Settings => Home, Settings => Groups, Groups => Home', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ]),\r\n      query(':enter', [\r\n        style({ left: '-100%'})\r\n      ]),\r\n      query(':leave', animateChild()),\r\n      group([\r\n        query(':leave', [\r\n          animate('150ms ease-out', style({ left: '100%'}))\r\n        ]),\r\n        query(':enter', [\r\n          animate('150ms ease-out', style({ left: '0%'}))\r\n        ])\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ]),\r\n    transition('Home => Settings, Home => Groups, Groups => Settings', [\r\n        style({ position: 'relative' }),\r\n        query(':enter, :leave', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            width: '100%'\r\n          })\r\n        ]),\r\n        query(':enter', [\r\n          style({ right: '-100%'})\r\n        ]),\r\n        query(':leave', animateChild()),\r\n        group([\r\n          query(':leave', [\r\n            animate('150ms ease-out', style({ right: '100%'}))\r\n          ]),\r\n          query(':enter', [\r\n            animate('150ms ease-out', style({ right: '0%'}))\r\n          ])\r\n        ]),\r\n        query(':enter', animateChild()),\r\n      ])\r\n  ]);","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddComponent } from './screens/add/add.component';\nimport { HomeComponent } from './screens/home/home.component';\nimport { SettingsComponent } from './screens/settings/settings.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GroupsComponent } from './screens/groups/groups.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, data: {animation: 'Home'} },\n  { path: 'settings', component: SettingsComponent, data: {animation: 'Settings'}  },\n  { path: 'groups', component: GroupsComponent ,data: {animation: 'Groups'}},\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { RouterOutlet, Router, NavigationStart } from '@angular/router';\r\nimport { slideInAnimation } from './animations';\r\nimport { SliderService } from './services/slider/slider.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { FilterService } from './services/filter/filter.service';\r\nimport { combineLatest } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less'],\r\n  animations: [\r\n    slideInAnimation\r\n    // animation triggers go here\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'Expenses';\r\n  public appHeadline: string = \"ExpenseManager\";\r\n\r\n  public currentFilter$ = this.filterService.getFilter();\r\n  public filterTitles: { date: string; group: string } = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public sliderService: SliderService,\r\n    public filterService: FilterService,\r\n    private datePipe: DatePipe,\r\n  ) {\r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationStart)\r\n    ).subscribe((event: NavigationStart) => {\r\n      let url = event.url.substring(1);\r\n      switch (url) {\r\n        case \"home\":\r\n          this.appHeadline = \"Overview\";\r\n          break;\r\n        case \"groups\":\r\n          this.appHeadline = \"Groups\";\r\n          this.resetTemporary();\r\n          break;\r\n        case \"settings\":\r\n          this.appHeadline = \"Settings\";\r\n          this.resetTemporary();\r\n          break;\r\n        default:\r\n          this.appHeadline = \"Overview\";\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(){\r\n    combineLatest(this.currentFilter$, this.filterService.monthSwitched$).subscribe(([filter, monthSwitch]) => {\r\n      let tempString = {\r\n        date: null,\r\n        group: null\r\n      }\r\n      if (monthSwitch) {\r\n        tempString.date = this.datePipe.transform(`${monthSwitch.year}-${monthSwitch.month}-01`, 'MMM y');\r\n      } else {\r\n        if (filter.date) {\r\n          tempString.date = this.datePipe.transform(`${filter.date.year}-${filter.date.month}-01`, 'MMM y');\r\n        }else if(filter.last30Active){\r\n          tempString.date = \"Last 30 days\" \r\n        }\r\n      }\r\n\r\n      if (filter.groups) {\r\n        // TODO not just first but all\r\n        tempString.group = `${filter.groups[0]}`;\r\n        for(let i=1; i<filter.groups.length;i++){\r\n          tempString.group += `, ${filter.groups[i]}`\r\n        }\r\n      }\r\n      this.filterTitles = tempString;\r\n    })\r\n  }\r\n\r\n  resetTemporary(){\r\n    this.filterService.resetFilter();\r\n    // this.router.navigate(['/groups']);\r\n  }\r\n\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n}\r\n","<app-header *ngIf=\"appHeadline !== 'Overview'\">\r\n  <div class=\"flexbox justify align h-100\">\r\n    <span>{{appHeadline}}</span>\r\n  </div>\r\n</app-header>\r\n\r\n<app-header *ngIf=\"appHeadline === 'Overview'\">\r\n  <div class=\"home-general-header flexbox justify align h-100\">\r\n    <i class=\"material-icons-outlined back-icon\" (click)=\"filterService.hide()\" *ngIf=\"filterService.filterShown$ | async\">arrow_back_ios</i>\r\n    <i class=\"material-icons-outlined back-icon\" (click)=\"resetTemporary()\" *ngIf=\"(filterService.filterState$ | async).temporaryFilter && !(filterService.filterShown$ | async)\">close</i>\r\n    <span *ngIf=\"!(filterService.filterShown$ | async)\">{{appHeadline}}</span>\r\n    <span *ngIf=\"filterService.filterShown$ | async\">Filter</span>\r\n    <i class=\"material-icons-outlined filter-icon\" (click)=\"filterService.show()\" *ngIf=\"!(filterService.filterShown$ | async)\">filter_list</i>\r\n  </div>\r\n \r\n  <div class=\"home-component-header animated faster\" [className]=\"(!(filterService.filterShown$ | async) && appHeadline == 'Overview') ? 'slideInDown' : 'slideOutUp'\" *ngIf=\"filterTitles?.date || filterTitles?.group\">\r\n    <i class=\"material-icons\" [class.disabled]=\"!currentFilter$.value.date\" (click)=\"filterService.switchMonth('decrement')\">chevron_left</i>\r\n    <div class=\"filter-title\" (click)=\"filterService.show()\">\r\n        <span *ngIf=\"filterTitles?.date\">{{filterTitles.date}}</span>\r\n        <span *ngIf=\"filterTitles?.date && filterTitles?.group\"> - </span>\r\n        <span *ngIf=\"filterTitles?.group\">{{filterTitles.group}}</span>\r\n    </div>    \r\n    <i class=\"material-icons\"  [class.disabled]=\"!currentFilter$.value.date\" (click)=\"filterService.switchMonth('increment')\">chevron_right</i>\r\n  </div>\r\n\r\n</app-header>\r\n\r\n<div class=\"router-body\" [@routeAnimations]=\"prepareRoute(outlet)\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n\r\n\r\n<app-footer></app-footer>\r\n\r\n<div class=\"app-slider\" [class.sliderActive]=\"sliderService.getActiveComponent()\">\r\n  <app-add *ngIf=\"sliderService.activeComponent === 'add'\"></app-add>\r\n  <app-search *ngIf=\"sliderService.activeComponent === 'search'\"></app-search>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { AddComponent } from './screens/add/add.component';\r\nimport { HomeComponent } from './screens/home/home.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SettingsComponent } from './screens/settings/settings.component';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { GroupsComponent } from './screens/groups/groups.component';\r\nimport { SearchComponent } from './screens/search/search.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { FilterComponent } from './screens/filter/filter.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { PrettyCurrencyPipe } from './pipes/pretty-currency.pipe';\r\nimport { DatePipe } from '@angular/common';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { DateDurationPipe } from './pipes/date-duration.pipe';\r\nimport { DateLongShortPipe } from './pipes/date-long-short.pipe';\r\nimport { ExpenseListComponent } from './components/expense-list/expense-list.component';\r\nimport { EditComponent } from './screens/edit/edit.component';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport { ExpenseBottomSheetComponent } from './components/expense-list/expense-bottom-sheet/expense-bottom-sheet.component';\r\nimport { SettingsBottomSheetComponent } from './screens/settings/settings-bottom-sheet/settings-bottom-sheet.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { RecurringExpenseListComponent } from './components/recurring-expense-list/recurring-expense-list.component';\r\nimport { RecurringExpenseBottomSheetComponent } from './components/recurring-expense-list/expense-bottom-sheet/recurring-expense-bottom-sheet.component';\r\nimport { DurationWeekDayPipe } from './pipes/duration-week-day.pipe';\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\nimport { SttRecorderComponent } from './components/stt-recorder/stt-recorder.component';\r\nregisterLocaleData(localeDe, 'de');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SettingsComponent,\r\n    GroupsComponent,\r\n    SearchComponent,\r\n    FilterComponent,\r\n    PrettyCurrencyPipe,\r\n    DateDurationPipe,\r\n    DateLongShortPipe,\r\n    ExpenseListComponent,\r\n    EditComponent,\r\n    ExpenseBottomSheetComponent,\r\n    SettingsBottomSheetComponent,\r\n    RecurringExpenseListComponent,\r\n    RecurringExpenseBottomSheetComponent,\r\n    DurationWeekDayPipe,\r\n    SttRecorderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatSlideToggleModule,\r\n    MatDatepickerModule,\r\n    MatTabsModule,\r\n    ReactiveFormsModule,\r\n    MatBottomSheetModule,\r\n    MatNativeDateModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    HighchartsChartModule,\r\n    HttpClientModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    DatePipe\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { ExpenseService } from 'src/app/services/expenses/expense.service';\n\n@Component({\n  selector: 'app-expense-bottom-sheet',\n  templateUrl: './expense-bottom-sheet.component.html',\n  styleUrls: ['./expense-bottom-sheet.component.less']\n})\nexport class ExpenseBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public expense: any,\n    public sliderService: SliderService,\n    public expenseService: ExpenseService,\n    private bottomSheetRef: MatBottomSheetRef<ExpenseBottomSheetComponent>\n    ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  public deleteExpense(e: MouseEvent, key: number) {\n    e.stopPropagation();\n    if (confirm(\"Do you really want to delete this expense?\")) {\n      this.expenseService.deleteExpense(key, \"expenses\");\n      this.dismiss();\n    }\n    // this.detailViewShownForIndex = null;\n  }\n\n  editExpense(e: MouseEvent){\n    this.sliderService.show('add', this.expense)\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"expense-menu\">\n    <div class=\"option-container\">\n        <div class=\"edit menu-item\" (click)=\"editExpense($event)\">Edit</div>\n        <div class=\"delete menu-item\" (click)=\"deleteExpense($event, expense.key)\">Delete</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ExpenseBottomSheetComponent } from './expense-bottom-sheet/expense-bottom-sheet.component';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Observable, merge } from 'rxjs';\nimport { FilterService } from 'src/app/services/filter/filter.service';\n\n@Component({\n  selector: 'app-expense-list',\n  animations: [\n    trigger('slideInOut', [\n      state('out', style({\n        opacity: '0',\n        overflow: 'hidden',\n        height: '0px',\n      })),\n      state('in', style({\n        opacity: '1',\n        overflow: 'hidden',\n        height: '*',\n      })),\n      transition('out => in', animate('150ms ease-in-out')),\n      transition('in => out', animate('150ms ease-in-out'))\n    ])\n  ],\n  templateUrl: './expense-list.component.html',\n  styleUrls: ['./expense-list.component.less']\n})\nexport class ExpenseListComponent implements OnInit {\n\n  constructor(\n    public expenseService: ExpenseService,\n    public categoryService: CategoryService,\n    public filterService: FilterService,\n    public sliderService: SliderService,\n    private bottomSheet: MatBottomSheet\n  ) { }\n\n  @Input() public expenses: Expense[];\n  @Input() public collapseNotifier: Observable<void>;\n    public refresh: boolean = true;\n\n  ngOnInit(): void {\n    merge(this.expenseService.expenseDeletedNotifier,this.collapseNotifier).subscribe(()=>{\n      this.helper= {}\n    });\n    //TODO : Quick fix for testing --> Debug! \n    this.filterService.sortMethod$.subscribe(()=>{\n      this.refresh = false;\n      setTimeout(() => {\n        this.refresh=true;\n      }, 0);\n    })\n  }\n\n  public helper = {}\n  helpMenuOpenForIndex(index: number):string{\n    return this.helper[index] || 'out';\n  }\n\n  toggleHelpMenu(index: number): void {\n    if(this.helper[index]){\n      //already exists --> is open\n      this.helper = {};\n    }else{\n      this.helper = {};\n      this.helper[index] =  'in';\n    }\n  }\n\n  public stopPropagation(e: MouseEvent){\n    e.stopPropagation();\n  }\n\n  openBottomSheet(e:MouseEvent, expense: any): void {\n    e.stopPropagation();\n    document.body.style.backgroundColor=\"#4f5053\";\n    this.bottomSheet.open(ExpenseBottomSheetComponent,{data: expense});\n  }\n\n}\n","<div class=\"expense-list\" (click)=\"stopPropagation($event)\" *ngIf=\"refresh\">\n    <div *ngFor=\"let expense of expenses; let i = index\" class=\"expense-item\" (click)=\"toggleHelpMenu(i)\" >\n        <span class=\"recurring\" *ngIf=\"expense.recurring\">Monthly</span> \n        <div class=\"category-indicator\" [style.background-color]=\"categoryService.categoryColors[expense.category]\"></div>\n        <div class=\"item-content\">\n            <div class=\"minimal-info\" >\n                <div class=\"date info-item\">{{expense.date | dateLongShort}}</div> \n                <div class=\"name info-item\">{{expense.name}}</div>\n                <div class=\"amount info-item\">{{expense.amount | prettyCurrency}}</div>\n            </div>\n            <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i)\" >\n                <div class=\"description flexbox\" *ngIf=\"expense.description\">\n                    <!-- <i class=\"material-icons-outlined mr-8\">description</i>-->\n                    <span>{{expense.description}}</span>                    \n                </div>\n\n                <div class=\"group\">\n                    <div class=\"group-title flexbox align\">\n                        <!-- <div class=\"image-icon groups mr-8\"></div> -->\n                        <span>Group:</span>\n                    </div>\n                    <div class=\"group-name\"> {{expense.group}}</div>   \n                    <div class=\"action-buttons\">\n                        <i  class=\"material-icons\" (click)=\"openBottomSheet($event, expense)\">more_horiz</i>                    \n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <i class=\"material-icons-outlined\" (click)=\"expenseService.deleteExpense(expense.key)\">close</i> -->\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SliderService } from 'src/app/services/slider/slider.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.less']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(\n    public sliderService: SliderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer-component-container\">\n  <span routerLink=\"/home\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon home\"></div>\n    <!-- <img routerLink=\"/home\" routerLinkActive=\"active\" class=\"image-icon\" src=\"../../../assets/images/home_outlined.png\"> -->\n  </span>\n  \n  <span routerLink=\"/groups\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon groups\" ></div>\n  </span>\n\n  <span class=\"flex-1 flexbox justify h-100 align\" (click)=\"sliderService.show('add')\">\n    <div class=\"image-icon add\" ></div>\n  </span>\n\n  <span  class=\"flex-1 flexbox justify h-100 align\" (click)=\"sliderService.show('search')\">\n    <div class=\"image-icon search\"></div>\n  </span>\n  \n\n  <span routerLink=\"/settings\" routerLinkActive=\"active\" class=\"flex-1 flexbox justify h-100 align\">\n    <div class=\"image-icon settings\"></div>\n  </span>\n  <app-stt-recorder></app-stt-recorder>\n\n  <!-- <i routerLink=\"/settings\" routerLinkActive=\"active\" class=\"material-icons-outlined\">settings</i> -->\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"header-component-container\">\n    <ng-content></ng-content>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { ExpenseService } from 'src/app/services/expenses/expense.service';\n\n@Component({\n  selector: 'app-recurring-expense-bottom-sheet',\n  templateUrl: './recurring-expense-bottom-sheet.component.html',\n  styleUrls: ['./recurring-expense-bottom-sheet.component.less']\n})\nexport class RecurringExpenseBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public expense: any,\n    public sliderService: SliderService,\n    public expenseService: ExpenseService,\n    private bottomSheetRef: MatBottomSheetRef<RecurringExpenseBottomSheetComponent>\n    ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  public deleteExpense(e: MouseEvent, key: number) {\n    e.stopPropagation();\n    if (confirm(\"Do you really want to delete this recurring expense? Past entries won't be deleted!\")) {\n      this.expenseService.deleteExpense(key, \"recurringExpenses\");\n      this.dismiss();\n    }\n    // this.detailViewShownForIndex = null;\n  }\n\n  editExpense(e: MouseEvent){\n    this.sliderService.show('add', this.expense)\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"expense-menu\">\n    <div class=\"option-container\">\n        <div class=\"edit menu-item\" (click)=\"editExpense($event)\">Edit</div>\n        <div class=\"delete menu-item\" (click)=\"deleteExpense($event, expense.key)\">Delete</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { SliderService } from 'src/app/services/slider/slider.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Observable } from 'rxjs';\nimport { RecurringExpenseBottomSheetComponent } from './expense-bottom-sheet/recurring-expense-bottom-sheet.component';\n\n@Component({\n  selector: 'app-recurring-expense-list',\n  animations: [\n    trigger('slideInOut', [\n      state('out', style({\n        opacity: '0',\n        overflow: 'hidden',\n        height: '0px',\n      })),\n      state('in', style({\n        opacity: '1',\n        overflow: 'hidden',\n        height: '*',\n      })),\n      transition('out => in', animate('150ms ease-in-out')),\n      transition('in => out', animate('150ms ease-in-out'))\n    ])\n  ],\n  templateUrl: './recurring-expense-list.component.html',\n  styleUrls: ['./recurring-expense-list.component.less']\n})\nexport class RecurringExpenseListComponent implements OnInit {\n\n  constructor(\n    public expenseService: ExpenseService,\n    public categoryService: CategoryService,\n    public sliderService: SliderService,\n    private bottomSheet: MatBottomSheet\n  ) { }\n\n  @Input() public expenses: Expense[];\n  @Input() public collapseNotifier: Observable<void>;\n  public detailViewShownForIndex: number;\n\n  ngOnInit(): void {\n    this.expenseService.expenseDeletedNotifier.subscribe(()=>{\n      this.helper = {}\n    });\n    this.collapseNotifier.subscribe(()=>{\n      this.helper = {}\n    })\n  }\n\n  public helper = {}\n  helpMenuOpenForIndex(index: number):string{\n    return this.helper[index] || 'out';\n  }\n\n  toggleHelpMenu(index: number): void {\n    if(this.helper[index]){\n      //already exists --> is open\n      this.helper = {};\n    }else{\n      this.helper = {};\n      this.helper[index] =  'in';\n    }\n  }\n\n  public stopPropagation(e: MouseEvent){\n    e.stopPropagation();\n  }\n\n  // public toggleDetailView(index: number) {\n  //   if (this.detailViewShownForIndex != null && this.detailViewShownForIndex == index) {\n  //     this.detailViewShownForIndex = null;\n  //   } else {\n  //     this.detailViewShownForIndex = index;\n  //   }\n  // }\n\n  openBottomSheet(e:MouseEvent, expense: any): void {\n    e.stopPropagation();\n    document.body.style.backgroundColor=\"#4f5053\";\n    this.bottomSheet.open(RecurringExpenseBottomSheetComponent,{data: expense});\n    // ExpenseBottomSheetComponent.\n  }\n\n}\n","<div class=\"expense-list\" (click)=\"stopPropagation($event)\">\n    <div *ngFor=\"let expense of expenses; let i = index\" class=\"expense-item\" (click)=\"toggleHelpMenu(i)\" >\n        <div class=\"category-indicator\" [style.background-color]=\"categoryService.categoryColors[expense.category]\"></div>\n        <div class=\"item-content\">\n            <div class=\"minimal-info\" >\n                <!-- <div class=\"date info-item\">{{expense.date | dateLongShort}}</div>  -->\n                <div class=\"name info-item\">{{expense.name}}</div>\n                <div class=\"amount info-item\">{{expense.amount | prettyCurrency}}</div>\n            </div>\n            <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i)\" >\n                <div class=\"description\" *ngIf=\"expense.description\">{{expense.description}}</div>\n                <div class=\"group\">\n                    <div class=\"group-title\">Since:</div>\n                    <div class=\"group-name\"> {{expense.date | date:'MMM y'}}</div>   \n                </div>\n                <div class=\"group\">\n                    <div class=\"group-title\">Group:</div>\n                    <div class=\"group-name\"> {{expense.group}}</div>   \n                    <div class=\"action-buttons\">\n                        <i  class=\"material-icons\" (click)=\"openBottomSheet($event, expense)\">more_horiz</i>                    \n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <i class=\"material-icons-outlined\" (click)=\"expenseService.deleteExpense(expense.key)\">close</i> -->\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { AudioService } from 'src/app/services/audio/audio.service';\nimport { takeUntil, bufferTime, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-stt-recorder',\n  templateUrl: './stt-recorder.component.html',\n  styleUrls: ['./stt-recorder.component.less']\n})\nexport class SttRecorderComponent implements OnInit {\n\n  constructor(\n    private audioService: AudioService,\n    private zone: NgZone,\n  ) { }\n\n  public recordingState$: BehaviorSubject<string> = new BehaviorSubject('inactive');\n  private data: Int16Array;\n  public results: any[] = [];\n\n\n  ngOnInit(): void {\n  }\n\n  async startRecording() {\n    if (this.recordingState$.value === 'inactive') {\n      let audioStream = await this.audioService.getUserMediaStream();\n\n      this.recordingState$.next(\"recording\");\n\n      this.data = new Int16Array();\n      this.resampleStream(audioStream).subscribe((data) => {\n        this.data = new Int16Array([...this.data, ...data]);\n      });\n    }\n  }\n\n  async stopRecording() {\n    if (this.recordingState$.value === 'recording') {\n      this.stopResampling();\n      this.recordingState$.next('inactive');\n      let result = await this.audioService.getTextFromAudio(this.data);\n      alert(result.transcription);\n      // if (metadataResult.transcription !== \"\") {\n      //   this.results.push(metadataResult);\n      // }\n    }\n  }\n\n\n  audioContext: AudioContext;\n  gumStream: MediaStream;\n  resampledFrames$: Subject<Int16Array>;\n  streamEndNotifier$: Subject<void>;\n  resampledStream$: Observable<Int16Array>;\n\n  resampleStream(sourceStream: MediaStream, emitInterval: number = Number.MAX_SAFE_INTEGER / 10): Observable<Int16Array> {\n    this.gumStream = sourceStream;\n    this.resampledFrames$ = new Subject<Int16Array>();\n\n    //TODO: Fix 'as any'\n    this.audioContext = new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n    let audioSource = this.audioContext.createMediaStreamSource(sourceStream);\n    let node = this.audioContext.createScriptProcessor(4096, 1, 1);\n    node.onaudioprocess = (e) => {\n      this.processAudioFrame(e.inputBuffer.getChannelData(0), audioSource.context.sampleRate);\n    };\n    audioSource.connect(node);\n    node.connect(this.audioContext.destination);\n\n    this.streamEndNotifier$ = new Subject<void>();\n\n    this.resampledStream$ = this.resampledFrames$.pipe(\n      takeUntil(this.streamEndNotifier$),\n      bufferTime(emitInterval),\n      map(this.mergeInt16Arrays),\n    );\n    return this.resampledStream$;\n  }\n  mergeInt16Arrays(arrays: Int16Array[]): Int16Array {\n    return arrays.reduce((previous, current) => {\n        return new Int16Array([...previous, ...current]);\n    }, new Int16Array())\n}\n\n  inputBuffer = [];\n\n  processAudioFrame(inputFrame, inputSampleRate: number) {\n    for (let i = 0; i < inputFrame.length; i++) {\n        this.inputBuffer.push((inputFrame[i]) * 32767);\n    }\n\n    const goalSampleRate = 16000;\n    const frameLength = 512;\n\n    while ((this.inputBuffer.length * goalSampleRate / inputSampleRate) > frameLength) {\n        let outputFrame = new Int16Array(frameLength);\n        let sum = 0;\n        let num = 0;\n        let outputIndex = 0;\n        let inputIndex = 0;\n\n        while (outputIndex < frameLength) {\n            sum = 0;\n            num = 0;\n            while (inputIndex < Math.min(this.inputBuffer.length, (outputIndex + 1) * inputSampleRate / goalSampleRate)) {\n                sum += this.inputBuffer[inputIndex];\n                num++;\n                inputIndex++;\n            }\n            outputFrame[outputIndex] = sum / num;\n            outputIndex++;\n        }\n\n        this.resampledFrames$.next(outputFrame);\n        this.inputBuffer = this.inputBuffer.slice(inputIndex);\n    }\n}\nstopResampling() {\n  //emit last ping since intervall won't ping last time at say 800ms \n  this.streamEndNotifier$.next(); \n  this.audioContext.close();\n  this.gumStream.getAudioTracks()[0].stop();\n  this.inputBuffer = [];\n}\n\n\n\n}\n","<p>stt-recorder works!</p>\n\n\n<div class=\"recorder\" (pointerdown)=\"startRecording()\" (pointerup)=\"stopRecording()\">\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { GroupTotal } from '../services/groups/groups.service';\nimport { isSameDay, isSameMonth, isSameYear, getDate, getMonth, getYear } from 'date-fns';\n\n@Pipe({\n  name: 'dateDuration'\n})\nexport class DateDurationPipe implements PipeTransform {\n\n  private monthsAbbrev: string[]= [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\" ,\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dez\"];\n\n  transform(value: Partial<GroupTotal>): string {\n    let fromDate= new Date(value.firstExpenseDate);\n    let toDate =  new Date(value.lastExpenseDate);\n\n    // 25 Feb. 2020\n    if(isSameDay(fromDate,toDate)){\n      return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)}`;\n    }\n    \n    if(isSameMonth(fromDate,toDate)){\n      return `${getDate(fromDate)} - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)}`;\n    }\n\n    if(isSameYear(fromDate,toDate)){\n      return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(toDate)]}.  ${getYear(fromDate)}`;\n    }\n\n    return `${getDate(fromDate)} ${this.monthsAbbrev[getMonth(fromDate)]}. ${getYear(fromDate)} - ${getDate(toDate)} ${this.monthsAbbrev[getMonth(toDate)]}.  ${getYear(toDate)}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getYear } from 'date-fns';\n\n@Pipe({\n  name: 'dateLongShort'\n})\nexport class DateLongShortPipe implements PipeTransform {\n\n  constructor(\n    private datePipe: DatePipe,\n  ){}\n\n  transform(date: string): string {\n    if(getYear(new Date(date)) == getYear(new Date())){\n      return this.datePipe.transform(date, 'd MMM')\n    }else{\n      return this.datePipe.transform(date, 'd MMM y')\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'durationWeekDay'\n})\nexport class DurationWeekDayPipe implements PipeTransform {\n\n  transform(value: number): string {\n    let result=[]\n    let years = parseInt((value/(365)).toString().split(\".\")[0]);\n    let months = parseInt(((value - years*365)/30.4167).toString().split(\".\")[0]);\n    let weeks = parseInt(((value - years*365 - months*30.4167)/7).toString().split(\".\")[0]);\n    let days = parseInt((value - weeks*7 - months*30.4167 - years*365).toFixed(0));\n    \n    // if(value >400){\n    //   debugger;\n    // }\n\n    if(years>0){\n      result.push(`${years} ${this.pluralizeYear(years)}`)\n    }\n\n    if(months>0){\n      result.push(`${months} ${this.pluralizeMonth(months)}`)\n    }\n    \n    if(weeks>0){\n      result.push(`${weeks} ${this.pluralizeWeek(weeks)}`);\n    }\n\n    if(days>0 && years==0){\n      result.push(`${days} ${this.pluralizeDay(days)}`);\n    }\n    \n    return result.join(\", \");\n    \n  }\n  \n  pluralizeYear(years: number): string{\n    if(years>0){\n      return \"year\";\n    }else{\n      return \"years\";\n    }\n  }\n\n  pluralizeMonth(months: number): string{\n    if(months>1){\n      return \"months\";\n    }else{\n      return \"month\";\n    }\n  }\n\n  pluralizeWeek(weeks: number): string{\n    if(weeks>1){\n      return \"weeks\";\n    }else{\n      return \"week\";\n    }\n  }\n\n  pluralizeDay(days: number): string{\n    if(days>1){\n      return \"days\";\n    }else{\n      return \"day\";\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'prettyCurrency'\n})\nexport class PrettyCurrencyPipe implements PipeTransform {\n\n  transform(value: number): string {\n    return `${value.toFixed(2)}€`;\n  }\n\n}","import { Component, OnInit, ViewChild, ElementRef, NgZone, AfterViewInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { take } from 'rxjs/operators';\r\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.less']\r\n})\r\nexport class AddComponent implements OnInit, AfterViewInit {\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    public expenseService: ExpenseService,\r\n    public groupsService: GroupsService,\r\n    public categoryService: CategoryService,\r\n    private filterService: FilterService,\r\n    private _ngZone: NgZone\r\n  ) { }\r\n\r\n  @ViewChild(\"focusInputAdd\") public focusInput: ElementRef;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n\r\n  public expenseForm: FormGroup;\r\n  public recurringForm: FormGroup;\r\n  public selectedTabIndex: number;\r\n\r\n  public groups$: Observable<GroupItem[]>;\r\n  public initialData: Expense;\r\n\r\n  ngOnInit(): void {\r\n    this.initialData = this.sliderService.currentExpenseForEdit;\r\n    this.selectedTabIndex = (this.initialData?.lastUpdate) ? 1: 0;\r\n\r\n    this.expenseForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.maxLength(35)]),\r\n      amount: new FormControl('', Validators.required),\r\n      date: new FormControl(this.currentDate(), Validators.required),\r\n      category: new FormControl(this.categoryService.defaultCategory, Validators.required),\r\n      group: new FormControl(\"General\", Validators.required),\r\n      description: new FormControl('', Validators.maxLength(200))\r\n    });\r\n\r\n    this.recurringForm = new FormGroup({\r\n      name_recurring: new FormControl('', [Validators.required, Validators.maxLength(35)]),\r\n      amount_recurring: new FormControl('', Validators.required),\r\n      month_recurring: new FormControl(this.filterService.getCurrentMonthFilter(), Validators.required),\r\n      category_recurring: new FormControl('general', Validators.required),\r\n      group_recurring: new FormControl(\"General\", Validators.required),\r\n      description_recurring: new FormControl('', Validators.maxLength(200)),\r\n    });\r\n\r\n    //TODO : Dirty workaround\r\n    if (this.initialData) {\r\n      setTimeout(() => {\r\n        if(this.initialData.lastUpdate){\r\n          this.recurringForm.reset({\r\n            name_recurring: this.initialData.name,\r\n            amount_recurring: this.initialData.amount,\r\n            month_recurring: this.initialData.date.substring(0,7),\r\n            category_recurring: this.initialData.category,\r\n            group_recurring: this.initialData.group,\r\n            description_recurring: this.initialData.description\r\n          });\r\n        }else{\r\n          this.expenseForm.reset({\r\n            name: this.initialData.name,\r\n            amount: this.initialData.amount,\r\n            date: this.initialData.date,\r\n            category: this.initialData.category,\r\n            group: this.initialData.group,\r\n            description: this.initialData.description\r\n          });\r\n        }\r\n      }, 100);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.expenseForm.reset({\r\n          name: '',\r\n          amount: '',\r\n          date: this.currentDate(),\r\n          category: this.categoryService.defaultCategory,\r\n          group: this.groupsService.defaultGroup,\r\n          description: ''\r\n        })\r\n      }, 100);\r\n    }\r\n    this.groups$ = this.groupsService.getGroupsWithoutUpdate();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if(!this.initialData){\r\n      this.focusInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n\r\n  tabChanged(e: MatTabChangeEvent) {\r\n    this.selectedTabIndex = e.index;\r\n  }\r\n\r\n  hasError(controlName: string, errorName: string, formType: string) {\r\n    if (formType === \"single\") {\r\n      return this.expenseForm.controls[controlName].hasError(errorName);\r\n    } else {\r\n      return this.recurringForm?.controls[controlName]?.hasError(errorName);\r\n    }\r\n  }\r\n\r\n  private setFormGroupTouched(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n\r\n  currentDate() {\r\n    const currentDate = new Date();\r\n    \r\n    return `${currentDate.getFullYear()}-${this.filterService.parseMonth(currentDate.getMonth()+1)}-${this.filterService.parseMonth(currentDate.getDate())}`;\r\n  }\r\n\r\n  createExpense() {\r\n    if (this.selectedTabIndex === 0) {\r\n      let expense= this.expenseForm.value;\r\n      this.setFormGroupTouched(this.expenseForm);\r\n      if (this.expenseForm.valid) {\r\n        if (!this.initialData) {\r\n          this.expenseService.addExpense(expense, \"expenses\");\r\n        } else {\r\n          let key = this.initialData.key;\r\n          if(this.initialData.recurring){\r\n            expense.recurring = true;\r\n          }\r\n          this.expenseService.updateExpense(key, expense, \"expenses\");\r\n        }\r\n        this.sliderService.hide();\r\n      }\r\n    } else {\r\n      this.setFormGroupTouched(this.recurringForm);\r\n      let expense= {\r\n        name: this.recurringForm.value.name_recurring,\r\n        amount: this.recurringForm.value.amount_recurring,\r\n        date: this.recurringForm.value.month_recurring + \"-01\",\r\n        category: this.recurringForm.value.category_recurring,\r\n        group: this.recurringForm.value.group_recurring,\r\n        description: this.recurringForm.value.description_recurring,\r\n        recurring: true,\r\n        lastUpdate: null\r\n      };\r\n      \r\n      if (this.recurringForm.valid) {\r\n        if(!this.initialData){\r\n          expense.lastUpdate= this.expenseService.getFormatDate(new Date());\r\n          this.expenseService.addExpense(expense, \"recurringExpenses\");\r\n        }else{\r\n          expense.lastUpdate= this.initialData.lastUpdate\r\n          this.expenseService.updateExpense(this.initialData.key, expense, \"recurringExpenses\")\r\n        }\r\n        this.sliderService.hide();\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"add-component-container\">\r\n  <app-header>\r\n    <div class=\"flexbox align h-100 space-between p-0-8 slider-header\">\r\n      <i class=\"slider-header-icon\" (click)=\"sliderService.hide()\" class=\"material-icons-outlined slider-header-icon\">close</i>\r\n      <span *ngIf=\"initialData\">Edit</span>\r\n      <span *ngIf=\"!initialData\">Add</span>\r\n      <i class=\"material-icons-outlined slider-header-icon submit-icon\" [class.enabled]=\"expenseForm.valid || recurringForm.valid\" (click)=\"createExpense()\">check</i>\r\n    </div>\r\n  </app-header>\r\n\r\n  <mat-tab-group disableRipple mat-stretch-tabs class=\"example-stretched-tab\" (selectedTabChange)=\"tabChanged($event)\" [selectedIndex]=\"initialData?.lastUpdate? '1': '0'\">\r\n    <mat-tab [disabled]=\"initialData?.lastUpdate && initialData\" label=\"Single\"> \r\n      <div class=\"content-container\">\r\n        <form class=\"expense-form\" [formGroup]=\"expenseForm\" autocomplete=\"off\" (submit)=\"createExpense()\"\r\n          #formDirective=\"ngForm\">\r\n          \r\n          <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n            <mat-label>Name</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"name\" >\r\n            <mat-error *ngIf=\"hasError('name', 'required', 'single')\">Name is required</mat-error>\r\n            <mat-error *ngIf=\"hasError('name', 'maxlength', 'single')\">Max. 35 characters allowed</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\" class=\"amount-input\">\r\n            <mat-label>Amount (€)</mat-label>\r\n            <input type=\"number\" matInput formControlName=\"amount\" #focusInputAdd>\r\n            <mat-error *ngIf=\"hasError('amount', 'required', 'single')\">Amount is required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Category</mat-label>\r\n            <select matNativeControl formControlName=\"category\">\r\n              <option value=\"food\">Food</option>\r\n              <option value=\"accommodation\">Accommodation</option>\r\n              <option value=\"transport\">Transport</option>\r\n              <option value=\"leisure\">Leisure</option>\r\n              <option value=\"multimedia\">Multimedia</option>\r\n              <option value=\"gear\">Gear</option>\r\n              <option value=\"health_insurance\">Health & Insurance</option>\r\n              <option value=\"general\">General</option>\r\n            </select>\r\n          </mat-form-field> \r\n\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Group</mat-label>\r\n            <select matNativeControl formControlName=\"group\" class=\"group-input-field\">\r\n              <option value=\"General\">General</option>\r\n              <option *ngFor=\"let group of groups$ | async\" value=\"{{group.groupName}}\">{{group.groupName}}</option>\r\n            </select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Date</mat-label>\r\n            <input type=\"date\" matInput formControlName=\"date\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\"\r\n              cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"5\"></textarea>\r\n              <mat-error *ngIf=\"hasError('description', 'maxlength', 'single')\">Max. 200 characters allowed</mat-error>\r\n          </mat-form-field> \r\n          <input type=\"submit\" style=\"display: none\">\r\n        </form>\r\n      </div>  \r\n    </mat-tab>\r\n\r\n\r\n    <mat-tab [disabled]=\"!initialData?.lastUpdate && initialData\" label=\"Recurring\"> \r\n      <div class=\"content-container recurring\">\r\n      <div class=\"recurring-info-text\">Recurring expenses will automatically be added each month on the first day starting with the selected month.</div>\r\n      <form class=\"expense-form\" [formGroup]=\"recurringForm\" autocomplete=\"off\" (submit)=\"createExpense()\" #formDirective=\"ngForm\">\r\n          <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n            <mat-label>Name</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"name_recurring\" >\r\n            <mat-error *ngIf=\"hasError('name_recurring', 'required', 'recurring')\">Name is required</mat-error>\r\n            <mat-error *ngIf=\"hasError('name_recurring', 'maxlength', 'recurring')\">Max. 35 characters allowed</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\" class=\"amount-input\">\r\n            <mat-label>Amount (€)</mat-label>\r\n            <input type=\"number\" matInput formControlName=\"amount_recurring\">\r\n            <mat-error *ngIf=\"hasError('amount_recurring', 'required', 'recurring')\">Amount is required</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Category</mat-label>\r\n            <select matNativeControl formControlName=\"category_recurring\">\r\n              <option value=\"food\">Food</option>\r\n              <option value=\"accommodation\">Accommodation</option>\r\n              <option value=\"transport\">Transport</option>\r\n              <option value=\"leisure\">Leisure</option>\r\n              <option value=\"multimedia\">Multimedia</option>\r\n              <option value=\"gear\">Gear</option>\r\n              <option value=\"health_insurance\">Health & Insurance</option>\r\n              <option value=\"general\">General</option>\r\n            </select>\r\n          </mat-form-field> \r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Group</mat-label>\r\n            <select matNativeControl formControlName=\"group_recurring\" class=\"group-input-field\">\r\n              <option value=\"General\">General</option>\r\n              <option *ngFor=\"let group of groups$ | async\" value=\"{{group.groupName}}\">{{group.groupName}}</option>\r\n            </select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Start month</mat-label>\r\n            <input type=\"month\" matInput formControlName=\"month_recurring\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"standard\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description_recurring\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\"\r\n              cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"5\"></textarea>\r\n              <mat-error *ngIf=\"hasError('description_recurring', 'maxlength', 'recurring')\">Max. 200 characters allowed</mat-error>\r\n          </mat-form-field> \r\n          <input type=\"submit\" style=\"display: none\">\r\n        </form>\r\n      </div>\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.less']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit works!</p>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\nimport { FilterService, ExpenseFilter } from 'src/app/services/filter/filter.service';\nimport {  skip, filter, } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.less']\n})\nexport class FilterComponent implements OnInit {\n\n  @ViewChild(\"monthPickerInput\") public monthPickerInputElement: ElementRef;\n  @ViewChild(\"groupPickerInput\") public groupPickerInputElement: ElementRef;\n\n  public groups$: Observable<GroupItem[]>;\n\n  //Filters\n  public dateSelected: string;\n  public groupsSelected: string[];\n  public allDatesSelected: boolean;\n  public allGroupsSelected: boolean;\n\n  sortMethod: string;\n  sortMethods: string[] = ['date', 'amount'];\n  monthMethod: string;\n\n\n  constructor(\n    private groupService: GroupsService,\n    private filterService: FilterService\n  ) { }\n\n  ngOnInit(): void {\n    this.groups$ = this.groupService.getGroups();\n\n    this.filterService.filterState$.subscribe((state) => {\n      //FIXME : quick workaround for testing\n      setTimeout(() => {\n          if (state.date) {\n            this.dateSelected = `${state.date.year}-${state.date.month}`;\n            this.monthMethod = \"specific\";\n          } else {\n            this.dateSelected = null;\n            if(state.last30Active){\n              this.monthMethod = \"last30\"\n            }else{\n              this.monthMethod = \"all\";\n            }\n          }\n          if (state.groups) {\n            this.groupsSelected = state.groups;\n            this.allGroupsSelected = false;\n          } else {\n            this.groupsSelected = null;\n            this.allGroupsSelected = true;\n          }            \n      }, 200);\n    });\n\n  \n  this.filterService.filterShown$.pipe(\n    skip(1),\n    filter((val) => !val)\n    ).subscribe((isShown) => {\n      this.submitFilter();\n  })\n    \n    this.sortMethod = localStorage.getItem(\"sortMethod\") || \"date\";\n  }\n  \n  removeGroupFilter(index:number){\n    this.groupsSelected.splice(index,1);\n  }\n\n  groupChanged(e: any) {\n    this.allGroupsSelected = !e.checked;\n    if(e.checked){\n        this.groupsSelected= [\"General\"]; // if newly switched on just one with default general\n    }\n  }\n\n  dateChanged(e: any) {\n    if(e.value == 'specific'){\n      this.dateSelected= this.filterService.getCurrentMonthFilter();\n    }\n  }\n\n\n  submitFilter() {\n    let currentFilter = JSON.parse(localStorage.getItem(\"filter\"))\n\n    let newFilter: Partial<ExpenseFilter>= {}\n    if(!this.allGroupsSelected){\n      newFilter.groups=this.groupsSelected;\n    }\n\n    if(this.monthMethod == 'specific'){\n      newFilter.date={\n        month: this.dateSelected.substring(5),\n        year: this.dateSelected.substring(0, 4)\n      }\n      newFilter.last30Active= false;\n    }else if(this.monthMethod == 'all'){\n      newFilter.last30Active = false;\n    }else{\n      newFilter.last30Active= true;\n    }\n\n    let currentSortMethod= localStorage.getItem(\"sortMethod\");\n    if(this.sortMethod !== currentSortMethod){\n      this.filterService.setSortMethod(this.sortMethod);\n    }\n\n    if(JSON.stringify(currentFilter) !== JSON.stringify(newFilter)){\n      this.filterService.setFilter(newFilter)\n    }\n  }\n}\n","<div class=\"filter-component-container\">\n\n  <div class=\"filter-section\">\n    <div class=\"flexbox align\">\n      <i class=\"material-icons mr-8\">today</i>\n      <span>Date</span>\n    </div>\n       <mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"monthMethod\" (change)=\"dateChanged($event)\">\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'all'\">All time</mat-radio-button>\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'last30'\">Last 30 days</mat-radio-button>\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" [value]=\"'specific'\">Specific month</mat-radio-button>\n    </mat-radio-group>\n\n    <mat-form-field appearance=\"standard\" class=\"month-filter\" *ngIf=\"monthMethod == 'specific'\">\n      <mat-label>Month</mat-label>\n      <input type=\"month\" matInput [(ngModel)]=\"dateSelected\" #monthPickerInput>\n    </mat-form-field>\n  </div>\n\n  <div class=\"filter-section groups\">\n    <div class=\"flexbox align\">\n      <!-- <div class=\"image-icon groups mr-8\"></div> -->\n      <i class=\"material-icons mr-8\">folder_open</i>\n      <span>Groups</span>\n    </div>    \n    <mat-slide-toggle color=\"primary\" class=\"example-margin\" [checked]=\"!allGroupsSelected\"\n      (change)=\"groupChanged($event)\">{{allGroupsSelected ? \"All\" : \"Specfic\"}}</mat-slide-toggle>\n    <div class=\"multiple\" *ngIf=\"!allGroupsSelected\">\n      <div class=\"group-filter-item\" *ngFor=\"let singleInput of groupsSelected; let i = index\">\n        <mat-form-field appearance=\"standard\" class=\"groups-filter\">\n          <mat-label>Group</mat-label>\n          <select matNativeControl class=\"group-picker\" [(ngModel)]=\"groupsSelected[i]\" #groupPickerInput>\n            <option value=\"General\">General</option>\n            <option *ngFor=\"let group of groups$ | async\" [value]=\"group.groupName\">{{group.groupName}}</option>\n          </select>\n        </mat-form-field>\n        <div class=\"remove-item mat-form-field-wrapper\" (click)=\"removeGroupFilter(i)\" *ngIf=\"groupsSelected.length > 1\">\n          <i class=\"material-icons\">close</i>\n        </div>\n      </div>\n      <div class=\"align add-group-filter\" (click)=\"groupsSelected.push('General')\">\n        <i class=\"material-icons\">add</i>\n        <span class=\"ml-8\">Add new group filter</span>\n      </div>\n    </div>\n   \n  </div>\n\n  <div class=\"filter-section\">\n    <label id=\"example-radio-group-label\" class=\"flexbox align\"><i class=\"material-icons mr-8\">sort</i> Sort by</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"sortMethod\">\n      <mat-radio-button color=\"primary\" class=\"example-radio-button\" *ngFor=\"let method of sortMethods\"\n        [value]=\"method\">\n        {{method}}\n      </mat-radio-button>\n    </mat-radio-group>\n\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { GroupsService, GroupItem, GroupTotal } from 'src/app/services/groups/groups.service';\r\nimport { Observable, combineLatest, Subscription } from 'rxjs';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\nimport { transition, trigger, state, style, animate } from '@angular/animations';\r\nimport { differenceInDays } from 'date-fns';\r\nimport { Router } from '@angular/router';\r\n\r\ntype GroupTotalCollections = {\r\n  type: string;\r\n  groupTotal: GroupTotal[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('out', style({\r\n        opacity: '0',\r\n        overflow: 'hidden',\r\n        height: '0px',\r\n        margin: '0px'\r\n      })),\r\n      state('in', style({\r\n        opacity: '1',\r\n        overflow: 'hidden',\r\n        height: '*',\r\n        margin: '12px 0 0 0'\r\n      })),\r\n      transition('out => in', animate('150ms ease-in-out')),\r\n      transition('in => out', animate('150ms ease-in-out'))\r\n    ])\r\n  ],\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.less']\r\n})\r\nexport class GroupsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    public groupsService: GroupsService,\r\n    public expenseService: ExpenseService,\r\n    private filterService: FilterService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public groups$: Observable<GroupItem[]>\r\n  public expenses$: Observable<Expense[]>;\r\n  private subscription: Subscription;\r\n  public groupsTotals: GroupTotalCollections[];\r\n  public allTotals: { duration: number, amount: number };\r\n  public helper = {}\r\n\r\n  ngOnInit(): void {\r\n    this.groups$ = this.groupsService.getGroups();\r\n    this.expenses$ = this.expenseService.getExpenses(\"expenses\")\r\n\r\n    this.subscription = combineLatest(this.expenses$, this.groups$).subscribe(([expenses, groups]) => {\r\n      this.groupsTotals = this.calculateGroupsTotals(expenses, groups);\r\n      this.allTotals = this.groupsTotals.map((el) => {\r\n        return el.groupTotal.reduce((acc, cur) => {\r\n          if(!cur.duration){\r\n            return acc;\r\n          }\r\n          return { duration: acc.duration + cur.duration, amount: acc.amount + cur.amount }\r\n        }, { duration: 0, amount: 0 })\r\n      }).reduce((acc, cur) => {\r\n        return { duration: acc.duration + cur.duration, amount: acc.amount + cur.amount }\r\n      });\r\n      this.initializeHelper();\r\n    })\r\n    this.helper = {}\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Shows a expense list just like on home for this group. Opens a slighly modified \"home\" site with a \"x\" button to reset the site to its former state\r\n   */\r\n  showDetailList(groupName: string){\r\n    this.filterService.setFilter(\r\n      {\r\n        temporaryFilter: true,\r\n        groups: [groupName]\r\n      }\r\n    )\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  initializeHelper() {\r\n    for (let i = 0; i < this.groupsTotals.length; i++) {\r\n      this.helper[i] = {};\r\n    }\r\n  }\r\n\r\n  calculateGroupsTotals(expenses: Expense[], groups_origin: GroupItem[]): GroupTotalCollections[] {\r\n    let sorterHelper = {};\r\n    let groups = [...groups_origin].reverse();\r\n    // groups.push({ key: null, groupName: \"General\" });\r\n    groups.forEach((el) => {\r\n      sorterHelper[el.groupName] = {};\r\n      sorterHelper[el.groupName].amount = 0;\r\n      sorterHelper[el.groupName].expenses = [];\r\n    })\r\n\r\n    expenses.forEach(expense => {\r\n      let expenseGroup = expense.group;\r\n      //Skip expenses who have a group that has been deleted\r\n      if (expenseGroup !==\"General\") {\r\n        if (sorterHelper[expenseGroup]) {\r\n          sorterHelper[expenseGroup].amount += expense.amount;\r\n          sorterHelper[expenseGroup].expenses.push(expense)\r\n        } else {\r\n          groups.push({ key: null, groupName: expenseGroup });\r\n          sorterHelper[expenseGroup] = {}\r\n          sorterHelper[expenseGroup].amount = expense.amount;\r\n          sorterHelper[expenseGroup].expenses = [expense];\r\n          sorterHelper[expenseGroup].deleted = true;\r\n        }\r\n      }\r\n    })\r\n\r\n    let result: GroupTotal[] = groups.map<GroupTotal>((group) => {\r\n      let amountForGroup: number = sorterHelper[group.groupName].amount;\r\n      let expenses: Expense[] = sorterHelper[group.groupName].expenses;\r\n      let deleted: boolean = sorterHelper[group.groupName].deleted;\r\n\r\n      let result: GroupTotal;\r\n\r\n      if (expenses.length > 0) {\r\n        let expensesSorted = expenses.sort((a, b) => this.filterService.dateSorter(a.date, b.date));\r\n        let first = expensesSorted[expensesSorted.length - 1].date;\r\n        let last = expensesSorted[0].date;\r\n        let durationInDays = differenceInDays(new Date(last), new Date(first)) + 1;\r\n        result = { ...group, ...{ amount: amountForGroup, firstExpenseDate: first, lastExpenseDate: last, duration: durationInDays } }\r\n      } else {\r\n        result = { ...group, ...{ amount: amountForGroup } }\r\n      }\r\n\r\n      if (deleted) {\r\n        result = { ...result, ...{ deleted: deleted } }\r\n      }\r\n\r\n      return result\r\n    });\r\n\r\n    let mapped = result.reduce((acc, cur) => {\r\n        if (!cur.deleted) {\r\n          if (cur.groupName !== \"General\") {\r\n            let next = acc;\r\n            next[0].groupTotal.push(cur)\r\n            return next\r\n          } else {\r\n            return acc\r\n          }\r\n        } else {\r\n          let next = acc;\r\n          next[1].groupTotal.push(cur)\r\n          return next\r\n        }\r\n    }, [{ type: \"active\", groupTotal: [] }, { type: \"deleted\", groupTotal: [] }]);\r\n\r\n    mapped.forEach(groupCollection => {\r\n      groupCollection.groupTotal.sort((a, b) => this.filterService.dateSorter(a.firstExpenseDate, b.firstExpenseDate))\r\n    });\r\n\r\n\r\n    // mapped[0].groupTotal.fo\r\n\r\n    return mapped;\r\n  }\r\n\r\n\r\n\r\n  helpMenuOpenForIndex(index: number, outer: number): string {\r\n    return this.helper[outer][index] || 'out';\r\n  }\r\n\r\n  toggleHelpMenu(index: number, outer: number): void {\r\n    if (this.helper[outer][index]) {\r\n      //already exists --> is open\r\n      this.initializeHelper();\r\n    } else {\r\n      this.initializeHelper();\r\n      this.helper[outer][index] = 'in';\r\n    }\r\n  }\r\n}\r\n","<div class=\"groups-component-container w-100\">\r\n  <div class=\"group-list\" *ngFor=\"let totals of groupsTotals; let j = index\" >\r\n    <div *ngIf=\"totals.groupTotal.length>0\" [class.isSingle]=\"groupsTotals[0].groupTotal.length==0\">\r\n      <div class=\"group-list-header\">{{totals.type == 'deleted' ? 'Old groups' : 'Active groups'}}</div>\r\n      <div *ngFor=\"let group of totals.groupTotal; let i = index\" class=\"group-list-item\" (click)=\"toggleHelpMenu(i,j)\">\r\n        <div class=\"group-item-general\">\r\n          <div class=\"info-section\">\r\n            <div class=\"group-name\">{{group.groupName}}</div>\r\n            <div class=\"group-dates\" *ngIf=\"group.amount > 0\">\r\n              <span>{{ {firstExpenseDate:group.firstExpenseDate, lastExpenseDate: group.lastExpenseDate} | dateDuration }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"amount\">\r\n            <span *ngIf=\"group.amount>0\">{{group.amount | prettyCurrency}}</span>\r\n            <span class=\"no-expenses\" *ngIf=\"!(group.amount>0)\">No expenses yet</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"more-info\" [@slideInOut]=\"helpMenuOpenForIndex(i,j)\" *ngIf=\"group.duration\">\r\n          <div class=\"mb-8\">\r\n            <span class=\"regular-font mr-8\">Duration:</span>\r\n            <span>{{group.duration | durationWeekDay}}</span>\r\n          </div>\r\n          <div class=\"mb-8\">\r\n            <span class=\"regular-font mr-8\">Cost:</span>\r\n            <span>{{group.amount/ group.duration | number:'1.0-0':'de-DE'}}€ per day</span>\r\n          </div>\r\n          <div class=\"show-list-wrapper\" (click)=\"showDetailList(group.groupName)\">\r\n            <span class=\"regular-font mr-8\" >Show List</span>\r\n            <!-- <i class=\"material-icons-outlined\" (click)=\"showDetailList(group.groupName)\">read_more</i> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"group-list\" *ngIf=\"allTotals && (groupsTotals[0].groupTotal.length>0 || groupsTotals[1].groupTotal.length>0) \">\r\n    <div>\r\n      <div class=\"group-list-header\">Totals</div>\r\n      <div class=\"totals-info-section\">\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Total amount:</span>\r\n          <span>{{allTotals.amount | prettyCurrency}}</span>\r\n        </div>\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Duration:</span>\r\n          <span>{{allTotals.duration | durationWeekDay}}</span>\r\n        </div>\r\n        <div class=\"totals-info-item\">\r\n          <span class=\"regular-font mr-8\">Average cost/day:</span>\r\n          <span>{{(allTotals.amount / allTotals.duration) | number:'1.0-0':'de-DE'}}€ per day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"no-groups\" *ngIf=\"groupsTotals && (groupsTotals[0].groupTotal.length==0 && groupsTotals[1].groupTotal.length==0)\">\r\n    No groups yet\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { Observable, combineLatest, Subject, BehaviorSubject } from 'rxjs';\r\nimport { FilterService, ExpenseFilter, MonthYear } from 'src/app/services/filter/filter.service';\r\nimport { isWithinInterval, subDays, addMonths, subMonths } from \"date-fns\";\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport * as Highcharts from 'highcharts';\r\nimport { map } from 'rxjs/operators';\r\n\r\ninterface CategoryTotal {\r\n  category: string;\r\n  amount: number;\r\n}\r\n\r\ninterface ChartData{\r\n  data: {x:number, y:number}[];\r\n  chartStartDate: number;\r\n  currentMonthIndex: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.less']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    public expenseService: ExpenseService,\r\n    public filterService: FilterService,\r\n    public categoryService: CategoryService\r\n  ) { }\r\n\r\n\r\n  Highcharts: typeof Highcharts = Highcharts;\r\n  chartOptions: Highcharts.Options = {};\r\n\r\n  private expenses$: Observable<Expense[]>;\r\n  public currentFilter$: BehaviorSubject<ExpenseFilter>;\r\n  public monthSwitched$: BehaviorSubject<MonthYear>;\r\n  public sortMethod$: BehaviorSubject<string>;\r\n  public limitedCategory$: BehaviorSubject<string>\r\n\r\n  public expenses: Expense[];\r\n  public totalAmount: number = 0;\r\n  public totalCategories: CategoryTotal[];\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public chartData;\r\n  public initialFocus: string;\r\n\r\n  ngOnInit(): void {\r\n    this.expenses$ = this.expenseService.getExpenses(\"expenses\");\r\n    this.currentFilter$ = this.filterService.getFilter();\r\n    this.monthSwitched$ = this.filterService.monthSwitched$;\r\n    this.sortMethod$ = this.filterService.sortMethod$;\r\n    this.limitedCategory$ = new BehaviorSubject(null);\r\n\r\n    combineLatest(this.currentFilter$, this.expenses$, this.monthSwitched$, this.sortMethod$, this.limitedCategory$)\r\n      .subscribe(([filter, expenses, monthSwitch, sortMethod, limitedCategory]) => {\r\n        let filtered = expenses.filter((expense) => {\r\n          return this.matchesFilter(expense, filter, monthSwitch)\r\n        });\r\n\r\n        if (sortMethod == \"amount\") {\r\n          this.expenses = filtered.reverse().sort(this.filterService.amountSorter);\r\n        } else {\r\n          this.expenses = filtered.reverse().sort((a,b)=>this.filterService.dateSorter(a.date, b.date));\r\n        }\r\n\r\n        // If category limited only view expenses mathihc this category, but dont actually filter like emitting a new expense value. just change the view. Leave category-totals untouched\r\n        if(limitedCategory){\r\n          this.expenses = this.expenses.filter(expense=>{\r\n            return expense.category == limitedCategory;\r\n          })\r\n        }\r\n\r\n        this.totalAmount = filtered.reduce((acc, cur) => {\r\n          return acc + cur.amount\r\n        }, 0);\r\n\r\n        let temp = filtered.reduce((acc, cur) => {\r\n          acc[cur.category] += cur.amount;\r\n          return acc;\r\n        }, {\r\n          food: 0,\r\n          accommodation: 0,\r\n          transport: 0,\r\n          multimedia: 0,\r\n          leisure: 0,\r\n          gear: 0,\r\n          health_insurance: 0,\r\n          general: 0\r\n        });\r\n                \r\n        this.totalCategories = this.objectToArray(temp).filter((item) => {\r\n          return item.amount > 0;\r\n        }).sort((a, b) => {\r\n          return b.amount - a.amount;\r\n        });\r\n    })\r\n\r\n    this.calculateChartData().subscribe((options)=>{\r\n      if(options){\r\n        this.chartData = [...options.data].reverse().splice(1).filter((element)=>{\r\n          return element.y >0\r\n        });\r\n        this.drawChart(options);\r\n      }\r\n    });\r\n  }\r\n\r\n  chartOpened= false;\r\n  toggleChart(){\r\n    this.chartOpened = !this.chartOpened\r\n  }\r\n\r\n\r\n  /**\r\n   * Since the chart starts with 5 entries and scroll position equals left border, we want \r\n   * the scroll position to be in the middle of the chart\r\n   * @param number: index of item in array\r\n   */\r\n  getNormalizedStartMonth(number: number){\r\n    if(number>=3){\r\n      return number-3;\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  public activeCategory= null;\r\n\r\n  public toggleCategory(index:number, categoryTotal: CategoryTotal){\r\n    if(this.activeCategory == index){\r\n      this.activeCategory = null;\r\n      this.limitedCategory$.next(null)\r\n    }else{\r\n      this.activeCategory= index;\r\n      this.limitedCategory$.next(categoryTotal.category)\r\n    }\r\n  }\r\n\r\n  private calculateChartData(): Observable<ChartData>{\r\n    return combineLatest(this.expenses$, this.currentFilter$).pipe(\r\n      map(([expenses,filter])=>{   \r\n        if(expenses.length>0){\r\n          //TODO\r\n        }\r\n        // group all expensses in new object with accummulated amount\r\n        let monthTotalsObject =\r\n        expenses.filter((expense)=>{\r\n          let matches = false;\r\n          if(filter.groups){\r\n            filter.groups.forEach(groupFilter => {\r\n              if (!matches) {\r\n                matches = expense.group.toLowerCase() == groupFilter.toLowerCase()\r\n              }\r\n            });\r\n          }else{\r\n            //no groups selected so all expenses valid\r\n            matches = true;\r\n          }\r\n          return matches;\r\n        }).reduce((acc, cur)=>{\r\n          let oldAmount = acc[cur.date.substring(0,7)]?.amount ? acc[cur.date.substring(0,7)]?.amount : 0;\r\n          acc[cur.date.substring(0,7)]= {...acc[cur.date.substring(0,7)], ...{amount: oldAmount+cur.amount}}\r\n          return acc;\r\n        }, {});\r\n\r\n        //sort groups by month and convert to array\r\n        let monthTotalsSorted = this.monthTotalObjectToArray(monthTotalsObject).sort((a,b)=>{\r\n          return new Date(a.month).getTime() - new Date(b.month).getTime()\r\n        }).filter(el=>{\r\n          return new Date(el.month) <= new Date()\r\n        });\r\n        if(monthTotalsSorted.length >0){\r\n\r\n          let filledTotals: {month: string, amount: number}[]= [];\r\n          let firstMonth = new Date(monthTotalsSorted[0].month);\r\n          let lastMonth = new Date();\r\n          for (let month = firstMonth; month <=lastMonth; month=addMonths(month,1)) {\r\n            let monthString = this.filterService.getMonthDateString(month)\r\n            filledTotals.push({month: monthString, amount: 0});      \r\n          }\r\n  \r\n          // Now fill in the amounts calculated in monthTotalsSorted\r\n          monthTotalsSorted.forEach(monthTotal=> {\r\n            let indexForFilled = filledTotals.findIndex(el=>{\r\n              return el.month === monthTotal.month\r\n            });\r\n            filledTotals[indexForFilled].amount = monthTotal.amount;\r\n          });\r\n  \r\n          \r\n          // reduce to array of just amounts for chart\r\n          let chartData = filledTotals.map(el=>{\r\n            return{x:Date.UTC(new Date(el.month).getFullYear(), (new Date(el.month).getMonth()), 1), y: el.amount}          \r\n          });\r\n        \r\n          chartData.push({x: Date.UTC(new Date().getFullYear(), new Date().getMonth()+1,0),y:null})      \r\n          \r\n          let currentIndex = filledTotals.findIndex(el=>{\r\n            return el.month === this.filterService.getCurrentMonthFilter()\r\n          });\r\n  \r\n          return {\r\n            data: chartData,\r\n            chartStartDate:  Date.UTC(new Date(filledTotals[0].month).getFullYear(), new Date(filledTotals[0].month).getMonth(), 0),\r\n            currentMonthIndex: currentIndex\r\n          }\r\n        }\r\n        //create new array with all of the months from begin to finish adn initialize for chart with null\r\n      })\r\n    )\r\n  }\r\n\r\n  private drawChart(chartData: ChartData ) {\r\n    this.chartOptions = {\r\n      title: {\r\n        text: null,\r\n        style: {\r\n          color: '#272727'\r\n        }\r\n      },\r\n      tooltip: { enabled: false },\r\n      chart: {\r\n        backgroundColor: \"#eee\",\r\n        animation: false,\r\n        scrollablePlotArea: {\r\n          minWidth: chartData.data.length*50, //amountOfEntries *50px\r\n          opacity: 0.9,\r\n          scrollPositionX: (1/(chartData.data.length-5))*this.getNormalizedStartMonth(chartData.currentMonthIndex) // 1/ amountOfEntries * startMonth from begin ignoring 5 first entries \r\n        }\r\n      },\r\n      plotOptions: {\r\n        line: {\r\n          animation: false,\r\n          pointStart: chartData.chartStartDate,\r\n          // pointInterval: 24 * 3600 * 1000 * 30\r\n        },\r\n        series: {\r\n          states: {\r\n            hover: {\r\n              enabled: false\r\n            }\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        enabled: false\r\n      },\r\n      xAxis: {\r\n        min: chartData.chartStartDate,\r\n        allowDecimals: false,\r\n        type: 'datetime',\r\n        tickInterval: 30 * 24 * 3600 * 1000, //one month\r\n        labels: {\r\n          // rotation: 90,\r\n          // align: \"left\",\r\n          overflow: 'justify'\r\n        },\r\n        crosshair: {\r\n          width: 0\r\n        },\r\n      },\r\n      yAxis: {\r\n        opposite: false,      \r\n        gridLineColor: \"#ccc\",\r\n        min: 0,\r\n        title: {\r\n          text: null\r\n        },\r\n        labels: {\r\n          formatter: function () {\r\n            return this.value + \"€\"\r\n          }\r\n        }\r\n      },\r\n      colors: [\"#444\"],\r\n      series: [{\r\n        data: chartData.data,\r\n        type: 'line',\r\n        softThreshold: true\r\n      }]\r\n    };\r\n  }\r\n\r\n  private objectToArray(obj: any): CategoryTotal[] {\r\n    return Object.keys(obj).map(key => {\r\n      return { category: key, amount: obj[key] }\r\n    });\r\n  }\r\n\r\n  private monthTotalObjectToArray(obj: any): {month: string, amount: number}[] {\r\n    return Object.keys(obj).map(key => {\r\n      return { month: key, amount: obj[key].amount }\r\n    });\r\n  }\r\n\r\n  private matchesFilter(expense: Expense, filter: ExpenseFilter, monthSwitch: MonthYear): boolean {\r\n    let matches = true;\r\n    let expenseYear = expense.date.substring(0, 4);\r\n    let expenseMonth = expense.date.substring(5, 7);\r\n\r\n    if (monthSwitch) {\r\n      matches = expenseYear == monthSwitch.year && expenseMonth == monthSwitch.month;\r\n    } else {\r\n      if (filter.date) {\r\n        matches = expenseYear == filter.date.year && expenseMonth == filter.date.month;\r\n      } else {\r\n        //take all data change nothing...BUT if last30Days then \r\n        if (filter.last30Active) {\r\n          //leading zeros lead to wrong time for the Date. FIXME: Dirty solution \r\n          let expenseDate = new Date(new Date(expense.date).getFullYear(),new Date(expense.date).getMonth(),new Date(expense.date).getDate());\r\n          matches = isWithinInterval(expenseDate, { start: subDays(new Date(), 30), end: new Date() })\r\n        }\r\n      }\r\n    }\r\n\r\n    if (matches && filter.groups) {\r\n      let matchesInternal = false;\r\n      //OR-comparison, true if one of the filters is true\r\n      filter.groups.forEach(groupFilter => {\r\n        if (!matchesInternal) {\r\n          matchesInternal = expense.group.toLowerCase() == groupFilter.toLowerCase()\r\n        }\r\n      })\r\n      matches = matchesInternal;\r\n    }\r\n    return matches\r\n  }\r\n}\r\n","<div class=\"home-component-container\" (click)=\"collapseNotifier.next()\"\r\n  [class.no-filters]=\"!(currentFilter$ | async)?.date && !(currentFilter$ | async)?.groups && !(currentFilter$ | async)?.last30Active\">\r\n  <div class=\"general\" *ngIf=\"totalAmount >0\">\r\n    <div class=\"total-amount\" >\r\n      <span>{{totalAmount | prettyCurrency}}</span>\r\n    </div>\r\n\r\n    <i class=\"material-icons chart-icon\" [class.active]=\"chartOpened\" (click)=\"toggleChart()\" *ngIf=\"chartData\">timeline</i>\r\n\r\n    <div style=\"position: relative; z-index: 0;\" *ngIf=\"chartOpened\" class=\"chart-section\">\r\n      <highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"chartOptions\"\r\n        style=\"width: 100%; height: 265px; display: block;\" class=\"highcharts-chart\">\r\n      </highcharts-chart>\r\n\r\n      <div class=\"chart-list\">\r\n        <div class=\"month-item\" *ngFor=\"let item of chartData\">\r\n          <span class=\"month\">{{item.x | date: 'MMM y'}}</span>\r\n          <span class=\"amount\">{{item.y | prettyCurrency}}</span>          \r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chart-info-box flexbox\">\r\n        <i class=\"material-icons-outlined mr-8\">info</i>\r\n        <span>The chart will show all the months matching the groups filter. Selected date filters won't be\r\n          applied!</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"categories-total\" *ngIf=\"!chartOpened\">\r\n      <div class=\"category-item\" *ngFor=\"let total of totalCategories; let i= index\" (click)=\"toggleCategory(i,total)\" [class.category-limited]=\"activeCategory !== null\" [class.selected]=\"activeCategory == i\">\r\n        <div class=\"color-badge\" [style.background-color]=\"categoryService.categoryColors[total.category]\"></div>\r\n        <span class=\"category\" *ngIf=\"total.category !== 'health_insurance'\">{{total.category}} </span>\r\n        <span class=\"category\" *ngIf=\"total.category === 'health_insurance'\">Health & Insurance </span>\r\n        <span class=\"amount\"> {{total.amount | prettyCurrency}}</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <app-expense-list [expenses]=\"expenses\" [collapseNotifier]=\"collapseNotifier\" *ngIf=\"expenses?.length >0 && !chartOpened\">\r\n  </app-expense-list>\r\n\r\n  <div class=\"filter-container\" [class.active]=\"filterService.filterShown$ | async\">\r\n    <app-filter></app-filter>\r\n  </div>\r\n\r\n  <div class=\"no-expenses-placeholder\" *ngIf=\"expenses?.length === 0\">\r\n    <div>No expenses yet</div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { SliderService } from 'src/app/services/slider/slider.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap, share, tap } from 'rxjs/operators';\r\nimport { ExpenseService, Expense } from 'src/app/services/expenses/expense.service';\r\nimport { FilterService } from 'src/app/services/filter/filter.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.less']\r\n})\r\nexport class SearchComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(\"searchInput\") public searchInputElement: ElementRef;\r\n  public seachtext: string;\r\n  componentDestroyed$: Subject<void> = new Subject();\r\n\r\n  public searchTerm$: Subject<string>;\r\n  public majorTerm$: Subject<string>;\r\n  public majorResult$: Observable<any>\r\n\r\n  public results$: Observable<Expense[]>\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public matchesFound: number;\r\n  public matchesTotalAmount: number;\r\n\r\n  public majorSystemEasterEggActive: boolean = false;\r\n\r\n\r\n  constructor(\r\n    public sliderService: SliderService,\r\n    private expenseService: ExpenseService,\r\n    private filterService: FilterService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchTerm$ = new Subject<string>();\r\n    this.majorTerm$ = new Subject<string>();\r\n    this.majorResult$ = this.majorTerm$.pipe(\r\n      debounceTime(600),\r\n      distinctUntilChanged(),\r\n      filter(term => term.length > 0),\r\n      map(term => {\r\n        return this.translateWordToNumberRecursive(term)\r\n      })\r\n    )\r\n\r\n    this.results$ = this.searchTerm$.pipe(\r\n      debounceTime(600),\r\n      distinctUntilChanged(),\r\n      filter(term => term.length > 0),\r\n      switchMap((term) => this.getSearchResult(term))\r\n    );\r\n    this.results$.subscribe(expenses => {\r\n      this.matchesFound = expenses.length;\r\n      this.matchesTotalAmount = expenses.reduce((acc, cur) => {\r\n        return acc + cur.amount\r\n      }, 0)\r\n    })\r\n\r\n\r\n\r\n    //Collapse first in case of opened when new results come in\r\n    this.results$.subscribe(() => {\r\n      this.collapseNotifier.next();\r\n    })\r\n  }\r\n\r\n  translateWordToNumberRecursive(word: string): string {\r\n    let noDoubles = this.removedoubleLetters(word);\r\n    let normalizedWord = noDoubles.replace(/[aeiou]/ig, '').toLowerCase();\r\n    let res = this._translateWordToNumberRecursive(\"\", normalizedWord)\r\n    return res;\r\n  }\r\n\r\n  _translateWordToNumberRecursive(result: string, rest: string): string {\r\n    if (rest.length == 0) {\r\n      return result\r\n    } else {\r\n      switch (true) {\r\n        case (rest.startsWith(\"sch\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(3))\r\n        case (rest.startsWith(\"ch\")): case (rest.startsWith(\"sh\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(2))\r\n        case (rest.startsWith(\"ck\")):\r\n          return this._translateWordToNumberRecursive(result + \"7\", rest.substring(2))\r\n        case (rest.startsWith(\"s\")): case (rest.startsWith(\"z\")):\r\n          return this._translateWordToNumberRecursive(result + \"0\", rest.substring(1))\r\n        case (rest.startsWith(\"th\")):\r\n          return this._translateWordToNumberRecursive(result + \"1\", rest.substring(2))\r\n        case (rest.startsWith(\"t\")): case (rest.startsWith(\"d\")):\r\n          return this._translateWordToNumberRecursive(result + \"1\", rest.substring(1))\r\n        case (rest.startsWith(\"n\")):\r\n          return this._translateWordToNumberRecursive(result + \"2\", rest.substring(1))\r\n        case (rest.startsWith(\"m\")):\r\n          return this._translateWordToNumberRecursive(result + \"3\", rest.substring(1))\r\n        case (rest.startsWith(\"r\")):\r\n          return this._translateWordToNumberRecursive(result + \"4\", rest.substring(1))\r\n        case (rest.startsWith(\"l\")):\r\n          return this._translateWordToNumberRecursive(result + \"5\", rest.substring(1))\r\n        case (rest.startsWith(\"j\")):\r\n          return this._translateWordToNumberRecursive(result + \"6\", rest.substring(1))\r\n        case (rest.startsWith(\"c\")): case (rest.startsWith(\"k\")): case (rest.startsWith(\"g\")): case (rest.startsWith(\"q\")):\r\n          return this._translateWordToNumberRecursive(result + \"7\", rest.substring(1))\r\n        case (rest.startsWith(\"f\")): case (rest.startsWith(\"v\")): case (rest.startsWith(\"w\")):\r\n          return this._translateWordToNumberRecursive(result + \"8\", rest.substring(1))\r\n        case (rest.startsWith(\"ph\")):\r\n          return this._translateWordToNumberRecursive(result + \"8\", rest.substring(2))\r\n        case (rest.startsWith(\"p\")): case (rest.startsWith(\"b\")):\r\n          return this._translateWordToNumberRecursive(result + \"9\", rest.substring(1))\r\n        default:\r\n          return this._translateWordToNumberRecursive(result, rest.substring(1))\r\n      }\r\n    }\r\n  }\r\n\r\n  removedoubleLetters(word: string): string {\r\n    let arr = Array.from(word);\r\n    let result = \"\"\r\n    arr.forEach(char => {\r\n      if (result.length == 0 || char != result.charAt(result.length - 1)) {\r\n        result += char;\r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  getSearchResult(terms: string): Observable<Expense[]> {\r\n    let singleTerms = terms.toLowerCase().split(\",\");\r\n    //remove leading and ending whitespace after splitting\r\n    if (singleTerms[0] && singleTerms[0] == \"major\") {\r\n      //Easter egg, for Major system screen ;)\r\n      this.majorSystemEasterEggActive = true;\r\n      return new Observable<Expense[]>()\r\n    } else {\r\n      this.majorSystemEasterEggActive = false;\r\n      let normalizedTerms = singleTerms.map(el => {\r\n        let res = el;\r\n        if (el[0] === ' ') {\r\n          res = res.substring(1);\r\n        }\r\n        if (el[el.length - 1] === ' ') {\r\n          res = res.substring(0, res.length - 1);\r\n        }\r\n        return res;\r\n      });\r\n      return this.expenseService.getExpenses(\"expenses\").pipe(\r\n        map(expenses => {\r\n          return expenses.filter(expense => {\r\n            let matches = true;\r\n            normalizedTerms.forEach(singleTerm => {\r\n              if (matches) {\r\n                matches = expense.name.toLowerCase().includes(singleTerm) || expense.description.toLowerCase().includes(singleTerm) || expense.group.toLowerCase().includes(singleTerm);\r\n                let expenseDate = new Date(expense.date);\r\n                let matchesDate = true;\r\n                let dateSegments = singleTerm.split(\".\")\r\n                for (let i = 0; i < dateSegments.length; i++) {\r\n                  if (matchesDate) {\r\n                    if (!parseInt(dateSegments[i]) && !(dateSegments[i] == \"\")) {\r\n                      matchesDate = false;\r\n                      break; // break loop not a date\r\n                    }\r\n                    // first day, month, year\r\n                    if (i == 0) {\r\n                      matchesDate = parseInt(dateSegments[i]) == expenseDate.getDate();\r\n                    } else if (i == 1) {\r\n                      //this is for the case \"22.\"\r\n                      if (dateSegments[i] !== \"\") {\r\n                        matchesDate = parseInt(dateSegments[i]) == expenseDate.getMonth() + 1;\r\n                      }\r\n                    } else if (i == 2) {\r\n                      //this is for the case \"22.03.\" with ending dot leading to third segment\r\n                      if (dateSegments[i] !== \"\") {\r\n                        matchesDate = parseInt(dateSegments[i]) == expenseDate.getFullYear();\r\n                      }\r\n                    } else {\r\n                      matchesDate = false;\r\n                      break; // break loop not a date (can't have more than 3 segments 12.2.2020)\r\n                    }\r\n                  } else {\r\n                    break;\r\n                  }\r\n                }\r\n                matches = matches || matchesDate\r\n              } else {\r\n                return matches;\r\n              }\r\n            });\r\n            return matches;\r\n          }).reverse().sort((a, b) => this.filterService.dateSorter(a.date, b.date))\r\n        })\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.searchInputElement.nativeElement.focus();\r\n  }\r\n\r\n  public clear() {\r\n    this.seachtext = \"\";\r\n    this.searchTerm$.next(\"\");\r\n    this.searchInputElement.nativeElement.focus();\r\n  }\r\n\r\n}\r\n","<div class=\"search-component-container w-100\">\r\n  <app-header>\r\n    <div class=\"flexbox align p-0-8 h-100\">\r\n      <div class=\"flex-1 mr-8 search-bar-input-container\">\r\n        <i matIcon class=\"material-icons-outlined search-input-icon-prefix\">search</i>\r\n        <input (keyup)=\"searchTerm$.next($event.target.value)\" [(ngModel)]=\"seachtext\" class=\"searchbar-input w-100\"\r\n          id=\"searchbar-to-focus\" type=\"text\" matInput #searchInput>\r\n        <i matIcon class=\"material-icons-outlined search-input-icon-suffix\" (click)=\"clear()\">close</i>\r\n      </div>\r\n\r\n      <span (click)=\"sliderService.hide()\">cancel</span>\r\n    </div>\r\n  </app-header>\r\n\r\n  <div class=\"search-results\" (click)=\"collapseNotifier.next()\" *ngIf=\"!majorSystemEasterEggActive\">\r\n    <div *ngIf=\"(results$ | async)?.length >0\">{{matchesFound}} results ( {{matchesTotalAmount | prettyCurrency}})</div>\r\n    <div *ngIf=\"(results$ | async)?.length ==0 \" class=\"no-expenses\">No expenses found!</div>\r\n    <app-expense-list [expenses]=\"results$ | async\" [collapseNotifier]=\"collapseNotifier\"></app-expense-list>\r\n  </div>\r\n\r\n  <div class=\"major-system-container\" *ngIf=\"majorSystemEasterEggActive\">\r\n      <div class=\"header\">Major System Easter-Egg</div>\r\n    <input type=\"text\" (keyup)=\"majorTerm$.next($event.target.value)\" matInput>\r\n    {{majorResult$ | async}}\r\n    <div class=\"major-table\">\r\n        <div><span>0</span><span>s, z</span> (House)</div>\r\n        <div><span>1</span><span>t, d, th</span> (Taxi)</div>\r\n        <div><span>2</span><span>n</span> (Honey)</div>\r\n        <div><span>3</span><span>m</span> (Omaha)</div>\r\n        <div><span>4</span><span>r</span> (Hurry)</div>\r\n        <div><span>5</span><span>l</span> (Holy)</div>\r\n        <div><span>6</span><span>j, ch, sh, sch</span> (Joy)</div>\r\n        <div><span>7</span><span>c, k, g, q, ck</span> (High)</div>\r\n        <div><span>8</span><span>v, f, ph, w</span> (Fee)</div>\r\n        <div><span>9</span><span>p, b</span> (Bee)</div>\r\n    </div>\r\n  \r\n  </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { GroupsService } from 'src/app/services/groups/groups.service';\n\n@Component({\n  selector: 'app-settings-bottom-sheet',\n  templateUrl: './settings-bottom-sheet.component.html',\n  styleUrls: ['./settings-bottom-sheet.component.less']\n})\nexport class SettingsBottomSheetComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public group: any,\n    private bottomSheetRef: MatBottomSheetRef<SettingsBottomSheetComponent>,\n    private groupsService: GroupsService,\n  ) { }\n\n  ngOnInit(): void {\n    this.bottomSheetRef.backdropClick().subscribe(()=>{\n      document.body.style.backgroundColor=\"#76757b\";\n    });\n  }\n\n  deleteGroup() {\n    if (confirm(`Are you sure you want to finish \"${this.group.groupName}\"? This won't delete the expenses you added! You simply can't assign any more expenses to it.`)) {\n      this.groupsService.deleteGroup(this.group.key, this.group.groupName);\n      this.dismiss();\n    }\n  }\n\n  close(event: MouseEvent): void {\n    this.dismiss();\n    event.preventDefault();\n  }\n\n  private dismiss(){\n    document.body.style.backgroundColor=\"#76757b\";\n    this.bottomSheetRef.dismiss();\n  }\n\n}\n","<div class=\"settings-group-menu\">\n    <div class=\"option-container\">\n        <div class=\"delete menu-item\" (click)=\"deleteGroup()\">Finish group</div>\n    </div>\n    <div class=\"cancel menu-item\" (click)=\"close($event)\">Cancel</div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Observable, Subject, combineLatest } from 'rxjs';\r\nimport { GroupsService, GroupItem } from 'src/app/services/groups/groups.service';\r\nimport { CategoryService } from 'src/app/services/category/category.service';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { SettingsBottomSheetComponent } from './settings-bottom-sheet/settings-bottom-sheet.component';\r\nimport { Expense, ExpenseService } from 'src/app/services/expenses/expense.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('out', style({\r\n        opacity: '0',\r\n        overflow: 'hidden',\r\n        height: '0px',\r\n        width: '0px',\r\n      })),\r\n      state('in', style({\r\n        opacity: '1',\r\n        overflow: 'hidden',\r\n        height: '*',\r\n        width: '*'\r\n      })),\r\n      transition('out => in', animate('150ms ease-in-out')),\r\n      transition('in => out', animate('150ms ease-in-out'))\r\n    ])\r\n  ],\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.less']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  @ViewChild(\"addGroupsInput\") public addGroupsInputElement: ElementRef;\r\n  @ViewChild(\"qrCode\") QrCode: ElementRef;\r\n\r\n  constructor(\r\n    private groupsService: GroupsService,\r\n    private categoryService: CategoryService,\r\n    private bottomSheet: MatBottomSheet,\r\n    private expenseService: ExpenseService,\r\n    private datePipe: DatePipe\r\n  ) { }\r\n\r\n  public groups$: Observable<GroupItem[]>;\r\n  public newGroupInputValue: string;\r\n  public defaultGroupSelected: string;\r\n  public defaultCategorySelected: string;\r\n  public recurringExpenses$: Observable<Expense[]>;\r\n  public collapseNotifier: Subject<void> = new Subject();\r\n  public shareShown: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.groups$ = this.groupsService.getGroups();\r\n    this.recurringExpenses$ = this.expenseService.getExpenses(\"recurringExpenses\");\r\n    //TODO : Dirty workaround \r\n    setTimeout(() => {\r\n      this.defaultGroupSelected = this.groupsService.defaultGroup;\r\n    }, 100);\r\n    this.defaultCategorySelected = this.categoryService.defaultCategory;\r\n    this.checkRecurringExists();\r\n  }\r\n\r\n  hardReloadApp() {\r\n    let shallUpdate = confirm(\"Updating resets the offline cached app. Data will still remain!\");\r\n    if (shallUpdate) {\r\n      navigator.serviceWorker.getRegistrations().then(function (registrations) {\r\n        for (let registration of registrations) {\r\n          registration.unregister()\r\n        }\r\n      })\r\n      this.reloadApp();\r\n    }\r\n  }\r\n\r\n  reloadApp() {\r\n    window.location.reload();\r\n  }\r\n\r\n  /**\r\n   * Downloads all of the data (expenses, recurringExpenses, groups) as a snapshot in a .json file\r\n   */\r\n  public downloadBackup() {\r\n    combineLatest(this.expenseService.getExpenses(\"expenses\"), this.expenseService.getExpenses(\"recurringExpenses\"), this.groupsService.getGroups())\r\n      .pipe(take(1))\r\n      .subscribe(([expenses, recurringExpenses, groups]) => {\r\n        let data = { expenses, recurringExpenses, groups };\r\n        let fileName = `Expense_backup_${this.datePipe.transform(new Date(), 'MMM y').split(' ').join('_')}`\r\n        this.downloadObjectAsJson(data, fileName)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * gets called when a file has been chosen in the file-input\r\n   * @param event FileUploadEvent\r\n   */\r\n  onImport(event) {\r\n    var file = event.srcElement.files[0];\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = (e) => {\r\n        this.loadDataIntoApp(JSON.parse(e.target.result as string))\r\n      }\r\n      reader.onerror = (e) => {\r\n        console.log('error reading file');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loads all of the backup into the IndexedDB\r\n   * @param json data containing expenses, recurringExpenses, groups\r\n   */\r\n  loadDataIntoApp(json: { expenses: Expense[], recurringExpenses: Expense[], groups: GroupItem[] }) {\r\n    // add normal expenses\r\n\r\n    if (confirm(\"Please confirm you want to load this backup into your app\")) {\r\n      json.expenses.forEach(expense => {\r\n        delete expense.key;\r\n        // if(!expense.recurring){\r\n        this.expenseService.addExpense(expense, \"expenses\")\r\n        // }\r\n      });\r\n\r\n      // add recurring expenses\r\n      json.recurringExpenses.forEach(expense => {\r\n        delete expense.key;\r\n        this.expenseService.addExpense(expense, \"recurringExpenses\", true)\r\n      });\r\n\r\n      // add groups\r\n      json.groups.forEach(group => {\r\n        this.groupsService.addGroup(group.groupName);\r\n      });\r\n\r\n      alert(\"Data loaded successfully\")\r\n    }\r\n\r\n  }\r\n\r\n  public deleteData() {\r\n    if (confirm(\"This will delete all expenses and data associated on this device\")) {\r\n      if (confirm(\"Are you REALLY sure?\")) {\r\n        this.expenseService.clearData(\"expenses\");\r\n        this.expenseService.clearData(\"recurringExpenses\")\r\n        this.groupsService.clearData();\r\n      }\r\n    }\r\n  }\r\n\r\n  private downloadObjectAsJson(exportObj, exportName) {\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    console.log(\"should download now\")\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  /**\r\n   * call group/category service and update currently selected in subnject and localstorage\r\n   */\r\n  public defaultGroupChanged() {\r\n    this.groupsService.setDefaultGroup(this.defaultGroupSelected);\r\n  }\r\n\r\n  /**\r\n   * call group/category service and update currently selected in subnject and localstorage\r\n   */\r\n  public defaultCategoryChanged() {\r\n    this.categoryService.setDefaultCategory(this.defaultCategorySelected);\r\n  }\r\n\r\n  addGroup() {\r\n    if (!this.newGroupInputValue) {\r\n      this.addGroupsInputElement.nativeElement.focus();\r\n    } else {\r\n      this.groupsService.addGroup(this.newGroupInputValue);\r\n      this.newGroupInputValue = \"\";\r\n    }\r\n  }\r\n\r\n  openBottomSheet(e: MouseEvent, group: any): void {\r\n    document.body.style.backgroundColor = \"#4f5053\";\r\n    e.stopPropagation();\r\n    this.bottomSheet.open(SettingsBottomSheetComponent, { data: group });\r\n  }\r\n\r\n  /**\r\n   * Since the height animation overflows the end of scroll by making the container higher then before, one can't see he animation since its happening off-screen\r\n   * Therefore during the animation each frame we scroll to the bottom of the currently animated box\r\n   */\r\n  public animating = false;\r\n\r\n  toggleShare() {\r\n    const _scrollWithAnimation = () => {\r\n      if (this.animating) {\r\n        requestAnimationFrame(() => {\r\n          console.log(\"animated\")\r\n          this.QrCode.nativeElement.scrollIntoView({ block: \"end\" });\r\n          _scrollWithAnimation();\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!this.shareShown) {\r\n      this.animating = true\r\n      _scrollWithAnimation()\r\n      setTimeout(() => {\r\n        this.animating = false;\r\n      }, 250);\r\n    }\r\n    this.shareShown = !this.shareShown;\r\n  }\r\n\r\n  public recurringExists: boolean =false;\r\n  checkRecurringExists(){\r\n    this.recurringExpenses$.subscribe((rec=>{\r\n      if(rec.length>0){\r\n        this.recurringExists= true;\r\n      }else{\r\n        this.recurringExists= false;\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"settings-component-container\" (click)=\"collapseNotifier.next()\">\r\n\r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Recurring expenses</span>\r\n      </div>\r\n      <div *ngIf=\"!recurringExists\" class=\"no-recurring-expenses\">No recurring expenses yet</div>\r\n      <div class=\"p-8\" [class.empty-list]=\"!recurringExists\">\r\n        <app-recurring-expense-list [expenses]=\"recurringExpenses$ | async\" [collapseNotifier]=\"collapseNotifier\"></app-recurring-expense-list>\r\n      </div>\r\n\r\n    </div>\r\n  </section>\r\n\r\n\r\n  <!-- <div>Categories</div> -->\r\n  <section class=\"group-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Groups</span>\r\n        <input type=\"text\" [(ngModel)]=\"newGroupInputValue\" #addGroupsInput>\r\n        <i class=\"material-icons-outlined\" (click)=\"addGroup()\">add</i>\r\n      </div>\r\n\r\n      <div class=\"group-list\">\r\n        <div class=\"group-item\" *ngFor=\"let group of groups$ | async\">\r\n          <span>{{group.groupName}}</span>\r\n          <i class=\"material-icons-outlined\" (click)=\"openBottomSheet($event, group)\">more_horiz</i>\r\n        </div>\r\n        <span *ngIf=\"(groups$ | async).length === 0\" class=\"no-items-yet\">\r\n          There are no groups yet\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"defaults-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Default form values</span>\r\n      </div>\r\n      <mat-form-field appearance=\"standard\" class=\"groups-default\">\r\n        <mat-label>Group</mat-label>\r\n        <select matNativeControl class=\"group-picker group-input-field\" [(ngModel)]=\"defaultGroupSelected\"\r\n          (change)=\"defaultGroupChanged()\">\r\n          <option value=\"General\">General</option>\r\n          <option *ngFor=\"let group of groups$ | async\" [value]=\"group.groupName\">{{group.groupName}}</option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"standard\" class=\"groups-default\">\r\n        <mat-label>Category</mat-label>\r\n        <select matNativeControl class=\"group-picker\" [(ngModel)]=\"defaultCategorySelected\"\r\n          (change)=\"defaultCategoryChanged()\">\r\n          <option value=\"food\">Food</option>\r\n          <option value=\"accommodation\">Accommodation</option>\r\n          <option value=\"transport\">Transport</option>\r\n          <option value=\"leisure\">Leisure</option>\r\n          <option value=\"multimedia\">Multimedia</option>\r\n          <option value=\"gear\">Gear</option>\r\n          <option value=\"health_insurance\">Health & Insurance</option>\r\n          <option value=\"general\">General</option>\r\n        </select>\r\n      </mat-form-field>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>Data management</span>\r\n      </div>\r\n      <div class=\"flexbox p-8\" >\r\n        <i class=\"material-icons-outlined mr-8 bigger-font\">info</i>\r\n        <p class=\"smaller-font\">This app operates fully locally on your device without any cloud backup. Uninstalling the app will delete all of your data. You can download your data as a file and load it back into the app any time after re-installing the app as long as you own that file.</p>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"downloadBackup()\">\r\n        <i class=\"material-icons-outlined mr-8\">cloud_download</i>\r\n        <span>Download backup</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\">\r\n        <i class=\"material-icons-outlined mr-8\">cloud_upload</i>\r\n        <label class=\"backup-upload-imput\">\r\n          <span>Load backup</span>\r\n          <input type=\"file\" id=\"backupUploader\" (change)=\"onImport($event)\"/>\r\n        </label>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"deleteData()\">\r\n        <i class=\"material-icons-outlined mr-8\">delete</i>\r\n        <span>Delete all data</span>\r\n      </div>\r\n      \r\n    </div>\r\n  </section>\r\n  \r\n  <section class=\"general-settings-section\">\r\n    <div class=\"section-container\">\r\n      <div class=\"groups-header\">\r\n        <span>General</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"reloadApp()\">\r\n        <i class=\"material-icons-outlined mr-8\">refresh</i>\r\n        <span>Reload Application</span>\r\n      </div>\r\n      <div class=\"flexbox align p-8\" (click)=\"hardReloadApp()\">\r\n        <i class=\"material-icons-outlined mr-8\">update</i>\r\n        <span>Update Application</span>\r\n      </div>\r\n      <div class=\"share-section flexbox column\">\r\n        <div class=\"flexbox align p-8\" (click)=\"toggleShare()\">\r\n          <i class=\"material-icons-outlined mr-8\" >share</i>\r\n          <span>Share</span>\r\n        </div>\r\n        <img #qrCode [@slideInOut]=\"shareShown ? 'in': 'out'\" src=\"../../../assets/images/qr_code.png\" alt=\"QR-Code\" class=\"qr-code\">\r\n      </div>\r\n    </div>\r\n  </section>\r\n  \r\n  <!-- <div>Monthly</div> -->\r\n  \r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  public getTextFromAudio(binaryData: Int16Array): Promise<any> {\n    return this.http.post<any>(\"/api/audio\", binaryData.buffer, { responseType: 'json' }).toPromise()\n  }\n\n  public getUserMediaStream(): Promise<MediaStream> {\n    const constraints: any = {\n      audio: {\n        \"noiseSuppression\": true\n      }\n    };\n\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nexport interface CategoryColor{\n  food: string;\n  transport: string;\n  accommodation: string;\n  multimedia: string;\n  leisure: string;\n  gear: string;\n  health_insurance: string;\n  general: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  public defaultCategory: string;\n  constructor() { \n    this.defaultCategory = localStorage.getItem(\"defaultCategory\") || \"food\"\n  }\n\n  public readonly categoryColors: CategoryColor = {\n    food: \"#749056\",//\"rgb(110, 150, 72)\",\n    accommodation: \"#5979a9\",//\"rgb(84, 94, 117)\",\n    transport: \"rgb(192, 87, 70)\",\n    multimedia: \"rgb(150, 123, 92)\",//\"rgb(189, 155, 117)\",\n    leisure: \"rgb(202, 179, 99)\",\n    gear: \"rgb(65, 97, 68)\",\n    health_insurance: \"#afafaf\",\n    general: \"rgb(82, 82, 82)\",\n  }\n\n  public setDefaultCategory(category:string){\n    localStorage.setItem(\"defaultCategory\", category)\n    this.defaultCategory = category;\n  }\n\n\n}\n","import { Expense } from './expense.service';\r\n\r\nexport const expenses: Expense[] = [\r\n    {\r\n        name: \"Döner\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2020-02-24\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n    },\r\n    {\r\n        name: \"Pizza\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-02-13\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n    },\r\n    {\r\n        name: \"Flug\",\r\n        amount: 1699,\r\n        category: \"transport\",\r\n        date: \"2020-02-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Netto\",\r\n        amount: 3900,\r\n        category: \"food\",\r\n        date: \"2020-01-18\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Restaurant zum Hirsch\",\r\n        amount: 124,\r\n        category: \"multimedia\",\r\n        date: \"2019-12-12\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"general\",\r\n        date: \"2019-12-22\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"general\",\r\n        date: \"2019-02-07\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Zug Stuttgart\",\r\n        amount: 12.3,\r\n        category: \"food\",\r\n        date: \"2020-01-16\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"food\",\r\n        date: \"2020-01-12\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-01-06\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"multimedia\",\r\n        date: \"2019-07-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Studium\"\r\n\r\n    },\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"food\",\r\n        date: \"2020-02-17\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"food\",\r\n        date: \"2020-02-22\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"multimedia\",\r\n        date: \"2020-02-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"General\"\r\n\r\n    },\r\n    {\r\n        name: \"Google Drive Abo\",\r\n        amount: 9.99,\r\n        category: \"multimedia\",\r\n        date: \"2016-05-03\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Hostel\",\r\n        amount: 45.90,\r\n        category: \"accomodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Rentenversicherung\",\r\n        amount: 63.50,\r\n        category: \"general\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Krankenversicherung\",\r\n        amount: 2505.50,\r\n        category: \"general\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Döner\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n    },\r\n    {\r\n        name: \"Pizza\",\r\n        amount: 12,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n    },\r\n    {\r\n        name: \"Familien-Essen\",\r\n        amount: 50,\r\n        category: \"transport\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Netto\",\r\n        amount: 13.87,\r\n        category: \"accommodation\",\r\n        date: \"2016-05-01\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Restaurant zum Hirsch\",\r\n        amount: 78,\r\n        category: \"food\",\r\n        date: \"2016-08-13\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Asia\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 5,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Zug Stuttgart\",\r\n        amount: 12.3,\r\n        category: \"accommodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"BlaBlaCar\",\r\n        amount: 6,\r\n        category: \"transport\",\r\n        date: \"2017-08-31\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Bus\",\r\n        amount: 12,\r\n        category: \"multimedia\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Spotify Abo\",\r\n        amount: 5,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Google Drive Abo\",\r\n        amount: 9.99,\r\n        category: \"accomodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Hostel\",\r\n        amount: 45.90,\r\n        category: \"accomodation\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Rentenversicherung\",\r\n        amount: 63.50,\r\n        category: \"general\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n\r\n    },\r\n    {\r\n        name: \"Krankenversicherung\",\r\n        amount: 105.50,\r\n        category: \"food\",\r\n        date: \"2017-07-20\",\r\n        description: \"Lorem Ipsum dolor sit amet. Consecteteur amid.\",\r\n        group: \"Trip Norway\"\r\n    },\r\n]","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { IndexedDBConnectionService } from '../indexed-dbconnection.service';\r\nimport { expenses } from \"./Expenses\";\r\nimport { GroupsService } from '../groups/groups.service';\r\nimport { groups } from '../groups/Groups';\r\nimport { isEqual, addMonths, differenceInMonths, getMonth } from 'date-fns';\r\nimport { take } from 'rxjs/operators';\r\n\r\nexport interface Expense {\r\n  name: string;\r\n  amount: number;\r\n  category: string;\r\n  group: string;\r\n  date: string;\r\n  description?: string;\r\n  recurring?: boolean;\r\n  lastUpdate?: string;\r\n  key?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseService {\r\n\r\n  private db: any;\r\n  private expenses$: Subject<Expense[]>;\r\n  private recurringExpenses$: Subject<Expense[]>;\r\n  private connection$: ReplaySubject<boolean>;\r\n  public expenseDeletedNotifier: Subject<void>;\r\n\r\n  constructor(\r\n    private indexedDBService: IndexedDBConnectionService,\r\n  ) {\r\n    this.connection$ = new ReplaySubject(1);\r\n    this.createExpenseDatabase();\r\n    this.expenses$ = new Subject<Expense[]>();\r\n    this.recurringExpenses$ = new Subject<Expense[]>();\r\n    this.expenseDeletedNotifier = new Subject();\r\n    this.checkRecurringExpenses();\r\n  }\r\n\r\n\r\n  getFormatDate(date: Date): string{\r\n    return `${date.getFullYear()}-${this.getPrettyMonth(date.getMonth()+1)}-01`\r\n  }\r\n\r\n  getPrettyMonth(number:number ): string{\r\n    if(number<10){\r\n      return 0 + number.toString();\r\n    }else{\r\n      return number.toString();\r\n    }\r\n  }\r\n\r\n  checkRecurringExpenses(){\r\n    this.getExpenses(\"recurringExpenses\").pipe(take(1)).subscribe(expenses=>{\r\n      expenses.forEach(expense=>{\r\n        if((!expense.lastUpdate || addMonths(new Date(expense.lastUpdate),1) < new Date()) && new Date()> new Date(expense.date)){\r\n          // update needed for this expense\r\n          let key= expense.key;\r\n          delete expense.lastUpdate;\r\n          delete expense.key;\r\n          this.addExpense({...expense, ...{date:this.getFormatDate(new Date(new Date().getFullYear(), new Date().getMonth()))}}, \"expenses\");\r\n          this.updateExpense(key, {...expense, ...{lastUpdate: this.getFormatDate(new Date())}}, \"recurringExpenses\")\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param expense \r\n   * @param type either 'expenses' or 'recurringExpenses'\r\n   */\r\n  public addExpense(expense: Expense, type: string, fromBackup?: boolean) {\r\n    let tx = this.db.transaction([type], 'readwrite');\r\n    let store = tx.objectStore(type);\r\n    store.add(expense);\r\n    tx.oncomplete = () => {\r\n      if(type==\"recurringExpenses\"){\r\n        if(!fromBackup){\r\n          this.addInitialRecurrentEntries(expense)\r\n        }\r\n        this.refreshExpenses(type);\r\n      }else{\r\n        this.refreshExpenses(type);\r\n      }\r\n    }\r\n    tx.onerror = (event) => {\r\n      alert('error storing expense ' + event.target.errorCode);\r\n    }\r\n  };\r\n\r\n  addInitialRecurrentEntries(expense: Expense){\r\n    let currentMonthDate = new Date( new Date().getFullYear(), new Date().getMonth());\r\n    let counter=0;\r\n    // becomes -1 once iterading date after expense date\r\n    while(differenceInMonths(currentMonthDate, addMonths(new Date(expense.date), counter))>=0){\r\n      let pastRecurrentExpense = {...expense, ...{date: this.getFormatDate(addMonths(new Date(expense.date), counter))}}\r\n      delete pastRecurrentExpense.lastUpdate;\r\n      this.addExpense(pastRecurrentExpense, \"expenses\")\r\n      counter++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all of the expenses from the IndexedDB\r\n   * @param type either \"expenses\" or \"recurring\"\r\n   */\r\n  public getExpenses(type:string): Observable<Expense[]> {\r\n    this.connection$.subscribe(()=>this.refreshExpenses(type));\r\n    if(type==\"expenses\"){\r\n      return this.expenses$.asObservable();\r\n    }else{\r\n      return this.recurringExpenses$.asObservable();\r\n    }\r\n  }\r\n\r\n  public updateExpense(key: number, value: Expense, type: string) {\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    let objectStore = transaction.objectStore(type);\r\n    let req = objectStore.put(value, key);\r\n    req.onsuccess = () => {\r\n      this.refreshExpenses(type);\r\n    }\r\n  }\r\n\r\n  public deleteExpense(key: number, type:string) {\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    let objectStore = transaction.objectStore(type);\r\n    let req = objectStore.delete(key);\r\n    this.expenseDeletedNotifier.next();\r\n    req.onsuccess = () => {\r\n      this.refreshExpenses(type);\r\n    }\r\n  }\r\n\r\n  clearData(type:string){\r\n    let transaction = this.db.transaction(type, \"readwrite\");\r\n    var objectStore = transaction.objectStore(type);\r\n    objectStore.clear();\r\n  }\r\n\r\n  /**\r\n   * Makes the Observable emit all of the new values from the DB\r\n   */\r\n  private refreshExpenses(type: string) {\r\n    let transaction = this.db.transaction([type]);\r\n    let object_store = transaction.objectStore(type);\r\n    let request = object_store.openCursor();\r\n    let result: Expense[] = []\r\n\r\n    request.onsuccess = (event) => {\r\n      let cursor = event.target.result;\r\n      if (cursor) {\r\n        let key = cursor.primaryKey;\r\n        let value = cursor.value;\r\n        result.push({ ...{ key }, ...value })\r\n        cursor.continue();\r\n      }\r\n      else {\r\n        if(type==\"expenses\"){\r\n          this.expenses$.next(result);\r\n        }else{\r\n          this.recurringExpenses$.next(result);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private createExpenseDatabase() {\r\n    let dbReq = this.indexedDBService.getConnection()\r\n\r\n    dbReq.onupgradeneeded = (event) => {\r\n      let db = (event.target as any).result;\r\n      this.indexedDBService.upgradeDatabase(db);\r\n      //For dev purposes only\r\n      // setTimeout(() => {\r\n      //   this.seedExpenses();   \r\n      //   for (const group of groups) {\r\n      //     this.addGroup(group);\r\n      //   }\r\n      // }, 1000);\r\n    }\r\n\r\n    dbReq.onsuccess = (event) => {\r\n      this.db = (event.target as any).result;\r\n      this.connection$.next(true);\r\n    }\r\n\r\n    dbReq.onerror = function (event) {\r\n      alert('error opening database ' + (event.target as any).errorCode);\r\n    }\r\n  }\r\n\r\n  public addGroup(group: string) {\r\n    let tx = this.db.transaction(['groups'], 'readwrite');\r\n    let store = tx.objectStore('groups');\r\n    store.add({groupName: group});\r\n  };\r\n\r\n  private seedExpenses(){\r\n    for (const expense of expenses) {\r\n      this.addExpense(expense, \"expenses\");\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { addMonths, subMonths } from 'date-fns';\nimport { Expense } from '../expenses/expense.service';\n\nexport interface MonthYear {\n  /**\n   * 1 being january\n   */\n  month: string;\n  year: string;\n}\n\nexport interface ExpenseFilter {\n  groups?: string[];\n  date?: MonthYear;\n  last30Active?: boolean;\n  temporaryFilter?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  public filterShown$: BehaviorSubject<boolean>;\n  public filterState$: BehaviorSubject<ExpenseFilter>;\n  public monthSwitched$: BehaviorSubject<MonthYear>\n  public sortMethod$: BehaviorSubject<string>\n\n  //Used for saving the current filter and re using it after a temrprary filter has been applied\n  public temporaryFilterStateClipboard: Partial<ExpenseFilter>\n\n  private defaultFilter: ExpenseFilter = {\n    date: {\n      month: this.getCurrentMonthFilter().substring(5),\n      year: this.getCurrentMonthFilter().substring(0, 4)\n    }\n  }\n\n  constructor() {\n    this.filterShown$ = new BehaviorSubject(false);\n\n    let initialFilter: ExpenseFilter = JSON.parse(localStorage.getItem(\"filter\")) || this.defaultFilter;\n    this.filterState$ = new BehaviorSubject(initialFilter);\n    this.monthSwitched$ = new BehaviorSubject(null);\n    this.sortMethod$ = new BehaviorSubject(localStorage.getItem(\"sortMethod\") || \"date\")\n  }\n\n  //resets a filter to its state before the temporary filter change\n  resetFilter() {\n    if (this.temporaryFilterStateClipboard) {\n      this.setFilter(this.temporaryFilterStateClipboard);\n      this.temporaryFilterStateClipboard = null;\n    }\n  }\n\n  setFilter(newFilter: Partial<ExpenseFilter>) {\n    //When choosing a cloes group a temporary filter is applied since the group isnt selectable in filter panel by default when closed. This lets you still see the groups details listing.\n    //This temporary filter has to be reset to its former state by pressing \"x\" on the UI since the expense-list should just eb a temporary overlay.\n    // pressing \"x\" will bring the expense list to its default state as it was before\n    if (newFilter.temporaryFilter && !this.temporaryFilterStateClipboard) {\n      this.temporaryFilterStateClipboard = this.filterState$.value;\n    }\n    this.filterState$.next(newFilter);\n    this.monthSwitched$.next(null);\n    localStorage.setItem(\"filter\", JSON.stringify(newFilter))\n  }\n\n  setSortMethod(method: string) {\n    localStorage.setItem(\"sortMethod\", method);\n    this.sortMethod$.next(method);\n  }\n\n  getFilter(): BehaviorSubject<ExpenseFilter> {\n    return this.filterState$;\n  }\n\n  show() {\n    this.resetFilter();\n    this.filterShown$.next(true);\n  }\n\n  hide() {\n    this.filterShown$.next(false);\n  }\n\n\n  /**\n   * Either increments or decrements the month shown\n   * @param method Either \"increment\" or \"decrement\"\n   */\n  public switchMonth(method: string) {\n    if (this.filterState$.value.date) {\n      let current: MonthYear = this.monthSwitched$.value || this.filterState$.value.date;\n\n      let incrementedDate: Date;\n      if (method === \"increment\") {\n        incrementedDate = addMonths(new Date(`${current.year}-${current.month}`), 1);\n      } else {\n        incrementedDate = subMonths(new Date(`${current.year}-${current.month}`), 1);\n      }\n\n      let incremented = { month: this.parseMonth(incrementedDate.getMonth() + 1), year: incrementedDate.getFullYear().toString() };\n      this.monthSwitched$.next(incremented)\n    }\n  }\n\n\n  /**\n   * comparator function to sort by date descending (latest first)\n   */\n  public dateSorter = (a_date: string, b_date: string) => {\n    if (!a_date || !b_date) {\n      return;\n    }\n    return this.createComparatorNumber(b_date) - this.createComparatorNumber(a_date);\n  }\n\n  public amountSorter = (a: Expense, b: Expense) => {\n    return b.amount - a.amount;\n  }\n\n\n  /**\n  * Transforms \"2020-02-15\" to 20200215, for quick sorting after date\n  */\n  private createComparatorNumber(date: string) {\n    return parseInt(date.split('-').join(''))\n  }\n\n  public getCurrentMonthFilter(): string {\n    return '' + new Date().getFullYear() + '-' + this.parseMonth(new Date().getMonth() + 1)\n  }\n\n  public getMonthDateString(date: Date) {\n    return `${date.getFullYear()}-${this.parseMonth(date.getMonth() + 1)}`\n  }\n\n  public parseMonth(month: number): string {\n    if (month > 9) {\n      return month.toString();\n    } else {\n      return `0${month}`;\n    }\n  }\n}\n","export const groups: string[] = [\"Asia\", \"Trip Norway\", \"Studium\", \"Canada\"]","import { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\nimport { IndexedDBConnectionService } from '../indexed-dbconnection.service';\nimport { groups } from './Groups';\nimport { ExpenseService } from '../expenses/expense.service';\n\nexport interface GroupItem{\n  key: number;\n  groupName: string;\n}\n\nexport interface GroupTotal extends GroupItem {\n  amount: number;\n  firstExpenseDate?: string;\n  lastExpenseDate?: string;\n  deleted?: boolean;\n  duration?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n\n  private db: any;\n  private groups$: BehaviorSubject<GroupItem[]>;\n  private connection$: ReplaySubject<boolean>;\n  public defaultGroup: string;\n\n  constructor(\n    private indexedDBService: IndexedDBConnectionService\n  ) {\n    this.connection$ = new ReplaySubject(1);\n    this.createGroupDatabase();\n    this.groups$ = new BehaviorSubject<GroupItem[]>([]);\n    this.defaultGroup = localStorage.getItem(\"defaultGroup\") || \"General\"\n  }\n\n  public addGroup(group: string) {\n    let tx = this.db.transaction(['groups'], 'readwrite');\n    let store = tx.objectStore('groups');\n    store.add({groupName: group});\n    tx.oncomplete = () => {\n      this.refreshGroups();\n    }\n    tx.onerror = (event) => {\n      alert('error storing expense ' + event.target.errorCode);\n    }\n  };\n\n  public getGroups(): Observable<GroupItem[]> {\n    this.connection$.subscribe(()=>this.refreshGroups());\n    return this.groups$.asObservable();\n  }\n\n  // optimized for overlays which don't own a route to not request double amount\n  public getGroupsWithoutUpdate(){\n    return this.groups$.asObservable();\n  }\n\n  clearData(){\n    let transaction = this.db.transaction(\"groups\", \"readwrite\");\n    let objectStore = transaction.objectStore(\"groups\");\n    objectStore.clear();\n  }\n\n\n  public deleteGroup(key: number, groupName: string) {\n    let transaction = this.db.transaction(\"groups\", \"readwrite\");\n    let objectStore = transaction.objectStore(\"groups\");\n    let req = objectStore.delete(key);\n    req.onsuccess = () => {\n      this.refreshGroups();\n    }\n    if(this.defaultGroup == groupName){\n      this.setDefaultGroup(\"General\");\n    }\n  }\n\n\n  public setDefaultGroup(group:string){\n    localStorage.setItem(\"defaultGroup\", group)\n    this.defaultGroup= group;\n  }\n\n  /**\n   * Makes the Observable emit all of the new values from the DB\n   */\n  private refreshGroups() {\n    let transaction = this.db.transaction([\"groups\"]);\n    let object_store = transaction.objectStore(\"groups\");\n    let request = object_store.openCursor();\n    let result: GroupItem[] = []\n\n    request.onsuccess = (event) => {\n      let cursor = event.target.result;\n      if (cursor) {\n        let key = cursor.primaryKey;\n        let value = cursor.value;\n        result.push({ ...{ key }, ...value })\n        cursor.continue();\n      }\n      else {\n        this.groups$.next(result)\n      }\n    };\n  }\n\n  private createGroupDatabase() {\n    let dbReq = this.indexedDBService.getConnection();\n\n    dbReq.onupgradeneeded = (event) => {\n      let db = (event.target as any).result;\n      this.indexedDBService.upgradeDatabase(db);\n    }\n\n    dbReq.onsuccess = (event) => {\n      this.db = (event.target as any).result;\n      this.connection$.next(true);\n    }\n\n    dbReq.onerror = function (event) {\n      alert('error opening database ' + (event.target as any).errorCode);\n    }\n  }\n\n  public seedGroups(){\n    for (const group of groups) {\n      this.addGroup(group);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexedDBConnectionService {\n\n  constructor() { }\n\n  upgradeDatabase(db: any){\n    const stores = db.objectStoreNames;\n\n    if (!stores.contains(\"expenses\")) {\n      db.createObjectStore('expenses', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'expenses'\")\n    }\n\n    if (!stores.contains(\"recurringExpenses\")) {\n      db.createObjectStore('recurringExpenses', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'expenses'\")\n    }\n\n    if (!stores.contains(\"groups\")) {\n      db.createObjectStore('groups', { autoIncrement: true });\n      console.log(\"Added IndexedDB store 'groups'\")\n    }\n  }\n\n  /**\n   * DB Versions:\n   * 1: expense\n   * 2: +groups\n   * 3: +recurringExpenses\n   */\n  getConnection(): IDBOpenDBRequest{\n    return indexedDB.open('ExpenseManagerDB', 3);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Expense } from '../expenses/expense.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SliderService {\r\n\r\n  private active$: BehaviorSubject<string>;\r\n  public activeComponent: string;\r\n  public currentExpenseForEdit: Expense;\r\n\r\n  constructor() {\r\n    this.active$= new BehaviorSubject<string>(null)\r\n   }\r\n\r\n  public getActiveComponent():string{\r\n     return this.activeComponent;\r\n  }\r\n\r\n  public getActiveComponentAsync():Observable<string>{\r\n    return this.active$.asObservable();\r\n  }\r\n\r\n  public show(component: string, expense?: Expense):void{\r\n    this.activeComponent= component;\r\n    if(expense){\r\n      this.currentExpenseForEdit = expense;\r\n    }\r\n    this.active$.next(component);\r\n  }\r\n\r\n  public hide():void{\r\n    if(this.currentExpenseForEdit){\r\n      this.currentExpenseForEdit = null;\r\n    }\r\n    this.activeComponent=null;\r\n    this.active$.next(null);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'localhost:3000/api'\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}